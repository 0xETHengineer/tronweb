{"version":3,"file":"4.ddfe43a62d1b24d87e06.hot-update.js","sources":["webpack:///../src/private.js"],"sourcesContent":["import {signTransaction} from './utils/crypto'\nimport {utils} from 'ethers'\nasync function timeInterval(eventName,ms,fn) {\n    let timerName = eventName+'_timer';\n    return await new Promise((resolve) => {\n        window[timerName] =setInterval(()=>{\n           fn.then((result)=>{\n               resolve(result);\n           })\n        }, ms);\n    });\n}\nexport function parseAbi(abiArray,{owner_address,contract_address}){\n    try{\n        let _this = this;\n        let returnObj = {};\n        returnObj.abi = abiArray;\n        abiArray.forEach((item)=>{\n            if(item.type =='function') {\n                returnObj[item.name] = async function () {\n                    let arrInputs = item.inputs;\n                    let arrOutputs = item.outputs;\n                    let params = [];\n                    let paramInputTypes = [];\n                    let paramInputValues = [];\n                    let paramOutputTypes = [];\n                    let function_selector = item.name;\n                    let otherParams = {};\n                    arrInputs.forEach((itemInput) => {\n                        paramInputTypes.push(itemInput.type);\n                    })\n                    arrOutputs.forEach((itemOutput) => {\n                        paramOutputTypes.push(itemOutput.type);\n                    })\n                    function_selector += `(${paramInputTypes.join(',')})`;\n                    params.push(paramInputTypes, paramInputValues);\n                    for (let i = 0; i < arguments.length; i++) {\n                        if (typeof arguments[i] == 'object') {\n                            otherParams = arguments[i];\n                        } else {\n                            paramInputValues.push(arguments[i])\n                        }\n                    }\n                    let triggerCallBackParams = {\n                        owner_address,\n                        contract_address,\n                        function_selector,\n                        parameter: params,\n                        fee_limit: otherParams.fee_limit,\n                        call_value: otherParams.call_value,\n                    }\n                    if(otherParams.fee_limit>100000000 || otherParams.fee_limit<0){\n                        throw \"fee_limit should be set between 0 and 1000000000\";\n                    }\n                    let res = await _this.triggerSmartContract(triggerCallBackParams);\n                    if (res.constant_result) {\n                        let coder = new utils.AbiCoder();\n                        if (res.constant_result.length) {\n                            //let value = res.constant_result[0];\n                            let constantArr = res.constant_result.map((item) => {\n                                return ('0x' + item);\n                            })\n                            res.constant_result = coder.decode(paramOutputTypes, constantArr[0]);\n                        }\n                    }\n                    return res;\n\n                }\n                returnObj[item.name].sendTransaction = async function (transaction, pk) {\n                    const sign_Transaction = await signTransaction(pk, transaction)\n                    const sendResult = await _this.sendRawTransaction(sign_Transaction);\n                    return sendResult;\n                }\n            }\n            if(item.type =='event'){\n                returnObj[item.name] =  function({contractAddress = contract_address,eventName,blockNum,transactionId}={}) {\n                    contractAddress = _this.fromHex(contractAddress);\n                    let _self = this;\n                    return {\n                        async fn(){\n                            let {data} =await  _this.getEventResult({\n                                contractAddress,\n                                eventName,\n                                blockNum,\n                                transactionId\n                            })\n                            return data;\n                        },\n                        watch(callback){\n                             this.fn().then((data)=>{\n                                 callback('',data)\n                             }).catch((e)=>{\n                                 callback(e.toString())\n                             })\n                             _self.timer =setInterval(()=>{\n                                 this.fn().then((data)=>{\n                                     callback('',data)\n                                 }).catch((e)=>{\n                                     callback(e.toString())\n                                 })\n                             }, 3000);\n\n                        },\n                        async get(callback){\n                            this.fn().then((data)=>{\n                                callback('',data)\n                            }).catch((e)=>{\n                                callback(e.toString())\n                            })\n                        },\n                        stopWatching(){\n                             clearInterval(_self.timer)\n                        }\n                    }\n                }\n            }\n        })\n        return returnObj;\n    }catch(err){\n        console.err(err);\n        return false;\n    }\n    \n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/private.js\n// module id = ../src/private.js\n// module chunks = 4"],"mappingssourceRoot":""}