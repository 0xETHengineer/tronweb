{"version":3,"file":"4.796a88b76baba9e8e8c9.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React,{ReactDOM} from 'react'\nimport TronWeb from '../../src/index'\nimport stringify from 'json-stringify-pretty-compact'\nimport {utils} from 'ethers'\n//let tronWeb = new TronWeb('http://52.44.75.99:8090');\n//tronWeb.setEventServer('http://52.44.75.99:18889');\n//tronWeb.defaultAccount = 'TPL66VK2gCXNCD7EJg9pgJRfqcRazjhUZY';\n//tronWeb.defaultPk='da146374a75310b9666e834ee4ad0866d6f4035967bfc76217c5a495fff9f0d0';\nlet tronWeb = new TronWeb('http://testapi.trondapps.org');\ntronWeb.setEventServer('http://testevent.trondapps.org');\ntronWeb.defaultAccount = 'TWsm8HtU2A5eEzoT8ev8yaoFjHsXLLrckb';\ntronWeb.defaultPk='8ef7dd1a81d4ef2b538daae0c20e37f4edb3fd1338aff91b03e2b8b1ed956645';\nclass Index extends React.Component{\n    state = {\n        data:{}\n    }\n    componentDidMount(){\n        let coder = new utils.AbiCoder();\n        window.tronWeb = tronWeb;\n    }\n    triggerChromeWallet(){\n        tronWeb.sendTransactionByWallet({to:'TZ3SmkD8qJK3VY8AnqN9XFiYuspEP3cwB5',amount:0.1},function(result){\n            console.log('cbk',result);\n        })\n    }\n\n    async toBigNumber(){\n        let str = '200000000000000000000001';\n        let bigNumber = tronWeb.toBigNumber(str);\n        console.log(bigNumber.toNumber(),'2.0000000000000002e+23')\n        let value = bigNumber.toString(10);\n        this.setState({\n            data:value\n        })\n\n    }\n    async getBalance(){\n        const res = await tronWeb.getBalance(this.account.value);\n        this.setState({\n            data:res\n        })\n    }\n    async getBlock(){\n        const res = await tronWeb.getBlock(this.idOrHeight.value);\n        this.setState({\n            data:res\n        })\n    } \n    async getBlockTransactionCount(){\n        const res = await tronWeb.getBlockTransactionCount(this.idOrHeight.value);\n        this.setState({\n            data:res\n        })\n    } \n    async getTransaction(){\n        const res = await tronWeb.getTransaction(this.transactionId.value);\n        this.setState({\n            data:res\n        })\n    }\n    //生成私钥和地址并存储到localStorage中\n    //该api有泄漏private key的风险，请确保在安全的环境中调用该api\n    async generateAddress(){\n        const res = await tronWeb.generateAddressOnLine();\n        this.setState({\n            data:res\n        })\n    }\n    async generateAddressOnClient(){\n        const res = await tronWeb.generateAddressOnClient();\n        this.setState({\n            data:res\n        })\n    }\n    //通过密码创建地址\n    async createAddressWithPassWord(){\n        const res = await tronWeb.createAddress('123456');\n        console.log(res);//{base58checkAddress: \"TMip2NnRKhy2Wyf1FjKG1D1yn3F1LLGCDV\",value:\"\"4180e8816651790d4d6c187eef09f90b7a19408bb8\"\n    }\n    //转账\n    async sendTransaction(e){\n        e.preventDefault();\n        const from = this.from.value;\n        const to = this.to.value;\n        const amount =parseInt(this.amount.value);\n        const pk = this.pkForTransaction.value;\n        const res = await tronWeb.sendTransaction(from,to,amount,pk);\n        this.setState({\n           data:res\n        })\n    }\n    //1、更新账户名称\n    async updateAccount(){\n        const res = await tronWeb.updateAccount('wujiaolong1009','TT67rPNwgmpeimvHUMVzFfKsjL9GZ1wGw8');\n        this.setState({\n            data:res\n        })\n    }\n    //2、Vote for the superrepresentative\n    async voteWitnessAccount(){\n        const res = await tronWeb.voteWitnessAccount('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',[{\n            vote_address:'TQxyQu5d76MaxsEF4nBf9tFa8s93nSHe8M',\n            vote_count:1\n        }]);\n        this.setState({\n            data:res\n        })\n    }\n    //3、发行token\n    async createAssetIssue(){\n        let options = {\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            name:'TestTRX',//名称\n            abbr:'TTRX',//简称\n            total_supply :100,//发行总量\n            trx_num:1,// 和 num 的兑换比例\n            num:1,\n            start_time : 1530894315158,//开始时间\n            end_time:1533894312158,//结束时间\n            description:'这是一个测试token',//描述\n            url:'http://www.baidu.com',//官网地址\n            free_asset_net_limit:10000,//免费带宽\n            public_free_asset_net_limit:10000,// 每个token用户能使用本token的免费带宽\n            frozen_supply:{\n                frozen_amount:1,//发行者在发行的时候指定冻结的token\n                frozen_days:2 //冻结的天数\n            }\n        }\n        const res = await tronWeb.createToken(options)\n        this.setState({\n            data:res\n        })\n    }\n    //5、 Apply to be a superrepresentative\n    async createWitness(){\n        const res = await tronWeb.createWitness('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9','http://www.xxx.com');\n        this.setState({\n            data:res\n        })\n    }\n    //6、 Transfer token\n    async transferAsset(){\n        const res = await tronWeb.transferAsset({\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            to_address:'TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL',\n            asset_name:'ZZZ',\n            amount:1\n        });\n        this.setState({\n            data:res\n        })\n    }\n    //7、 Participation in token distribution\n    async participateAssetIssue(){\n        const res = await tronWeb.transferAsset({\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            to_address:'TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL',\n            asset_name:'ZZZ',\n            amount:1\n        });\n        this.setState({\n            data:res\n        })\n    }\n    //8、 解冻已经技术冻结期的 TRX\n    async unfreezeBalance(){\n        let res = await tronWeb.unfreezeBalance('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //9、解冻已经结束冻结期的 token\n    async unfreezeAsset(){\n        let res = await tronWeb.unfreezeAsset('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //10、超级代表提现奖励到balance,每24小时可提现一次\n    async withdrawBalance(){\n        let res = await tronWeb.withdrawBalance('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //11、修改token信息\n    async updateAsset(){\n        const res = await tronWeb.updateAsset({\n            owner_address:\"TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9\",\n            description: 'test',\n            url: 'http://www.baidu.com',\n            new_limit : 1000000,\n            new_public_limit : 100\n        });\n        this.setState({\n            data:res\n        })\n    }\n    //12、查询api所在机器连接的节点\n    async listNodes(){\n        let res = await tronWeb.listNodes();\n        this.setState({\n            data:res\n        })\n    }\n    //13、查询账户发行的token\n    async getAssetIssueByAccount(){\n        let res = await tronWeb.getAssetIssueByAccount('TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL');\n        this.setState({\n            data:res\n        })\n    }\n    //14、根据名称查询token\n    async getAssetIssueByName(){\n        let res = await tronWeb.getAssetIssueByName('ZZZ');\n        this.setState({\n            data:res\n        })\n    }\n    //15、查询最新块\n    async blockNumber(){\n        let res = await tronWeb.blockNumber();\n        this.setState({\n            data:res\n        })\n    }\n    //16、通过高度查询块\n    async getBlockByNum(){\n        let res = await tronWeb.getBlockByNum(869015);\n        this.setState({\n            data:res\n        })\n    }\n    //17、通过id查询块\n    async getBlockById(){\n        let res = await tronWeb.getBlockById('00000000000d429759175a43cb3e112d0761ecabf06ef0c253affe1420977651');\n        this.setState({\n            data:res\n        })\n    }\n    //18、按照范围查询块\n    async getBlockByLimitNext(){\n        let res = await tronWeb.getBlockByLimitNext(869010,869015);\n        this.setState({\n            data:res\n        })\n    }\n    //19、﻿查询最新的几个块\n    async getBlockByLatestNum(){\n        let res = await tronWeb.getBlockByLatestNum(5);\n        this.setState({\n            data:res\n        })\n    }\n\n    //20、通过ID查询交易\n    async getTransactionById(){\n        let res = await tronWeb.getTransactionById('0689352aff84a0ff3691502bca94b1ded40abb4aa8806b313acb59a34cf10c22')\n        this.setState({\n            data:res\n        })\n    }\n    //21、查询所有超级代表列表\n    async listWitNesses(){\n        let res = await tronWeb.listWitNesses();\n        this.setState({\n            data:res\n        })\n    }\n    //22、查询所有token列表\n    async getAssetIssueList(){\n        let res = await tronWeb.getAssetIssueList();\n        this.setState({\n            data:res\n        })\n    }\n    //23、分页查询token列表\n    async getPaginateDassetIssueList(){\n        let res = await tronWeb.getPaginateDassetIssueList(1,10);\n        this.setState({\n            data:res\n        })\n    }\n    //24、统计所有交易总数\n    async totalTransaction(){\n        let res = await tronWeb.getTransactionCount();\n        this.setState({\n            data:res\n        })\n    }\n    //25、获取下次统计投票时间\n    async getNextMaintenanceTime(){\n        let res = await tronWeb.getNextMainteNanceTime();\n        this.setState({\n            data:res\n        })\n    }\n    //26、检查地址是否正确\n    async validateAddress(){\n        let res = await tronWeb.validateAddress('TZ3SmkD8qJK3VY8AnqN9XFiYuspEP3cwB5');\n        this.setState({\n            data:res\n        })\n    }\n    //27、部署合约\n    async deployContract(event){\n        event.preventDefault();\n        let myContract = tronWeb.contract(JSON.parse(this.abi.value));\n        //部署合约\n        let contractInstance = await myContract.new({\n            from:this.owner_address.value,\n            data:this.byteCode.value,\n            fee_limit:this.fee_limit.value,\n            call_value:this.call_value.value,\n            consume_user_resource_percent:this.consume_user_resource_percent.value\n        },this.pk.value)\n        this.setState({\n            data:contractInstance\n        })\n    }\n    //28、查询合约\n    async getContract(){\n        let res = await tronWeb.getContract(this.contract_address.value);\n        this.setState({\n            data:res\n        })\n    }\n    //29、调用合约\n    async triggerContract(){\n        let abi = [{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"fibonacciNotify\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"fibonacci\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"input\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"Notify\",\"type\":\"event\"}];\n        let myContract = tronWeb.contract(abi);\n        let contractAddress = '41b3169cb739b1612e33188429e3872c0ca10238cd'\n        let contractInstance = await myContract.at(contractAddress);\n\n        let { transaction,result,constant_result } = await contractInstance.fibonacciNotify(7,{\n            fee_limit:700000000000000,\n            call_value:0\n        })\n        if(!constant_result){\n            let res = await contractInstance.fibonacciNotify.sendTransaction(transaction,this.pk.value);\n            this.setState({\n                data:res\n            })\n            //监听事件\n            let myEvent = await contractInstance.Notify();//默认根据合约地址查询，可以输入{eventName:'',blockNum:'',transactionId:''}\n             myEvent.watch(function(err,result){\n                 let eventResult = '';\n                 result.forEach((item)=>{\n                     if(item.transaction_id ==transaction.txID){\n                         eventResult = item.result;\n                         myEvent.stopWatching();\n                     }\n                 })\n                 console.log('eventResult:',eventResult);\n             });\n           // console.log(eventResult)\n\n        }\n\n    }\n\n    //30、login\n    login(){\n        let account = tronWeb.login(tronWeb.defaultPk);\n        this.setState({\n            data:account\n        })\n    }\n\n    render(){\n        const { data } = this.state;\n        return (\n            <div>\n                <div className=\"box\" style={{marginTop:'200px'}}>\n                    <h3>工具函数 - Tool function</h3>\n                    <div>\n                        <input type=\"button\" value=\"to BigNumber\" onClick={()=>this.toBigNumber()}/>\n                    </div>\n                    <h3>账号、转账 - Account number, transfer</h3>\n                    <div>\n                        账号 - account number：<input type=\"text\" style={{width:'300px'}} ref={(input)=>this.account =input} defaultValue={tronWeb.defaultAccount}/>\n                        <input type=\"button\" onClick={()=>this.getBalance()} value=\"查询账户余额 - Check account balance\" />\n                    </div>\n                    <div>\n                        <input type=\"button\" value=\"triggerWallet\" onClick={()=>this.triggerChromeWallet()}/>\n                    </div>\n                    <div>\n                        <input type=\"button\" value=\"生成私钥地址 - Generate private key address(onLine)\" onClick={()=>this.generateAddress()}/>\n                        <input type=\"button\" value=\"生成私钥地址 - Generate private key address(onClient)\" onClick={()=>this.generateAddressOnClient()}/>\n                        <div>\n                            <input type=\"button\" value=\"验证地址 - Verify address\" onClick={()=>this.validateAddress()}/>\n                        </div>\n                        <input type=\"button\" value=\"通过密码创建地址 - Create an address with a password\" onClick={()=>this.createAddressWithPassWord()}/>\n\n                        <input type=\"button\" value=\"更新账号名称 - Update account name\" onClick={()=>this.updateAccount()}/>\n                        <hr/>\n                        <form>\n                            <p><label>from</label><input type=\"text\" style={{width:'300px'}} ref={(input)=>this.from =input} defaultValue={tronWeb.defaultAccount}/> </p>\n                            <p><label>to</label><input type=\"text\" style={{width:'300px'}} ref={(input)=>this.to =input} defaultValue={`TGhepyLuyML5n5jQBTykKqh9od8hQrBDkS`}/> </p>\n                            <p><label>amount</label><input type=\"text\" ref={(input)=>this.amount =input}  defaultValue={1000000} /> </p>\n                            <p><label>pk</label><input type=\"text\"  style={{width:'500px'}}ref={(input)=>this.pkForTransaction =input} defaultValue={tronWeb.defaultPk} /> </p>\n                            <input type=\"button\" onClick={(e)=>this.sendTransaction(e)} value=\"转账 - Transfer\" />\n                        </form>\n                    </div>\n                    <h3>节点查询 - Node query</h3>\n                    <div>\n                        <input type=\"button\" value=\"查询API所在机器连接的节点 - Query the node to which the machine where the API is connected\" onClick={()=>this.listNodes()}/>\n                    </div>\n                    <h3>块查询 - Block query</h3>\n                    <div>\n                        块id或高度 - Block id or height：<input type=\"text\" style={{width:'600px'}} ref={(input)=>this.idOrHeight =input} defaultValue='00000000000005ae07f42776b3bfd8e873feaebf2d743aceb716db5f70cb373b' />\n                        <input type=\"button\" onClick={()=>this.getBlock()} value=\"查询区块 - Query block\" />\n                        <input type=\"button\" onClick={()=>this.getBlockTransactionCount()} value=\"查询区块内交易数量 - Query the number of transactions in the block\" />\n                        <input type=\"button\" value=\"查询最新块 - Query the latest block\" onClick={()=>this.blockNumber()}/>\n                    </div>\n                    <div>\n                        {/*<input type=\"button\" value=\"通过高度范围查询块 - Query block by height range\" onClick={()=>this.getBlockByLimitNext()}/>\n                        <input type=\"button\" value=\"查询最近的几个块 - Query the most recent blocks\" onClick={()=>this.getBlockByLatestNum()}/>*/}\n                    </div>\n                    <h3>交易查询 - Transaction inquiry</h3>\n                    <div>\n                        交易id - Transaction id：<input type=\"text\" style={{width:'600px'}} ref={(input)=>this.transactionId =input} defaultValue='c523edd7b4b776aa44e4cd4bbdf925cb4eb6d047e27316e1ff919014cc6a9f54'/>\n                        <input type=\"button\" value=\"通过id查询交易记录 - Query transaction records by id\" onClick={()=>this.getTransaction()}/>\n                        <input type=\"button\" value=\"统计所有的交易总数 - Count all transactions\" onClick={()=>this.totalTransaction()}/>\n                    </div>\n                    <h3>超级代表 - Super Representative (SR)</h3>\n                    <div>\n                        <input type=\"button\" value=\"查询所有超级代表 - Query all SR\" onClick={()=>this.listWitNesses()}/>\n                        <input type=\"button\" value=\"获取下次统计投票时间 - Get the next maintenance time\" onClick={()=>this.getNextMaintenanceTime()}/>\n                        <input type=\"button\" value=\"申请成为超级代表 - Apply to become a SR\" onClick={()=>this.createWitness()}/>\n                        <input type=\"button\" value=\"为超级代表投票 - Vote for the SR\" onClick={()=>this.voteWitnessAccount()}/>\n                        <input type=\"button\" value=\"解冻结束冻结期的trx - Unfreeze the trx at the end of the freeze period\" onClick={()=>this.unfreezeBalance()}/>\n                        <input type=\"button\" value=\"超级代表提现奖励到balance - SR withdraws the reward to balance\" onClick={()=>this.withdrawBalance()}/>\n                    </div>\n                    <h3>token管理 - Token management</h3>\n                    <div>\n                        <input type=\"button\" value=\"查询所有token列表 - Query all token lists\" onClick={()=>this.getAssetIssueList()}/>\n                        <input type=\"button\" value=\"分页查询token列表 - Paging query token list\" onClick={()=>this.getPaginateDassetIssueList()}/>\n                        <input type=\"button\" value=\"查询某账户发行的token - Query the token issued by an account\" onClick={()=>this.getAssetIssueByAccount()}/>\n                        <input type=\"button\" value=\"根据名称查询token - Query token by name\" onClick={()=>this.getAssetIssueByName()}/>\n                        <input type=\"button\" value=\"发行token - Issue token\" onClick={()=>this.createAssetIssue()} style={{color:'red'}}/>\n                        <input type=\"button\" value=\"转账token - Transfer token\" onClick={()=>this.transferAsset()}/>\n                        <input type=\"button\" value=\"修改token - Modify token\" onClick={()=>this.updateAsset()}/>\n                        <input type=\"button\" value=\"解冻token - Unfreeze the token\" onClick={()=>this.unfreezeAsset()} style={{color:'red'}}/>\n                        <input type=\"button\" value=\"参与token发行 - Participate in token issuance\" onClick={()=>this.participateAssetIssue()}/>\n                    </div>\n                    <h3>智能合约 - Smart contract</h3>\n                    <div>\n                         <div>\n                             <form onSubmit={(e)=>this.deployContract(e)}>\n                                 <div>\n                                     <label>owner_address：</label>\n                                     <input type=\"text\" style={{width:'300px'}} ref={(input)=>this.owner_address=input} defaultValue={tronWeb.defaultAccount}/>\n                                 </div>\n                                 <div>\n                                     <label>pk:</label>\n                                     <input type=\"text\" style={{width:'500px'}} ref={(input)=>this.pk = input} defaultValue={tronWeb.defaultPk}/>\n                                 </div>\n                                 <div>\n                                     <label>Abi</label><textarea cols=\"50\" rows=\"10\" placeholder=\"abi\" defaultValue='' ref={(input)=>this.abi = input}></textarea>\n                                 </div>\n                                 <div>\n                                     <label>byteCode</label><textarea  cols=\"50\" rows=\"10\" placeholder='byteCode' defaultValue={''} ref={(input)=>this.byteCode = input}></textarea>\n                                 </div>\n\n                                 <div>\n                                     <label >fee_limit：</label>\n                                     <input type=\"text\" ref={(input)=>this.fee_limit=input} defaultValue={Math.pow(10,10)}/>\n                                 </div>\n                                 <div>\n                                     <label >call_value：</label>\n                                     <input type=\"text\" ref={(input)=>this.call_value=input} defaultValue={0}/>\n                                 </div>\n                                 <div>\n                                     <label >consume_user_resource_percent：</label>\n                                     <input type=\"text\" ref={(input)=>this.consume_user_resource_percent=input} defaultValue={0}/>\n                                 </div>\n                                 <div>\n                                     <input type=\"submit\" value=\"部署合约 - Deploy contract\"/>\n                                 </div>\n                             </form>\n                             <hr/>\n                         </div>\n                        <div>\n                            <label >查询合约地址 - Query contract address：</label>\n                            <input type=\"text\" style={{width:'300px'}} ref={(input)=>this.contract_address=input} defaultValue={``}/>\n                            <input type=\"button\" value=\"查询合约 - Query contract\" onClick={()=>this.getContract()}/>\n                        </div>\n                        <div>\n                            <input type=\"button\" value=\"调用合约 - Call contract\" onClick={()=>{this.triggerContract()}}/>\n                        </div>\n                        <div>\n                            <input type=\"button\" value=\"登录 - login\" onClick={()=>this.login()}/>\n                        </div>\n\n\n                    </div>\n                </div>\n\n                <div style={{position:'fixed',left:0,top:0}}>\n                    <textarea cols=\"100\" rows=\"10\"  value={stringify(data)} onChange={()=>{}}></textarea>\n                </div>\n                <style jsx>{`\n\n                    label{\n                        display:inline-block;\n                        width:150px;\n                    }\n\n                `}\n                </style>\n\n            </div>\n\n        )\n    }\n}\nexport default Index\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;;;;;;AAGA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;AACA;AACA;;;;;;AAAA;;;;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;AADA;AAIA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAbA;;AAkBA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAMA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAMA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;;AADA;AAOA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAIA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;AAAA;;;;;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;;AADA;AAOA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;;AADA;;AAEA;AACA;AACA;AAFA;AACA;;;AADA;AAAA;AAAA;AACA;AAGA;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;AAGA;AACA;;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAMA;AACA;;;AAAA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhIA;AAAA;AAAA;AA+IA;;;;AAvfA;AACA;AAwfA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}