{"version":3,"file":"4.7dbae40cb65b5bc6a5fd.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React,{ReactDOM} from 'react'\nimport TronWeb from '../../../dist/TronWeb.node.js'\nimport stringify from 'json-stringify-pretty-compact'\nimport CircularJson from 'circular-json'\nimport {utils} from 'ethers'\nconst HttpProvider = TronWeb.providers.HttpProvider;\n\nconst fullNode = new HttpProvider('https://api.trongrid.io:8090');\nconst solidityNode = new HttpProvider('https://api.trongrid.io:8091');\nconst eventServer = 'https://api.trongrid.io/';\nconst privateKey = 'da146374a75310b9666e834ee4ad0866d6f4035967bfc76217c5a495fff9f0d0';\n\nconst sampleAbi = '[{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"fibonacciNotify\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"fibonacci\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"input\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"Notify\",\"type\":\"event\"}]';\nconst sampleBytecode = '608060405234801561001057600080fd5b5061014f806100206000396000f30060806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633c7fdc70811461005057806361047ff41461007a575b600080fd5b34801561005c57600080fd5b50610068600435610092565b60408051918252519081900360200190f35b34801561008657600080fd5b506100686004356100e1565b600061009d826100e1565b604080518481526020810183905281519293507f71e71a8458267085d5ab16980fd5f114d2d37f232479c245d523ce8d23ca40ed929081900390910190a15b919050565b60008115156100f2575060006100dc565b8160011415610103575060016100dc565b61010f600283036100e1565b61011b600184036100e1565b0190506100dc5600a165627a7a72305820904e9c4de084d9b9f25cb9fd3ef040e92d6315d4a1596f3f015b2a66dcd3512f0029';\n\nconst tronWeb = new TronWeb(\n    fullNode,\n    solidityNode,\n    eventServer,\n    privateKey\n);\n\nclass Index extends React.Component{\n    state = {\n        resource:'BANDWIDTH',\n        data:{},\n        contractAddress:'',\n        contractAddressBase58:'',\n    }\n    componentDidMount(){\n        let coder = new utils.AbiCoder();\n        window.tronWeb = tronWeb;\n    }\n    triggerChromeWallet(){\n        const res = tronWeb.sendTransactionByWallet({to:'TZ3SmkD8qJK3VY8AnqN9XFiYuspEP3cwB5',amount:0.1},function(result){\n            console.log('cbk',result);\n        })\n        this.setState({\n            data:res\n        })\n    }\n\n    async toBigNumber(){\n        let str = '200000000000000000000001';\n        let bigNumber = tronWeb.toBigNumber(str);\n        console.log(bigNumber.toNumber(),'2.0000000000000002e+23')\n        let value = bigNumber.toString(10);\n        this.setState({\n            data:value\n        })\n\n    }\n    async getBalance(){\n        const res = await tronWeb.getBalance(this.account.value);\n        this.setState({\n            data:res\n        })\n    }\n    async getBlock(){\n        const res = await tronWeb.getBlock(this.idOrHeight.value);\n        this.setState({\n            data:res\n        })\n    } \n    async getBlockTransactionCount(){\n        const res = await tronWeb.getBlockTransactionCount(this.idOrHeight.value);\n        this.setState({\n            data:res\n        })\n    } \n    async getTransaction(){\n        const res = await tronWeb.getTransaction(this.transactionId.value);\n        this.setState({\n            data:res\n        })\n    }\n    //生成私钥和地址并存储到localStorage中\n    //该api有泄漏private key的风险，请确保在安全的环境中调用该api\n    async generateAddress(){\n        const res = await tronWeb.generateAddressOnLine();\n        this.setState({\n            data:res\n        })\n    }\n    async generateAddressOnClient(){\n        const res = await tronWeb.generateAccount();\n        this.setState({\n            data:res\n        })\n    }\n    //通过密码创建地址\n    async createAddressWithPassWord(){\n        const res = await tronWeb.createAddress('123456');\n        console.log(res);//{base58checkAddress: \"TMip2NnRKhy2Wyf1FjKG1D1yn3F1LLGCDV\",value:\"\"4180e8816651790d4d6c187eef09f90b7a19408bb8\"\n    }\n    //转账\n    async sendTransaction(e){\n        e.preventDefault();\n        const from = this.from.value;\n        const to = this.to.value;\n        const amount =parseInt(this.amount.value);\n        const pk = this.pkForTransaction.value;\n        const res = await tronWeb.sendTransaction(from,to,amount,pk);\n        this.setState({\n           data:res\n        })\n    }\n    //1、更新账户名称\n    async updateAccount(){\n        const res = await tronWeb.updateAccount('wujiaolong1009','TT67rPNwgmpeimvHUMVzFfKsjL9GZ1wGw8');\n        this.setState({\n            data:res\n        })\n    }\n    //2、Vote for the superrepresentative\n    async voteWitnessAccount(){\n        const res = await tronWeb.voteWitnessAccount('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',[{\n            vote_address:'TQxyQu5d76MaxsEF4nBf9tFa8s93nSHe8M',\n            vote_count:1\n        }]);\n        this.setState({\n            data:res\n        })\n    }\n    //3、发行token\n    async createAssetIssue(){\n        let options = {\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            name:'TestTRX',//名称\n            abbr:'TTRX',//简称\n            total_supply :100,//发行总量\n            trx_num:1,// 和 num 的兑换比例\n            num:1,\n            start_time : 1530894315158,//开始时间\n            end_time:1533894312158,//结束时间\n            description:'这是一个测试token',//描述\n            url:'http://www.baidu.com',//官网地址\n            free_asset_net_limit:10000,//免费带宽\n            public_free_asset_net_limit:10000,// 每个token用户能使用本token的免费带宽\n            frozen_supply:{\n                frozen_amount:1,//发行者在发行的时候指定冻结的token\n                frozen_days:2 //冻结的天数\n            }\n        }\n        const res = await tronWeb.createToken(options)\n        this.setState({\n            data:res\n        })\n    }\n    //5、 Apply to be a superrepresentative\n    async createWitness(){\n        const res = await tronWeb.createWitness('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9','http://www.baidu.com');\n        this.setState({\n            data:res\n        })\n    }\n    //6、 Transfer token\n    async transferAsset(){\n        const res = await tronWeb.transferAsset({\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            to_address:'TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL',\n            asset_name:'ZZZ',\n            amount:1\n        });\n        this.setState({\n            data:res\n        })\n    }\n    //7、 Participation in token distribution\n    async participateAssetIssue(){\n        const res = await tronWeb.transferAsset({\n            owner_address:'TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9',\n            to_address:'TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL',\n            asset_name:'ZZZ',\n            amount:1\n        });\n        this.setState({\n            data:res\n        })\n    }\n    // \n    async freezeBalance(){\n        const frozen_balance = Number(this.frozen_balance.value);\n        const resource = this.state.resource;\n        let res = await tronWeb.freezeBalance(tronWeb.defaultAddress.base58,frozen_balance,3,resource);\n        this.setState({\n            data:res\n        })    \n    }\n    //8、 解冻已经技术冻结期的 TRX\n    async unfreezeBalance(){\n        let res = await tronWeb.unfreezeBalance('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //9、解冻已经结束冻结期的 token\n    async unfreezeAsset(){\n        let res = await tronWeb.unfreezeAsset('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //10、超级代表提现奖励到balance,每24小时可提现一次\n    async withdrawBalance(){\n        let res = await tronWeb.withdrawBalance('TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9');\n        this.setState({\n            data:res\n        })\n    }\n    //11、修改token信息\n    async updateAsset(){\n        const res = await tronWeb.updateAsset({\n            owner_address:\"TBp39yWZhFEG5NdAoFFxepaj2dxCQjNmB9\",\n            description: 'test',\n            url: 'http://www.baidu.com',\n            new_limit : 1000000,\n            new_public_limit : 100\n        });\n        this.setState({\n            data:res\n        })\n    }\n    //12、查询api所在机器连接的节点\n    async listNodes(){\n        let res = await tronWeb.listNodes();\n        this.setState({\n            data:res\n        })\n    }\n    //13、查询账户发行的token\n    async getAssetIssueByAccount(){\n        let res = await tronWeb.getAssetIssueByAccount('TRzzMbFDNdFnRgGqKCkqoCuLoHfyRZfuVL');\n        this.setState({\n            data:res\n        })\n    }\n    //14、根据名称查询token\n    async getAssetIssueByName(){\n        let res = await tronWeb.getAssetIssueByName('ZZZ');\n        this.setState({\n            data:res\n        })\n    }\n    //15、查询最新块\n    async blockNumber(){\n        let res = await tronWeb.blockNumber();\n        this.setState({\n            data:res\n        })\n    }\n    //16、通过高度查询块\n    async getBlockByNum(){\n        let res = await tronWeb.getBlockByNum(869015);\n        this.setState({\n            data:res\n        })\n    }\n    //17、通过id查询块\n    async getBlockById(){\n        let res = await tronWeb.getBlockById('00000000000d429759175a43cb3e112d0761ecabf06ef0c253affe1420977651');\n        this.setState({\n            data:res\n        })\n    }\n    //18、按照范围查询块\n    async getBlockByLimitNext(){\n        let res = await tronWeb.getBlockByLimitNext(869010,869015);\n        this.setState({\n            data:res\n        })\n    }\n    //19、﻿查询最新的几个块\n    async getBlockByLatestNum(){\n        let res = await tronWeb.getBlockByLatestNum(5);\n        this.setState({\n            data:res\n        })\n    }\n\n    //20、通过ID查询交易\n    async getTransactionById(){\n        let res = await tronWeb.getTransactionById('0689352aff84a0ff3691502bca94b1ded40abb4aa8806b313acb59a34cf10c22')\n        this.setState({\n            data:res\n        })\n    }\n    //21、查询所有超级代表列表\n    async listWitNesses(){\n        let res = await tronWeb.listWitNesses();\n        this.setState({\n            data:res\n        })\n    }\n    //22、查询所有token列表\n    async getAssetIssueList(){\n        let res = await tronWeb.getAssetIssueList();\n        this.setState({\n            data:res\n        })\n    }\n    //23、分页查询token列表\n    async getPaginateDassetIssueList(){\n        let res = await tronWeb.getPaginateDassetIssueList(1,10);\n        this.setState({\n            data:res\n        })\n    }\n    //24、统计所有交易总数\n    async totalTransaction(){\n        let res = await tronWeb.getTransactionCount();\n        this.setState({\n            data:res\n        })\n    }\n    //25、获取下次统计投票时间\n    async getNextMaintenanceTime(){\n        let res = await tronWeb.getNextMainteNanceTime();\n        this.setState({\n            data:res\n        })\n    }\n    //26、检查地址是否正确\n    async validateAddress(){\n        let res = await tronWeb.validateAddress('TZ3SmkD8qJK3VY8AnqN9XFiYuspEP3cwB5');\n        this.setState({\n            data:res\n        })\n    }\n\n    //27、部署合约\n    async deployContract(event){\n        event.preventDefault();\n        //部署合约\n        let contractInstance = await tronWeb.contract().new({\n            abi:JSON.parse(this.abi.value),\n            bytecode:this.byteCode.value\n        })\n        let contract = {\n            contractAddress:contractInstance.address,\n            contractAddressBase58:tronWeb.address.fromHex(contractInstance.address)\n        }\n\n        this.setState({\n            data:contract,\n            contractAddress:contractInstance.address,\n            contractAddressBase58:tronWeb.address.fromHex(contractInstance.address),\n        })\n    }\n    //28、查询合约\n    async getContract(event){\n        event.preventDefault();\n        let res = await tronWeb.contract().at(this.contract_address.value);\n        this.setState({\n            data:res\n        })\n    }\n    //29、调用合约\n    async triggerContract(event){\n        event.preventDefault();\n        let contractInstance = await tronWeb.contract().at(this.contract_address.value);\n\n\n        if (this.watchEvent.value) {\n            contractInstance[this.watchEvent.value]().watch(function(err, res) {\n                console.log(\"error \" +err)\n                console.log('eventResult:',res);\n            });\n        }\n\n        let args = {\n            callValue:this.callValue.value,\n            shouldPollResponse: true\n        }\n\n        var paramsArray = this.params.value.split(',');\n        let { result } = await contractInstance[this.functionName.value].apply( this, paramsArray ).send(args);\n        console.log(\"Function call result:\", result)\n    }\n\n    render(){\n        const { data } = this.state;\n        return (\n            <div>\n                <div className=\"box\" style={{marginTop:'200px',marginLeft:'10px'}}>\n                    <h3>工具函数 - Tool function</h3>\n                    <div>\n                        <input type=\"button\" value=\"to BigNumber\" onClick={()=>this.toBigNumber()}/>\n                    </div>\n                    <h3>账号、转账 - Account number, transfer</h3>\n                    <div>\n                        账号 - account number：<input type=\"text\" style={{width:'300px'}} ref={(input)=>this.account =input} defaultValue={tronWeb.defaultAddress.base58}/>\n                        <input type=\"button\" onClick={()=>this.getBalance()} value=\"查询账户余额 - Check account balance\" />\n                    </div>\n                    <div>\n                        <input type=\"button\" value=\"triggerWallet\" onClick={()=>this.triggerChromeWallet()}/>\n                    </div>\n                    <div>\n                        <input type=\"button\" value=\"生成私钥地址 - Generate private key address(onLine)\" onClick={()=>this.generateAddress()}/>\n                        <input type=\"button\" value=\"生成私钥地址 - Generate private key address(onClient)\" onClick={()=>this.generateAddressOnClient()}/>\n                        <div>\n                            <input type=\"button\" value=\"验证地址 - Verify address\" onClick={()=>this.validateAddress()}/>\n                        </div>\n                        <input type=\"button\" value=\"通过密码创建地址 - Create an address with a password\" onClick={()=>this.createAddressWithPassWord()}/>\n\n                        <input type=\"button\" value=\"更新账号名称 - Update account name\" onClick={()=>this.updateAccount()}/>\n                        <hr/>\n                        <form>\n                            <p><label>from</label><input type=\"text\" style={{width:'300px'}} ref={(input)=>this.from =input} defaultValue={tronWeb.defaultAddress.base58}/> </p>\n                            <p><label>to</label><input type=\"text\" style={{width:'300px'}} ref={(input)=>this.to =input} defaultValue={`TGhepyLuyML5n5jQBTykKqh9od8hQrBDkS`}/> </p>\n                            <p><label>amount</label><input type=\"text\" ref={(input)=>this.amount =input}  defaultValue={1000000} /> </p>\n                            <p><label>pk</label><input type=\"text\"  style={{width:'500px'}}ref={(input)=>this.pkForTransaction =input} defaultValue={privateKey} /> </p>\n                            <input type=\"button\" onClick={(e)=>this.sendTransaction(e)} value=\"转账 - Transfer\" />\n                        </form>\n                    </div>\n                    <h3>节点查询 - Node query</h3>\n                    <div>\n                        <input type=\"button\" value=\"查询API所在机器连接的节点 - Query the node to which the machine where the API is connected\" onClick={()=>this.listNodes()}/>\n                    </div>\n                    <h3>块查询 - Block query</h3>\n                    <div>\n                        块id或高度 - Block id or height：<input type=\"text\" style={{width:'600px'}} ref={(input)=>this.idOrHeight =input} defaultValue='00000000000005ae07f42776b3bfd8e873feaebf2d743aceb716db5f70cb373b' />\n                        <input type=\"button\" onClick={()=>this.getBlock()} value=\"查询区块 - Query block\" />\n                        <input type=\"button\" onClick={()=>this.getBlockTransactionCount()} value=\"查询区块内交易数量 - Query the number of transactions in the block\" />\n                        <input type=\"button\" value=\"查询最新块 - Query the latest block\" onClick={()=>this.blockNumber()}/>\n                    </div>\n                    <div>\n                        {/*<input type=\"button\" value=\"通过高度范围查询块 - Query block by height range\" onClick={()=>this.getBlockByLimitNext()}/>\n                        <input type=\"button\" value=\"查询最近的几个块 - Query the most recent blocks\" onClick={()=>this.getBlockByLatestNum()}/>*/}\n                    </div>\n                    <h3>交易查询 - Transaction inquiry</h3>\n                    <div>\n                        交易id - Transaction id：<input type=\"text\" style={{width:'600px'}} ref={(input)=>this.transactionId =input} defaultValue='c523edd7b4b776aa44e4cd4bbdf925cb4eb6d047e27316e1ff919014cc6a9f54'/>\n                        <input type=\"button\" value=\"通过id查询交易记录 - Query transaction records by id\" onClick={()=>this.getTransaction()}/>\n                        <input type=\"button\" value=\"统计所有的交易总数 - Count all transactions\" onClick={()=>this.totalTransaction()}/>\n                    </div>\n                    <h3>超级代表 - Super Representative (SR)</h3>\n                    <div>\n                        <input type=\"button\" value=\"查询所有超级代表 - Query all SR\" onClick={()=>this.listWitNesses()}/>\n                        <input type=\"button\" value=\"获取下次统计投票时间 - Get the next maintenance time\" onClick={()=>this.getNextMaintenanceTime()}/>\n                        <input type=\"button\" value=\"申请成为超级代表 - Apply to become a SR\" onClick={()=>this.createWitness()}/>\n                        <input type=\"button\" value=\"为超级代表投票 - Vote for the SR\" onClick={()=>this.voteWitnessAccount()}/>\n                        <input type=\"button\" value=\"解冻结束冻结期的trx - Unfreeze the trx at the end of the freeze period\" onClick={()=>this.unfreezeBalance()}/>\n                        <input type=\"button\" value=\"超级代表提现奖励到balance - SR withdraws the reward to balance\" onClick={()=>this.withdrawBalance()}/>\n                    </div>\n                    <h3>token管理 - Token management</h3>\n                    <div>\n                        <label>BANDWIDTH:<input defaultChecked ref=\"resource\" name=\"resource\" onChange={()=>{this.setState({resource:'BANDWIDTH'})}} type=\"radio\"  /></label><label>ENERGY:<input ref=\"resource\" name=\"resource\" onChange={()=>{this.setState({resource:'ENERGY'})}} type=\"radio\" /></label><input type=\"text\" defaultValue=\"1000000\" ref={input=>this.frozen_balance = input}  /><input type=\"button\" value=\"冻结获取资源 - freeze gain resource\" onClick={()=>this.freezeBalance()}/>\n                    </div>\n                    <div>\n                        <input type=\"button\" value=\"查询所有token列表 - Query all token lists\" onClick={()=>this.getAssetIssueList()}/>\n                        <input type=\"button\" value=\"分页查询token列表 - Paging query token list\" onClick={()=>this.getPaginateDassetIssueList()}/>\n                        <input type=\"button\" value=\"查询某账户发行的token - Query the token issued by an account\" onClick={()=>this.getAssetIssueByAccount()}/>\n                        <input type=\"button\" value=\"根据名称查询token - Query token by name\" onClick={()=>this.getAssetIssueByName()}/>\n                        <input type=\"button\" value=\"发行token - Issue token\" onClick={()=>this.createAssetIssue()} style={{color:'red'}}/>\n                        <input type=\"button\" value=\"转账token - Transfer token\" onClick={()=>this.transferAsset()}/>\n                        <input type=\"button\" value=\"修改token - Modify token\" onClick={()=>this.updateAsset()}/>\n                        <input type=\"button\" value=\"解冻token - Unfreeze the token\" onClick={()=>this.unfreezeAsset()} style={{color:'red'}}/>\n                        <input type=\"button\" value=\"参与token发行 - Participate in token issuance\" onClick={()=>this.participateAssetIssue()}/>\n                    </div>\n                    <h3>智能合约 - Smart contract</h3>\n                    <div>\n                         <div>\n                             <form onSubmit={(e)=>this.deployContract(e)}>\n                                 <div>\n                                     <label>owner_address：</label>\n                                     <input type=\"text\" style={{width:'300px'}} ref={(input)=>this.owner_address=input} defaultValue={tronWeb.defaultAddress.base58}/>\n                                 </div>\n                                 <div>\n                                     <label>pk:</label>\n                                     <input type=\"text\" style={{width:'500px'}} ref={(input)=>this.pk = input} defaultValue={privateKey}/>\n                                 </div>\n                                 <div>\n                                     <label>Abi</label><textarea cols=\"50\" rows=\"10\" placeholder=\"abi\" defaultValue={sampleAbi} ref={(input)=>this.abi = input}></textarea>\n                                 </div>\n                                 <div>\n                                     <label>byteCode</label><textarea  cols=\"50\" rows=\"10\" placeholder='byteCode' defaultValue={sampleBytecode} ref={(input)=>this.byteCode = input}></textarea>\n                                 </div>\n                                 <div>\n                                     <label >consume_user_resource_percent：</label>\n                                     <input type=\"text\" ref={(input)=>this.consume_user_resource_percent=input} defaultValue={0}/>\n                                 </div>\n                                 <div>\n                                     <input type=\"submit\" value=\"部署合约 - Deploy contract\"/>\n                                 </div>\n                             </form>\n                             <hr/>\n                         </div>\n                        <div>\n                            <form onSubmit={(e)=>this.getContract(e)}>\n                                 <div>\n                                     <label>contract_address:</label>\n                                     <input type=\"text\" style={{width:'300px'}} ref={(input)=>this.contract_address=input} defaultValue={data.contractAddress}/>\n                                 </div>\n                                 <div>\n                                     <input type=\"submit\" value=\"查询合约 - Query contract\"/>\n                                 </div>\n                             </form>\n                             <hr/>\n                        </div>\n                        <div>\n                            <form onSubmit={(e)=>this.triggerContract(e)}>\n                                 <div>\n                                     <label>contract_address:</label>\n                                     <input type=\"text\" style={{width:'300px'}} ref={(input)=>this.contract_address=input} defaultValue={data.contractAddress}/>\n                                 </div>\n                                 <div>\n                                     <label>functionName:</label>\n                                     <input type=\"text\" style={{width:'500px'}} ref={(input)=>this.functionName = input} defaultValue={\"fibonacciNotify\"}/>\n                                 </div>\n                                 <div>\n                                     <label>params:(comma separated)</label>\n                                     <input type=\"text\" style={{width:'500px'}} ref={(input)=>this.params = input} defaultValue={\"7\"}/>\n                                 </div>\n                                 <div>\n                                     <label >callValue: </label>\n                                     <input type=\"text\" ref={(input)=>this.callValue=input} defaultValue={0}/>\n                                 </div>\n                                 <div>\n                                     <label>watch event</label>\n                                     <input type=\"text\" style={{width:'500px'}} ref={(input)=>this.watchEvent = input} defaultValue={\"Notify\"}/>\n                                 </div>\n                                 <div>\n                                     <input type=\"submit\" value=\"部署合约 - Call contract\"/>\n                                 </div>\n                             </form>\n                             <hr/>\n                        </div>\n\n\n                    </div>\n                </div>\n\n                <div style={{position:'fixed',left:0,top:0}}>\n                    <textarea cols=\"100\" rows=\"10\"  value={CircularJson.stringify(data)} onChange={()=>{}}></textarea>\n                </div>\n                <style jsx>{`\n\n                    label{\n                        display:inline-block;\n                        width:150px;\n                    }\n\n                `}\n                </style>\n\n            </div>\n\n        )\n    }\n}\nexport default Index\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;AACA;AACA;;;;;;AAAA;;;;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;AADA;AAIA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAbA;;AAkBA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAMA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;AADA;AAMA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;;AADA;AAOA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAIA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAIA;AACA;;;;;;AAAA;;;;;;AACA;AACA;;AACA;AACA;AACA;AAFA;AACA;;AADA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;AAKA;AACA;;;;;;AAAA;;;;;;AACA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;AAGA;AACA;;;;;;AAAA;;;;;;;AACA;;AACA;AACA;;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;;AACA;AACA;;;AADA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvJA;AAAA;AAAA;AAsKA;;;;AA/gBA;AACA;AAghBA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}