{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","constructor","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","setDefaultBlock","blockID","isInteger","Error","setAddress","address","fromPrivateKey","isAddress","hex","toHex","base58","fromHex","isValidProvider","provider","Object","values","some","knownProvider","isEventServerConnected","get","then","data","hasProperty","catch","setStatusPage","isValidURL","currentProviders","currentProvider","getEventResult","contractAddress","eventName","blockNumber","callback","getEventByTransacionID","transactionID","isHex","crypto","getBase58CheckAddress","code","hexStr2byteArray","byteArray2hexStr","decodeBase58Address","pkToAddress","sha3","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","toUtf8","Buffer","from","toString","toAscii","fromAscii","padding","padEnd","toDecimal","value","toBigNumber","toNumber","number","result","lessThan","substr","fromSun","sun","div","toSun","times","amount","replace","length","isAddressValid","compile","solditySource","createAccount","account","accounts","generateAccount","isConnected","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","method","toLowerCase","params","TransactionBuilder","Trx","tronWeb","parseToken","token","name","abbr","description","getCurrentBlock","block","err","getBlock","getBlockByHash","getBlockByNumber","blockHash","num","parseInt","getBlockTransactionCount","transactions","getTransaction","transaction","getTransactionsToAddress","limit","offset","getTransactionsRelated","getTransactionsFromAddress","direction","includes","to","map","tx","sort","a","b","raw_data","timestamp","ex","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","reduce","getTokenFromID","tokenID","listNodes","nodes","port","getBlockRange","start","end","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","i","BASE","encode58","buffer","j","digits","carry","push","reverse","digit","join","decode58","bytes","c","Base64","_keyStr","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","decode","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","slice","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","signTransaction","txID","signature","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","sign","r","s","id","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","utils","isURL","protocols","obj","prototype","call","isArray","isJson","parse","bool","isFunction","Number","property","hasOwnProperty","properties","func","args","Promise","resolve","reject","res","scope","bind"],"mappings":"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","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = false;\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest')\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = +blockID;\n    }\n\n    setPrivateKey(privateKey) {\n        // Set address first as it clears the private key\n        this.setAddress(\n            this.address.fromPrivateKey(privateKey)\n        );\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: this.address.toHex(address),\n            base58: this.address.fromHex(address)\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    // TODO\n    getEventResult(contractAddress, eventName, blockNumber, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n    }\n\n    // TODO\n    getEventByTransacionID(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address;\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                );\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","export default class TransactionBuilder {\n    \n}","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress, limit = 30, offset = 0, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress, limit = 30, offset = 0, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 1)\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listTokens);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url, {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}