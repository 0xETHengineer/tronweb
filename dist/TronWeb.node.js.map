{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","constructor","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","setDefaultBlock","blockID","isInteger","Error","setAddress","address","fromPrivateKey","isAddress","toHex","fromHex","isValidProvider","provider","Object","values","some","knownProvider","isEventServerConnected","get","then","data","hasProperty","catch","setStatusPage","isValidURL","currentProviders","currentProvider","getEventResult","contractAddress","eventName","blockNumber","callback","getEventByTransacionID","transactionID","sign","transaction","isFunction","toLowerCase","raw_data","contract","parameter","value","owner_address","crypto","signTransaction","ex","isHex","getBase58CheckAddress","code","hexStr2byteArray","byteArray2hexStr","decodeBase58Address","pkToAddress","sha3","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","toUtf8","Buffer","from","toString","toAscii","fromAscii","padding","padEnd","toDecimal","toBigNumber","toNumber","number","result","lessThan","substr","fromSun","sun","div","toSun","times","amount","replace","length","isAddressValid","compile","solditySource","createAccount","account","accounts","generateAccount","isConnected","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","method","params","TransactionBuilder","tronWeb","sendTrx","to","to_address","parseInt","err","sendToken","tokenID","asset_name","purchaseToken","issuerAddress","buyer","freezeBalance","duration","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","vote","votes","voterAddress","keys","invalid","entries","map","srAddress","voteCount","vote_address","vote_count","createSmartContract","options","abi","bytecode","feeLimit","callValue","bandwidthLimit","parse","isArray","payable","func","type","fee_limit","call_value","consume_user_resource_percent","triggerSmartContract","functionSelector","parameters","abiCoder","utils","AbiCoder","types","i","push","encode","contract_address","function_selector","message","createToken","name","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","Date","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","updateToken","new_limit","new_public_limit","sendAsset","args","purchaseAsset","createAsset","updateAsset","Trx","parseToken","token","getCurrentBlock","block","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransaction","getTransactionsToAddress","limit","offset","getTransactionsRelated","getTransactionsFromAddress","direction","includes","tx","sort","a","b","timestamp","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","reduce","getTokenFromID","listNodes","nodes","port","getBlockRange","start","end","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","getContract","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","j","digits","carry","reverse","digit","join","decode58","bytes","c","Base64","_keyStr","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","decode","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","slice","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","txID","signature","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","r","s","id","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","obj","prototype","call","isJson","bool","Number","property","hasOwnProperty","properties","Promise","resolve","reject","res","scope","bind"],"mappings":"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","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest')\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = +blockID;\n    }\n\n    setPrivateKey(privateKey) {\n        // Set address first as it clears the private key\n        this.setAddress(\n            this.address.fromPrivateKey(privateKey)\n        );\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: this.address.toHex(address),\n            base58: this.address.fromHex(address)\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    // TODO\n    getEventResult(contractAddress, eventName, blockNumber, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n    }\n\n    // TODO\n    getEventByTransacionID(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n    }\n\n    sign(transaction, privateKey = this.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey);\n\n        if(!transaction)\n            return callback('Invalid transaction provided');\n\n        try {\n            const address = this.address.toHex(\n                this.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address;\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                );\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(address = this.tronWeb.defaultAddress.hex, amount = 0, duration = 3, callback = false) {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, address, amount, duration);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 0,\n            callValue = 0,\n            bandwidthLimit = 0\n        } = options;\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(bandwidthLimit) || bandwidthLimit < 0 || bandwidthLimit > 100)\n            return callback('Invalid options.bandwidthLimit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: bandwidthLimit,\n            abi: JSON.stringify(abi),\n            bytecode\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n            parameters = [];\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(!value)\n                    return callback('Invalid parameter value provided: ' + value);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n}","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url, {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}