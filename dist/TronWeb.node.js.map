{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/contract/index.js","webpack:///./src/lib/contract/method.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","constructor","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","setDefaultBlock","blockID","isInteger","Error","setAddress","address","fromPrivateKey","isAddress","toHex","fromHex","isValidProvider","provider","Object","values","some","knownProvider","isEventServerConnected","get","then","data","hasProperty","catch","setStatusPage","isValidURL","currentProviders","currentProvider","getEventResult","contractAddress","eventName","blockNumber","callback","routeParams","push","join","isArray","map","event","mapEvent","err","response","getEventByTransacionID","transactionID","contract","abi","isHex","crypto","getBase58CheckAddress","code","hexStr2byteArray","byteArray2hexStr","decodeBase58Address","pkToAddress","sha3","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","toUtf8","Buffer","from","toString","toAscii","fromAscii","padding","padEnd","toDecimal","value","toBigNumber","toNumber","number","result","lessThan","substr","fromSun","sun","div","toSun","times","amount","replace","length","isAddressValid","compile","solditySource","createAccount","account","accounts","generateAccount","isConnected","Contract","tronWeb","eventListener","bytecode","deployed","lastBlock","methods","loadAbi","_getEvents","events","latestEvent","sort","a","b","block","newEvents","filter","index","slice","priorEvent","_startEventListener","clearInterval","eventCallback","setInterval","console","error","_stopEventListener","func","method","methodCall","onMethod","bind","name","functionSelector","signature","new","options","isFunction","transaction","createSmartContract","signedTransaction","sign","sendRawTransaction","at","contract_address","ex","getContract","entrys","includes","self","start","startCallback","stop","abiCoder","utils","AbiCoder","getFunctionSelector","getParamTypes","inputs","params","type","decodeOutput","output","decode","STATE_MUTABILITY","PURE","VIEW","Method","outputs","args","types","arg","defaultOptions","feeLimit","callValue","shouldPollResponse","call","stateMutability","toLowerCase","parameters","triggerSmartContract","constant_result","send","broadcast","txID","checkResult","getTransactionInfo","keys","setTimeout","decoded","contractResult","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","TransactionBuilder","sendTrx","to","to_address","owner_address","parseInt","sendToken","tokenID","asset_name","purchaseToken","issuerAddress","buyer","freezeBalance","duration","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","vote","votes","voterAddress","invalid","entries","srAddress","voteCount","vote_address","vote_count","bandwidthLimit","parse","payable","i","encode","fee_limit","call_value","consume_user_resource_percent","parameter","function_selector","message","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","Date","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","updateToken","new_limit","new_public_limit","sendAsset","purchaseAsset","createAsset","updateAsset","Trx","parseToken","token","getCurrentBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransaction","getTransactionsToAddress","limit","offset","getTransactionsRelated","getTransactionsFromAddress","direction","tx","raw_data","timestamp","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","reduce","getTokenFromID","listNodes","nodes","port","getBlockRange","end","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","signTransaction","sendTransaction","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","j","digits","carry","reverse","digit","decode58","bytes","c","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","r","s","id","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","obj","prototype","isJson","bool","Number","property","hasOwnProperty","properties","Promise","resolve","reject","res","scope","block_number","block_timestamp","event_name","transaction_id"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEe,MAAMA,OAAN,CAAc;AAIzBC,aAAW,CAACC,QAAD,EAAWC,YAAX,EAAyBC,WAAW,GAAG,KAAvC,EAA8CC,UAAU,GAAG,KAA3D,EAAkE;AACzE,QAAG,6CAAK,CAACC,QAAN,CAAeJ,QAAf,CAAH,EACIA,QAAQ,GAAG,IAAI,qDAAS,CAACK,YAAd,CAA2BL,QAA3B,CAAX;AAEJ,QAAG,6CAAK,CAACI,QAAN,CAAeH,YAAf,CAAH,EACIA,YAAY,GAAG,IAAI,qDAAS,CAACI,YAAd,CAA2BJ,YAA3B,CAAf;AAEJ,SAAKK,WAAL,CAAiBN,QAAjB;AACA,SAAKO,eAAL,CAAqBN,YAArB;AACA,SAAKO,cAAL,CAAoBN,WAApB;AAEA,SAAKO,SAAL,GAAiB,qDAAjB;AACA,SAAKC,SAAL,GAAiB,mDAAjB;AAEA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,cAAL,GAAsB;AAClBC,SAAG,EAAE,KADa;AAElBC,YAAM,EAAE;AAFU,KAAtB;AAKA,KACI,MADJ,EACY,OADZ,EACqB,QADrB,EAC+B,UAD/B,EAEI,SAFJ,EAEe,WAFf,EAE4B,WAF5B,EAEyC,aAFzC,EAGI,OAHJ,EAGa,SAHb,EAGwB,aAHxB,EAGuC,WAHvC,EAII,SAJJ,EAIe,eAJf,EAIgC,SAJhC,EAKEC,OALF,CAKUC,GAAG,IAAI;AACb,WAAKA,GAAL,IAAYnB,OAAO,CAACmB,GAAD,CAAnB;AACH,KAPD;AASA,QAAGd,UAAH,EACI,KAAKe,aAAL,CAAmBf,UAAnB;AAEJ,SAAKgB,kBAAL,GAA0B,IAAI,8DAAJ,CAAuB,IAAvB,CAA1B;AACA,SAAKC,GAAL,GAAW,IAAI,+CAAJ,CAAQ,IAAR,CAAX;AACA,SAAKC,OAAL,GAAe,IAAI,mDAAJ,CAAY,IAAZ,CAAf;AAEA,SAAKC,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAEDC,iBAAe,CAACC,OAAO,GAAG,KAAX,EAAkB;AAC7B,QAAGA,OAAO,KAAK,KAAZ,IAAqBA,OAAO,IAAI,QAAhC,IAA4CA,OAAO,IAAI,UAA1D,EACI,OAAO,KAAKd,YAAL,GAAoBc,OAA3B;AAEJ,QAAG,CAAC,6CAAK,CAACC,SAAN,CAAgBD,OAAhB,CAAD,IAA6B,CAACA,OAAjC,EACI,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AAEJ,SAAKhB,YAAL,GAAoB,CAACc,OAArB;AACH;;AAEDP,eAAa,CAACf,UAAD,EAAa;AACtB;AACA,SAAKyB,UAAL,CACI,KAAKC,OAAL,CAAaC,cAAb,CAA4B3B,UAA5B,CADJ,EAFsB,CAMtB;;AACA,SAAKS,iBAAL,GAAyBT,UAAzB;AACH;;AAEDyB,YAAU,CAACC,OAAD,EAAU;AAChB,QAAG,CAAC,KAAKE,SAAL,CAAeF,OAAf,CAAJ,EACI,MAAM,IAAIF,KAAJ,CAAU,0BAAV,CAAN;AAEJ,SAAKf,iBAAL,GAAyB,KAAzB;AACA,SAAKC,cAAL,GAAsB;AAClBC,SAAG,EAAE,KAAKe,OAAL,CAAaG,KAAb,CAAmBH,OAAnB,CADa;AAElBd,YAAM,EAAE,KAAKc,OAAL,CAAaI,OAAb,CAAqBJ,OAArB;AAFU,KAAtB;AAIH;;AAEDK,iBAAe,CAACC,QAAD,EAAW;AACtB,WAAOC,MAAM,CAACC,MAAP,CAAc,qDAAd,EAAyBC,IAAzB,CAA8BC,aAAa,IAAIJ,QAAQ,YAAYI,aAAnE,CAAP;AACH;;AAEDC,wBAAsB,GAAG;AACrB,QAAG,CAAC,KAAKtC,WAAT,EACI,OAAO,KAAP;AAEJ,WAAO,4CAAK,CAACuC,GAAN,CAAU,KAAKvC,WAAf,EAA4BwC,IAA5B,CAAiC,CAAC;AAAEC;AAAF,KAAD,KAAc;AAClD,aAAO,6CAAK,CAACC,WAAN,CAAkBD,IAAlB,EAAwB,QAAxB,CAAP;AACH,KAFM,EAEJE,KAFI,CAEE,MAAM,KAFR,CAAP;AAGH;;AAEDvC,aAAW,CAACN,QAAD,EAAW;AAClB,QAAG,CAAC,KAAKkC,eAAL,CAAqBlC,QAArB,CAAJ,EACI,MAAM,IAAI2B,KAAJ,CAAU,4BAAV,CAAN;AAEJ,SAAK3B,QAAL,GAAgBA,QAAhB;AACA,SAAKA,QAAL,CAAc8C,aAAd,CAA4B,oBAA5B;AACH;;AAEDvC,iBAAe,CAACN,YAAD,EAAe;AAC1B,QAAG,CAAC,KAAKiC,eAAL,CAAqBjC,YAArB,CAAJ,EACI,MAAM,IAAI0B,KAAJ,CAAU,gCAAV,CAAN;AAEJ,SAAK1B,YAAL,GAAoBA,YAApB;AACA,SAAKA,YAAL,CAAkB6C,aAAlB,CAAgC,4BAAhC;AACH;;AAEDtC,gBAAc,CAACN,WAAW,GAAG,KAAf,EAAsB;AAChC,QAAGA,WAAW,KAAK,KAAhB,IAAyB,CAAC,6CAAK,CAAC6C,UAAN,CAAiB7C,WAAjB,CAA7B,EACI,MAAM,IAAIyB,KAAJ,CAAU,uCAAV,CAAN;AAEJ,SAAKzB,WAAL,GAAmBA,WAAnB;AACH;;AAED8C,kBAAgB,GAAG;AACf,WAAO;AACHhD,cAAQ,EAAE,KAAKA,QADZ;AAEHC,kBAAY,EAAE,KAAKA,YAFhB;AAGHC,iBAAW,EAAE,KAAKA;AAHf,KAAP;AAKH;;AAED+C,iBAAe,GAAG;AACd,WAAO,KAAKD,gBAAL,EAAP;AACH;;AAEDE,gBAAc,CAACC,eAAe,GAAG,KAAnB,EAA0BC,SAAS,GAAG,KAAtC,EAA6CC,WAAW,GAAG,KAA3D,EAAkEC,QAAQ,GAAG,KAA7E,EAAoF;AAC9F,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4B,cAAxB,EAAwCC,eAAxC,EAAyDC,SAAzD,EAAoEC,WAApE,CAAP;AAEJ,QAAG,CAAC,KAAKnD,WAAT,EACIoD,QAAQ,CAAC,4BAAD,CAAR;AAEJ,UAAMC,WAAW,GAAG,EAApB;AAEA,QAAG,CAAC,KAAKxB,SAAL,CAAeoB,eAAf,CAAJ,EACI,OAAOG,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAGF,SAAS,IAAI,CAACD,eAAjB,EACI,OAAOG,QAAQ,CAAC,2DAAD,CAAf;AAEJ,QAAGD,WAAW,IAAI,CAACD,SAAnB,EACI,OAAOE,QAAQ,CAAC,wDAAD,CAAf;AAEJ,QAAGH,eAAH,EACII,WAAW,CAACC,IAAZ,CAAiB,KAAK3B,OAAL,CAAaI,OAAb,CAAqBkB,eAArB,CAAjB;AAEJ,QAAGC,SAAH,EACIG,WAAW,CAACC,IAAZ,CAAiBJ,SAAjB;AAEJ,QAAGC,WAAH,EACIE,WAAW,CAACC,IAAZ,CAAiBH,WAAjB;AAEJ,WAAO,4CAAK,CAAE,GAAE,KAAKnD,WAAY,mBAAkBqD,WAAW,CAACE,IAAZ,CAAiB,GAAjB,CAAsB,EAA7D,CAAL,CAAqEf,IAArE,CAA0E,CAAC;AAAEC,UAAI,GAAG;AAAT,KAAD,KAAsB;AACnG,UAAG,CAACA,IAAJ,EACI,OAAOW,QAAQ,CAAC,wBAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACI,OAAN,CAAcf,IAAd,CAAJ,EACI,OAAOW,QAAQ,CAACX,IAAD,CAAf;AAEJ,aAAOW,QAAQ,CAAC,IAAD,EACXX,IAAI,CAACgB,GAAL,CAASC,KAAK,IAAI,6CAAK,CAACC,QAAN,CAAeD,KAAf,CAAlB,CADW,CAAf;AAGH,KAVM,EAUJf,KAVI,CAUEiB,GAAG,IAAIR,QAAQ,CAACQ,GAAG,CAACC,QAAJ,CAAapB,IAAb,IAAqBmB,GAAtB,CAVjB,CAAP;AAWH;;AAEDE,wBAAsB,CAACC,aAAa,GAAG,KAAjB,EAAwBX,QAAQ,GAAG,KAAnC,EAA0C;AAC5D,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0C,sBAAxB,EAAgDC,aAAhD,CAAP;AAEJ,QAAG,CAAC,KAAK/D,WAAT,EACIoD,QAAQ,CAAC,4BAAD,CAAR;AAEJ,WAAO,4CAAK,CAAE,GAAE,KAAKpD,WAAY,sBAAqB+D,aAAc,EAAxD,CAAL,CAAgEvB,IAAhE,CAAqE,CAAC;AAAEC,UAAI,GAAG;AAAT,KAAD,KAAsB;AAC9F,UAAG,CAACA,IAAJ,EACI,OAAOW,QAAQ,CAAC,wBAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACI,OAAN,CAAcf,IAAd,CAAJ,EACI,OAAOW,QAAQ,CAACX,IAAD,CAAf;AAEJ,aAAOW,QAAQ,CAAC,IAAD,EACXX,IAAI,CAACgB,GAAL,CAASC,KAAK,IAAI,6CAAK,CAACC,QAAN,CAAeD,KAAf,CAAlB,CADW,CAAf;AAGH,KAVM,EAUJf,KAVI,CAUEiB,GAAG,IAAIR,QAAQ,CAACQ,GAAG,CAACC,QAAJ,CAAapB,IAAb,IAAqBmB,GAAtB,CAVjB,CAAP;AAWH;;AAEDI,UAAQ,CAACC,GAAG,GAAG,EAAP,EAAWtC,OAAO,GAAG,KAArB,EAA4B;AAChC,WAAO,IAAI,oDAAJ,CAAa,IAAb,EAAmBsC,GAAnB,EAAwBtC,OAAxB,CAAP;AACH;;AAED,aAAWA,OAAX,GAAqB;AACjB,WAAO;AACHI,aAAO,CAACJ,OAAD,EAAU;AACb,YAAG,CAAC,6CAAK,CAACuC,KAAN,CAAYvC,OAAZ,CAAJ,EACI,OAAOA,OAAP;AAEJ,eAAO,6CAAK,CAACwC,MAAN,CAAaC,qBAAb,CACH,6CAAK,CAACC,IAAN,CAAWC,gBAAX,CAA4B3C,OAA5B,CADG,CAAP;AAGH,OARE;;AASHG,WAAK,CAACH,OAAD,EAAU;AACX,YAAG,6CAAK,CAACuC,KAAN,CAAYvC,OAAZ,CAAH,EACI,OAAOA,OAAP;AAEJ,eAAO,6CAAK,CAAC0C,IAAN,CAAWE,gBAAX,CACH,6CAAK,CAACJ,MAAN,CAAaK,mBAAb,CAAiC7C,OAAjC,CADG,CAAP;AAGH,OAhBE;;AAiBHC,oBAAc,CAAC3B,UAAD,EAAa;AACvB,YAAI;AACA,iBAAO,6CAAK,CAACkE,MAAN,CAAaM,WAAb,CAAyBxE,UAAzB,CAAP;AACH,SAFD,CAEE,gBAAM;AAAE,iBAAO,KAAP;AAAe;AAC5B;;AArBE,KAAP;AAuBH;;AAED,SAAOyE,IAAP,CAAYC,MAAZ,EAAoB;AAChB,WAAO,wDAAQ,CAACA,MAAD,CAAf;AACH;;AAED,SAAO7C,KAAP,CAAa8C,GAAb,EAAkB;AACd,QAAG,6CAAK,CAACC,SAAN,CAAgBD,GAAhB,CAAH,EACI,OAAOhF,OAAO,CAACkF,WAAR,CAAoB,CAACF,GAArB,CAAP;AAEJ,QAAG,6CAAK,CAACG,WAAN,CAAkBH,GAAlB,CAAH,EACI,OAAOhF,OAAO,CAACkF,WAAR,CAAoBF,GAApB,CAAP;AAEJ,QAAG,OAAOA,GAAP,KAAe,QAAlB,EACI,OAAOhF,OAAO,CAACoF,QAAR,CAAiBC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAAjB,CAAP;;AAEJ,QAAG,6CAAK,CAAC1E,QAAN,CAAe0E,GAAf,CAAH,EAAwB;AACpB,UAAGA,GAAG,CAACO,OAAJ,CAAY,KAAZ,MAAuB,CAA1B,EACI,OAAOvF,OAAO,CAACkF,WAAR,CAAoBF,GAApB,CAAP;AAEJ,UAAGA,GAAG,CAACO,OAAJ,CAAY,IAAZ,MAAsB,CAAzB,EACI,OAAOP,GAAP;AAEJ,UAAG,CAACQ,QAAQ,CAACR,GAAD,CAAZ,EACI,OAAOhF,OAAO,CAACoF,QAAR,CAAiBJ,GAAjB,CAAP;AACP;;AAED,WAAOhF,OAAO,CAACkF,WAAR,CAAoBF,GAApB,CAAP;AACH;;AAED,SAAOS,MAAP,CAAczE,GAAd,EAAmB;AACf,WAAO0E,MAAM,CAACC,IAAP,CAAY3E,GAAZ,EAAiB,KAAjB,EAAwB4E,QAAxB,CAAiC,MAAjC,CAAP;AACH;;AAED,SAAOR,QAAP,CAAgBL,MAAhB,EAAwB;AACpB,WAAOW,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoB,MAApB,EAA4Ba,QAA5B,CAAqC,KAArC,CAAP;AACH;;AAED,SAAOC,OAAP,CAAe7E,GAAf,EAAoB;AAChB,WAAO0E,MAAM,CAACC,IAAP,CAAY3E,GAAZ,EAAiB,KAAjB,EAAwB4E,QAAxB,CAAiC,OAAjC,CAAP;AACH;;AAED,SAAOE,SAAP,CAAiBf,MAAjB,EAAyBgB,OAAzB,EAAkC;AAC9B,WAAOL,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoB,OAApB,EAA6Ba,QAA7B,CAAsC,KAAtC,EAA6CI,MAA7C,CAAoDD,OAApD,EAA6D,GAA7D,CAAP;AACH;;AAED,SAAOE,SAAP,CAAiBC,KAAjB,EAAwB;AACpB,WAAOlG,OAAO,CAACmG,WAAR,CAAoBD,KAApB,EAA2BE,QAA3B,EAAP;AACH;;AAED,SAAOlB,WAAP,CAAmBgB,KAAnB,EAA0B;AACtB,UAAMG,MAAM,GAAGrG,OAAO,CAACmG,WAAR,CAAoBD,KAApB,CAAf;AACA,UAAMI,MAAM,GAAGD,MAAM,CAACT,QAAP,CAAgB,EAAhB,CAAf;AAEA,WAAOS,MAAM,CAACE,QAAP,CAAgB,CAAhB,IAAqB,QAAQD,MAAM,CAACE,MAAP,CAAc,CAAd,CAA7B,GAAgD,OAAOF,MAA9D;AACH;;AAED,SAAOG,OAAP,CAAeC,GAAf,EAAoB;AAChB,UAAMpF,GAAG,GAAGtB,OAAO,CAACmG,WAAR,CAAoB7E,GAApB,EAAyBqF,GAAzB,CAA6B,OAA7B,CAAZ;AACA,WAAO,6CAAK,CAACxB,WAAN,CAAkBuB,GAAlB,IAAyBpF,GAAzB,GAA+BA,GAAG,CAACsE,QAAJ,CAAa,EAAb,CAAtC;AACH;;AAED,SAAOgB,KAAP,CAAatF,GAAb,EAAkB;AACd,UAAMoF,GAAG,GAAG1G,OAAO,CAACmG,WAAR,CAAoB7E,GAApB,EAAyBuF,KAAzB,CAA+B,OAA/B,CAAZ;AACA,WAAO,6CAAK,CAAC1B,WAAN,CAAkB7D,GAAlB,IAAyBoF,GAAzB,GAA+BA,GAAG,CAACd,QAAJ,CAAa,EAAb,CAAtC;AACH;;AAED,SAAOO,WAAP,CAAmBW,MAAM,GAAG,CAA5B,EAA+B;AAC3B,QAAG,6CAAK,CAAC3B,WAAN,CAAkB2B,MAAlB,CAAH,EACI,OAAOA,MAAP;AAEJ,QAAG,6CAAK,CAACxG,QAAN,CAAewG,MAAf,MAA2BA,MAAM,CAACvB,OAAP,CAAe,IAAf,MAAyB,CAAzB,IAA8BuB,MAAM,CAACvB,OAAP,CAAe,KAAf,MAA0B,CAAnF,CAAH,EACI,OAAO,IAAI,mDAAJ,CAAcuB,MAAM,CAACC,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAd,EAAwC,EAAxC,CAAP;AAEJ,WAAO,IAAI,mDAAJ,CAAcD,MAAM,CAAClB,QAAP,CAAgB,EAAhB,CAAd,EAAmC,EAAnC,CAAP;AACH;;AAED,SAAO3D,SAAP,CAAiBF,OAAO,GAAG,KAA3B,EAAkC;AAC9B,QAAG,CAAC,6CAAK,CAACzB,QAAN,CAAeyB,OAAf,CAAJ,EACI,OAAO,KAAP,CAF0B,CAI9B;;AACA,QAAGA,OAAO,CAACiF,MAAR,KAAmB,EAAtB,EAA0B;AACtB,aAAOhH,OAAO,CAACiC,SAAR,CACH,6CAAK,CAACsC,MAAN,CAAaC,qBAAb,CACI,6CAAK,CAACC,IAAN,CAAWC,gBAAX,CAA4B3C,OAA5B,CADJ,CADG,CAAP;AAKH;;AAED,WAAO,6CAAK,CAACwC,MAAN,CAAa0C,cAAb,CAA4BlF,OAA5B,CAAP;AACH,GA9SwB,CAgTzB;;;AACA,SAAOmF,OAAP,CAAeC,aAAf,EAA8B,CAE7B;;AAED,eAAaC,aAAb,CAA2B5D,QAAQ,GAAG,KAAtC,EAA6C;AACzC,UAAM6D,OAAO,GAAG,6CAAK,CAACC,QAAN,CAAeC,eAAf,EAAhB;AAEA,QAAG/D,QAAH,EACIA,QAAQ,CAAC,IAAD,EAAO6D,OAAP,CAAR;AAEJ,WAAOA,OAAP;AACH;;AAED,QAAMG,WAAN,CAAkBhE,QAAQ,GAAG,KAA7B,EAAoC;AAChC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKgG,WAAxB,CAAP;AAEJhE,YAAQ,CAAC,IAAD,EAAO;AACXtD,cAAQ,EAAE,MAAM,KAAKA,QAAL,CAAcsH,WAAd,EADL;AAEXrH,kBAAY,EAAE,MAAM,KAAKA,YAAL,CAAkBqH,WAAlB,EAFT;AAGXpH,iBAAW,EAAE,MAAM,KAAKsC,sBAAL;AAHR,KAAP,CAAR;AAKH;;AAvUwB;;gBAAR1C,O,eACE,qD;;gBADFA,O,eAEE,mD;;AAsUtB,C;;;;;;;;;;;;;;;;;;;;ACnVD;AACA;AACA;AAEe,MAAMyH,QAAN,CAAe;AAC1BxH,aAAW,CAACyH,OAAO,GAAG,KAAX,EAAkBrD,GAAG,GAAG,EAAxB,EAA4BtC,OAAO,GAAG,KAAtC,EAA6C;AACpD,QAAG,CAAC2F,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI7F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK6F,OAAL,GAAeA,OAAf;AACA,SAAKlG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AAEA,SAAKM,OAAL,GAAeA,OAAf;AACA,SAAKsC,GAAL,GAAWA,GAAX;AAEA,SAAKsD,aAAL,GAAqB,KAArB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKC,OAAL,GAAe,EAAf;AAEA,QAAG,KAAKL,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAH,EACI,KAAK8F,QAAL,GAAgB,IAAhB,CADJ,KAEK,KAAK9F,OAAL,GAAe,KAAf;AAEL,SAAKiG,OAAL,CAAa3D,GAAb;AACH;;AAED,QAAM4D,UAAN,GAAmB;AACf,UAAMC,MAAM,GAAG,MAAM,KAAKR,OAAL,CAAatE,cAAb,CAA4B,KAAKrB,OAAjC,CAArB;AACA,UAAM,CAAEoG,WAAF,IAAkBD,MAAM,CAACE,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAlC,CAAxB;AACA,UAAMC,SAAS,GAAGN,MAAM,CAACO,MAAP,CAAc,CAAC3E,KAAD,EAAQ4E,KAAR,KAAkB;AAC9C,UAAG,CAAC,KAAKZ,SAAT,EACI,OAAO,IAAP;AAEJ,UAAGhE,KAAK,CAACyE,KAAN,IAAe,KAAKT,SAAvB,EACI,OAAO,KAAP,CAL0C,CAO9C;;AACA,aAAO,CAACI,MAAM,CAACS,KAAP,CAAa,CAAb,EAAgBD,KAAhB,EAAuBlG,IAAvB,CAA4BoG,UAAU,IAC1CvD,IAAI,CAACC,SAAL,CAAesD,UAAf,KAA8BvD,IAAI,CAACC,SAAL,CAAexB,KAAf,CAD1B,CAAR;AAGH,KAXiB,CAAlB;AAaA,QAAGqE,WAAH,EACI,KAAKL,SAAL,GAAiBK,WAAW,CAACI,KAA7B;AAEJ,WAAOC,SAAP;AACH;;AAED,QAAMK,mBAAN,CAA0BrF,QAA1B,EAAoC;AAChC,QAAG,KAAKmE,aAAR,EACImB,aAAa,CAAC,KAAKnB,aAAN,CAAb;AAEJ,QAAG,CAAC,KAAKD,OAAL,CAAatH,WAAjB,EACI,MAAM,IAAIyB,KAAJ,CAAU,gCAAV,CAAN;AAEJ,QAAG,CAAC,KAAKE,OAAT,EACI,MAAM,IAAIF,KAAJ,CAAU,4CAAV,CAAN;AAEJ,SAAKkH,aAAL,GAAqBvF,QAArB;AACA,UAAM,KAAKyE,UAAL,EAAN;AAEA,SAAKN,aAAL,GAAqBqB,WAAW,CAAC,MAAM;AACnC,WAAKf,UAAL,GAAkBrF,IAAlB,CAAuB4F,SAAS,IAAIA,SAAS,CAACtH,OAAV,CAAkB4C,KAAK,IAAI;AAC3D,aAAKiF,aAAL,IAAsB,KAAKA,aAAL,CAAmBjF,KAAnB,CAAtB;AACH,OAFmC,CAApC,EAEIf,KAFJ,CAEUiB,GAAG,IAAI;AACbiF,eAAO,CAACC,KAAR,CAAc,0BAAd,EAA0ClF,GAA1C;AACH,OAJD;AAKH,KAN+B,EAM7B,IAN6B,CAAhC;AAOH;;AAEDmF,oBAAkB,GAAG;AACjB,QAAG,CAAC,KAAKxB,aAAT,EACI;AAEJmB,iBAAa,CAAC,KAAKnB,aAAN,CAAb;AACA,SAAKA,aAAL,GAAqB,KAArB;AACA,SAAKoB,aAAL,GAAqB,KAArB;AACH;;AAEDf,SAAO,CAAC3D,GAAD,EAAM;AACT,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAK0D,OAAL,GAAe,EAAf;AAEA1D,OAAG,CAACnD,OAAJ,CAAYkI,IAAI,IAAI;AAChB,YAAMC,MAAM,GAAG,IAAI,+CAAJ,CAAW,IAAX,EAAiBD,IAAjB,CAAf;AACA,YAAME,UAAU,GAAGD,MAAM,CAACE,QAAP,CAAgBC,IAAhB,CAAqBH,MAArB,CAAnB;AAEA,WAAKtB,OAAL,CAAasB,MAAM,CAACI,IAApB,IAA4BH,UAA5B;AACA,WAAKvB,OAAL,CAAasB,MAAM,CAACK,gBAApB,IAAwCJ,UAAxC;AACA,WAAKvB,OAAL,CAAasB,MAAM,CAACM,SAApB,IAAiCL,UAAjC;AACH,KAPD;AAQH;;AAED,QAAMM,GAAN,CAAUC,OAAV,EAAmBxJ,UAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA7C,EAAgE0C,QAAQ,GAAG,KAA3E,EAAkF;AAC9E,QAAG,6CAAK,CAACsG,UAAN,CAAiBzJ,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoI,GAAxB,EAA6BC,OAA7B,EAAsCxJ,UAAtC,CAAP;;AAEJ,QAAI;AACA,YAAM0B,OAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,YAAM0J,WAAW,GAAG,MAAM,KAAKrC,OAAL,CAAarG,kBAAb,CAAgC2I,mBAAhC,CAAoDH,OAApD,EAA6D9H,OAA7D,CAA1B;AACA,YAAMkI,iBAAiB,GAAG,MAAM,KAAKvC,OAAL,CAAapG,GAAb,CAAiB4I,IAAjB,CAAsBH,WAAtB,EAAmC1J,UAAnC,CAAhC;AACA,YAAM+D,QAAQ,GAAG,MAAM,KAAKsD,OAAL,CAAapG,GAAb,CAAiB6I,kBAAjB,CAAoCF,iBAApC,CAAvB;AAEA,UAAG,CAAC7F,QAAQ,CAACkC,MAAb,EACI,OAAO9C,QAAQ,CAAC,oBAAoB6B,IAAI,CAACC,SAAL,CAAelB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAArB,CAAf;AAEJ,aAAO,KAAKgG,EAAL,CAAQH,iBAAiB,CAACI,gBAA1B,EAA4C7G,QAA5C,CAAP;AACH,KAVD,CAUE,OAAM8G,EAAN,EAAU;AACR,aAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AAED,QAAMF,EAAN,CAAS/G,eAAT,EAA0BG,QAAQ,GAAG,KAArC,EAA4C;AACxC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4I,EAAxB,EAA4B/G,eAA5B,CAAP;;AAEJ,QAAI;AACA,YAAMe,QAAQ,GAAG,MAAM,KAAKsD,OAAL,CAAapG,GAAb,CAAiBiJ,WAAjB,CAA6BlH,eAA7B,CAAvB;AAEA,UAAG,CAACe,QAAQ,CAACiG,gBAAb,EACI7G,QAAQ,CAAC,oBAAoB6B,IAAI,CAACC,SAAL,CAAelB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAArB,CAAR;AAEJ,WAAKrC,OAAL,GAAeqC,QAAQ,CAACiG,gBAAxB;AACA,WAAKzC,QAAL,GAAgBxD,QAAQ,CAACwD,QAAzB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AAEA,WAAKG,OAAL,CAAa5D,QAAQ,CAACC,GAAT,CAAamG,MAA1B;AAEAhH,cAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACH,KAbD,CAaE,OAAM8G,EAAN,EAAU;AACR,UAAGA,EAAE,CAAC1E,QAAH,GAAc6E,QAAd,CAAuB,gBAAvB,CAAH,EACI,OAAOjH,QAAQ,CAAC,+CAAD,CAAf;AAEJ,aAAOA,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AAEDpC,QAAM,CAAC1E,QAAQ,GAAG,KAAZ,EAAmB;AACrB,QAAG,CAAC,6CAAK,CAACsG,UAAN,CAAiBtG,QAAjB,CAAJ,EACI,MAAM,IAAI3B,KAAJ,CAAU,4BAAV,CAAN;AAEJ,UAAM6I,IAAI,GAAG,IAAb;AAEA,WAAO;AACHC,WAAK,CAACC,aAAa,GAAG,KAAjB,EAAwB;AACzB,YAAG,CAACA,aAAJ,EAAmB;AACfF,cAAI,CAAC7B,mBAAL,CAAyBrF,QAAzB;;AACA,iBAAO,IAAP;AACH;;AAEDkH,YAAI,CAAC7B,mBAAL,CAAyBrF,QAAzB,EAAmCZ,IAAnC,CAAwC,MAAM;AAC1CgI,uBAAa;AAChB,SAFD,EAEG7H,KAFH,CAESiB,GAAG,IAAI;AACZ4G,uBAAa,CAAC5G,GAAD,CAAb;AACH,SAJD;;AAMA,eAAO,IAAP;AACH,OAdE;;AAeH6G,UAAI,GAAG;AACHH,YAAI,CAACvB,kBAAL;AACH;;AAjBE,KAAP;AAmBH;;AAtKyB,C;;;;;;;;;;;;;;;;;;;;ACJ9B;AACA;AAEA,MAAM2B,QAAQ,GAAG,IAAI,6CAAM,CAACC,KAAP,CAAaC,QAAjB,EAAjB;;AAEA,MAAMC,mBAAmB,GAAG5G,GAAG,IAAI;AAC/B,SAAOA,GAAG,CAACoF,IAAJ,GAAW,GAAX,GAAiByB,aAAa,CAAC7G,GAAG,CAAC8G,MAAJ,IAAc,EAAf,CAAb,CAAgCxH,IAAhC,CAAqC,GAArC,CAAjB,GAA6D,GAApE;AACH,CAFD;;AAIA,MAAMuH,aAAa,GAAGE,MAAM,IAAI;AAC5B,SAAOA,MAAM,CAACvH,GAAP,CAAW,CAAC;AAAEwH;AAAF,GAAD,KAAcA,IAAzB,CAAP;AACH,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACjH,GAAD,EAAMkH,MAAN,KAAiB;AAClC,MAAGlH,GAAG,CAAC7B,IAAJ,CAAS+I,MAAM,IAAI,6CAAK,CAACzI,WAAN,CAAkByI,MAAlB,EAA0B,MAA1B,CAAnB,CAAH,EAA0D;AACtD,WAAOT,QAAQ,CAACU,MAAT,CACHnH,GAAG,CAACR,GAAJ,CAAQ,CAAC;AAAE4F;AAAF,KAAD,KAAcA,IAAtB,CADG,EAEHpF,GAAG,CAACR,GAAJ,CAAQ,CAAC;AAAEwH;AAAF,KAAD,KAAcA,IAAtB,CAFG,EAGHE,MAHG,CAAP;AAKH;;AAED,SAAOT,QAAQ,CAACU,MAAT,CACHnH,GAAG,CAACR,GAAJ,CAAQ,CAAC;AAAEwH;AAAF,GAAD,KAAcA,IAAtB,CADG,EAEHE,MAFG,CAAP;AAIH,CAbD;;AAeA,MAAME,gBAAgB,GAAG;AACrBC,MAAI,EAAE,MADe;AAErBC,MAAI,EAAE;AAFe,CAAzB;AAKe,MAAMC,MAAN,CAAa;AACxB3L,aAAW,CAACmE,QAAD,EAAWC,GAAX,EAAgB;AACvB,SAAKqD,OAAL,GAAetD,QAAQ,CAACsD,OAAxB;AACA,SAAKtD,QAAL,GAAgBA,QAAhB;AAEA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKoF,IAAL,GAAYpF,GAAG,CAACoF,IAAhB;AAEA,SAAK0B,MAAL,GAAc9G,GAAG,CAAC8G,MAAJ,IAAc,EAA5B;AACA,SAAKU,OAAL,GAAexH,GAAG,CAACwH,OAAJ,IAAe,EAA9B;AAEA,SAAKlC,SAAL,GAAiB,KAAKjC,OAAL,CAAa5C,IAAb,CAAkBT,GAAG,CAACoF,IAAtB,EAA4Bd,KAA5B,CAAkC,CAAlC,EAAqC,CAArC,CAAjB;AACA,SAAKe,gBAAL,GAAwBuB,mBAAmB,CAAC5G,GAAD,CAA3C;AACH;;AAEDkF,UAAQ,CAAC,GAAGuC,IAAJ,EAAU;AACd,UAAMC,KAAK,GAAGb,aAAa,CAAC,KAAKC,MAAN,CAA3B;AAEA,QAAGY,KAAK,CAAC/E,MAAN,KAAiB8E,IAAI,CAAC9E,MAAzB,EACI,MAAM,IAAInF,KAAJ,CAAU,iCAAV,CAAN;AAEJiK,QAAI,CAAC5K,OAAL,CAAa,CAAC8K,GAAD,EAAMtD,KAAN,KAAgB;AACzB,UAAGqD,KAAK,CAACrD,KAAD,CAAL,IAAgB,SAAnB,EACIoD,IAAI,CAACpD,KAAD,CAAJ,GAAc,KAAKhB,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B8J,GAA3B,EAAgCjF,OAAhC,CAAwC,OAAxC,EAAiD,IAAjD,CAAd;AACP,KAHD;AAKA,UAAM2D,IAAI,GAAG,IAAb;AACA,UAAMuB,cAAc,GAAG;AACnBC,cAAQ,EAAE,UADS;AAEnBC,eAAS,EAAE,CAFQ;AAGnBxG,UAAI,EAAE,KAAK+B,OAAL,CAAa3G,cAAb,CAA4BC,GAHf;AAGoB;AACvCoL,wBAAkB,EAAE,KAJD,CAIO;;AAJP,KAAvB;AAOA,WAAO;AACHC,UAAI,CAACxC,OAAO,GAAGoC,cAAX,EAA2BzI,QAAQ,GAAG,KAAtC,EAA6C;AAC7C,YAAG,6CAAK,CAACsG,UAAN,CAAiBD,OAAjB,CAAH,EAA8B;AAC1BrG,kBAAQ,GAAGqG,OAAX;AACAA,iBAAO,GAAGoC,cAAV;AACH;;AAED,YAAG,CAACzI,QAAJ,EACI,OAAO,6CAAK,CAAChC,aAAN,CAAoB,KAAK6K,IAAL,CAAU7C,IAAV,CAAe,IAAf,CAApB,EAA0CK,OAA1C,CAAP;AAEJ,YAAG,CAACa,IAAI,CAACtG,QAAL,CAAcrC,OAAlB,EACI,MAAM,IAAIF,KAAJ,CAAU,mCAAV,CAAN;AAEJ,YAAG,CAAC6I,IAAI,CAACtG,QAAL,CAAcyD,QAAlB,EACI,MAAM,IAAIhG,KAAJ,CAAU,iEAAV,CAAN;AAEJ,cAAM;AAAEyK;AAAF,YAAsB5B,IAAI,CAACrG,GAAjC;AAEA,YAAG,CAAC,CAAEoH,gBAAgB,CAACC,IAAnB,EAAyBD,gBAAgB,CAACE,IAA1C,EAAiDlB,QAAjD,CAA0D6B,eAAe,CAACC,WAAhB,EAA1D,CAAJ,EACI,OAAO/I,QAAQ,CAAE,kCAAiC8I,eAAgB,mBAAnD,CAAf;AAEJ,cAAME,UAAU,GAAGV,IAAI,CAACjI,GAAL,CAAS,CAACqC,KAAD,EAAQwC,KAAR,MAAmB;AAC3C2C,cAAI,EAAEU,KAAK,CAACrD,KAAD,CADgC;AAE3CxC;AAF2C,SAAnB,CAAT,CAAnB;AAKAwE,YAAI,CAAChD,OAAL,CAAarG,kBAAb,CAAgCoL,oBAAhC,CACI/B,IAAI,CAACtG,QAAL,CAAcrC,OADlB,EAEI2I,IAAI,CAAChB,gBAFT,EAGIG,OAAO,CAACqC,QAHZ,EAIIrC,OAAO,CAACsC,SAJZ,EAKIK,UALJ,EAMI9B,IAAI,CAAChD,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B2H,OAAO,CAAClE,IAAnC,CANJ,EAOA,CAAC3B,GAAD,EAAM+F,WAAN,KAAsB;AAClB,cAAG/F,GAAH,EACI,OAAOR,QAAQ,CAACQ,GAAD,CAAf;AAEJ,cAAG,CAAC,6CAAK,CAAClB,WAAN,CAAkBiH,WAAlB,EAA+B,iBAA/B,CAAJ,EACI,OAAOvG,QAAQ,CAAC,mBAAD,CAAf;;AAEJ,cAAI;AACA,kBAAM+H,MAAM,GAAGD,YAAY,CAACZ,IAAI,CAACmB,OAAN,EAAe,OAAO9B,WAAW,CAAC2C,eAAZ,CAA4B,CAA5B,CAAtB,CAA3B;AACA,mBAAOlJ,QAAQ,CAAC,IAAD,EAAO+H,MAAP,CAAf;AACH,WAHD,CAGE,OAAMjB,EAAN,EAAU;AACR,mBAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ,SApBD;AAqBH,OA/CE;;AAgDH,YAAMqC,IAAN,CAAW9C,OAAO,GAAG,EAArB,EAAyBxJ,UAAU,GAAGqK,IAAI,CAAChD,OAAL,CAAa5G,iBAAnD,EAAsE0C,QAAQ,GAAG,KAAjF,EAAwF;AACpF,YAAG,6CAAK,CAACsG,UAAN,CAAiBzJ,UAAjB,CAAH,EAAiC;AAC7BmD,kBAAQ,GAAGnD,UAAX;AACAA,oBAAU,GAAGqK,IAAI,CAAChD,OAAL,CAAa5G,iBAA1B;AACH;;AAED,YAAG,6CAAK,CAACgJ,UAAN,CAAiBD,OAAjB,CAAH,EAA8B;AAC1BrG,kBAAQ,GAAGqG,OAAX;AACAA,iBAAO,GAAGoC,cAAV;AACH;;AAED,YAAG,CAACzI,QAAJ,EACI,OAAO,6CAAK,CAAChC,aAAN,CAAoB,KAAKmL,IAAL,CAAUnD,IAAV,CAAe,IAAf,CAApB,EAA0CK,OAA1C,EAAmDxJ,UAAnD,CAAP;AAEJ,YAAG,CAACqK,IAAI,CAACtG,QAAL,CAAcrC,OAAlB,EACI,MAAM,IAAIF,KAAJ,CAAU,mCAAV,CAAN;AAEJ,YAAG,CAAC6I,IAAI,CAACtG,QAAL,CAAcyD,QAAlB,EACI,MAAM,IAAIhG,KAAJ,CAAU,iEAAV,CAAN;AAEJ,cAAM;AAAEyK;AAAF,YAAsB5B,IAAI,CAACrG,GAAjC;AAEA,YAAG,CAAEoH,gBAAgB,CAACC,IAAnB,EAAyBD,gBAAgB,CAACE,IAA1C,EAAiDlB,QAAjD,CAA0D6B,eAAe,CAACC,WAAhB,EAA1D,CAAH,EACQ,OAAO/I,QAAQ,CAAE,kCAAiC8I,eAAgB,mBAAnD,CAAf;AAER,cAAME,UAAU,GAAGV,IAAI,CAACjI,GAAL,CAAS,CAACqC,KAAD,EAAQwC,KAAR,MAAmB;AAC3C2C,cAAI,EAAEU,KAAK,CAACrD,KAAD,CADgC;AAE3CxC;AAF2C,SAAnB,CAAT,CAAnB;;AAKA,YAAI;AACA,gBAAMnE,OAAO,GAAG2I,IAAI,CAAChD,OAAL,CAAa3F,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,gBAAM0J,WAAW,GAAG,MAAMW,IAAI,CAAChD,OAAL,CAAarG,kBAAb,CAAgCoL,oBAAhC,CACtB/B,IAAI,CAACtG,QAAL,CAAcrC,OADQ,EAEtB2I,IAAI,CAAChB,gBAFiB,EAGtBG,OAAO,CAACqC,QAHc,EAItBrC,OAAO,CAACsC,SAJc,EAKtBK,UALsB,EAMtB9B,IAAI,CAAChD,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CANsB,CAA1B;AASA,cAAG,CAACgI,WAAW,CAACzD,MAAb,IAAuB,CAACyD,WAAW,CAACzD,MAAZ,CAAmBA,MAA9C,EACI,OAAO9C,QAAQ,CAAC,oBAAoB6B,IAAI,CAACC,SAAL,CAAeyE,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAArB,CAAf;AAEJ,gBAAME,iBAAiB,GAAG,MAAMS,IAAI,CAAChD,OAAL,CAAapG,GAAb,CAAiB4I,IAAjB,CAAsBH,WAAW,CAACA,WAAlC,EAA+C1J,UAA/C,CAAhC;AACA,gBAAMuM,SAAS,GAAG,MAAMlC,IAAI,CAAChD,OAAL,CAAapG,GAAb,CAAiB6I,kBAAjB,CAAoCF,iBAApC,CAAxB;AAEA,cAAG,CAAC2C,SAAS,CAACtG,MAAd,EACI,OAAO9C,QAAQ,CAAC,oBAAoB6B,IAAI,CAACC,SAAL,CAAesH,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAArB,CAAf;AAEJ,cAAG,CAAC/C,OAAO,CAACuC,kBAAZ,EACI,OAAO5I,QAAQ,CAAC,IAAD,EAAOyG,iBAAiB,CAAC4C,IAAzB,CAAf;;AAEJ,gBAAMC,WAAW,GAAG,OAAOpE,KAAK,GAAG,CAAf,KAAqB;AACrC,gBAAGA,KAAK,IAAI,EAAZ,EACI,OAAOlF,QAAQ,CAAC,IAAD,EAAOyG,iBAAiB,CAAC4C,IAAzB,CAAf;AAEJ,kBAAMtB,MAAM,GAAG,MAAMb,IAAI,CAAChD,OAAL,CAAapG,GAAb,CAAiByL,kBAAjB,CAAoC9C,iBAAiB,CAAC4C,IAAtD,CAArB;;AAEA,gBAAG,CAACvK,MAAM,CAAC0K,IAAP,CAAYzB,MAAZ,EAAoBvE,MAAxB,EAAgC;AAC5B,qBAAOiG,UAAU,CAAC,MAAM;AACpBH,2BAAW,CAACpE,KAAK,GAAG,CAAT,CAAX;AACH,eAFgB,EAEd,IAFc,CAAjB;AAGH;;AAED,gBAAG,CAAC,6CAAK,CAAC5F,WAAN,CAAkByI,MAAlB,EAA0B,gBAA1B,CAAJ,EACI,OAAO/H,QAAQ,CAAC,wBAAwB6B,IAAI,CAACC,SAAL,CAAeiG,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAzB,CAAf;AAEJ,kBAAM2B,OAAO,GAAG5B,YAAY,CAACZ,IAAI,CAACmB,OAAN,EAAe,OAAON,MAAM,CAAC4B,cAAP,CAAsB,CAAtB,CAAtB,CAA5B;AACA,mBAAO3J,QAAQ,CAAC,IAAD,EAAO0J,OAAP,CAAf;AACH,WAjBD;;AAmBAJ,qBAAW;AACd,SA3CD,CA2CE,OAAMxC,EAAN,EAAU;AACR,iBAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AA5HE,KAAP;AA8HH;;AAhKuB,C;;;;;;;;;;;;;;;;;;;;ACjC5B;AACA;AAEe,MAAM/J,YAAN,CAAmB;AAC9BN,aAAW,CAACmN,IAAD,EAAOC,OAAO,GAAG,KAAjB,EAAwBC,IAAI,GAAG,KAA/B,EAAsCC,QAAQ,GAAG,KAAjD,EAAwDC,OAAO,GAAG,EAAlE,EAAsEC,UAAU,GAAG,GAAnF,EAAwF;AAC/F,QAAG,CAAC,6CAAK,CAACxK,UAAN,CAAiBmK,IAAjB,CAAJ,EACI,MAAM,IAAIvL,KAAJ,CAAU,sCAAV,CAAN;AAEJ,QAAG6L,KAAK,CAACL,OAAD,CAAL,IAAkBA,OAAO,GAAG,CAA/B,EACI,MAAM,IAAIxL,KAAJ,CAAU,mCAAV,CAAN;AAEJ,QAAG,CAAC,6CAAK,CAAC8L,QAAN,CAAeH,OAAf,CAAJ,EACI,MAAM,IAAI3L,KAAJ,CAAU,iCAAV,CAAN;AAEJ,QAAGuL,IAAI,CAACQ,MAAL,CAAYR,IAAI,CAACpG,MAAL,GAAc,CAA1B,MAAiC,GAApC,EACIoG,IAAI,GAAGA,IAAI,CAAC5G,MAAL,CAAY,CAAZ,EAAe4G,IAAI,CAACpG,MAAL,GAAc,CAA7B,CAAP;AAEJ,SAAKoG,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKI,QAAL,GAAgB,4CAAK,CAACC,MAAN,CAAa;AACzBC,aAAO,EAAEX,IADgB;AAEzBC,aAAO,EAAEA,OAFgB;AAGzBG,aAAO,EAAEA,OAHgB;AAIzBQ,UAAI,EAAE;AACFV,YADE;AAEFC;AAFE;AAJmB,KAAb,CAAhB;AASH;;AAEDvK,eAAa,CAACyK,UAAU,GAAG,GAAd,EAAmB;AAC5B,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AAED,QAAMjG,WAAN,CAAkBiG,UAAU,GAAG,KAAKA,UAApC,EAAgD;AAC5C,WAAO,KAAKQ,OAAL,CAAaR,UAAb,EAAyB7K,IAAzB,CAA8BC,IAAI,IAAI;AACzC,aAAO,6CAAK,CAACqL,aAAN,CAAoBrL,IAApB,EAA0B,SAA1B,EAAqC,cAArC,CAAP;AACH,KAFM,EAEJE,KAFI,CAEE,MAAM,KAFR,CAAP;AAGH;;AAEDkL,SAAO,CAACE,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoB/E,MAAM,GAAG,KAA7B,EAAoC;AACvCA,UAAM,GAAGA,MAAM,CAACkD,WAAP,EAAT;AAEA,WAAO,KAAKsB,QAAL,CAAcI,OAAd,CAAsB;AACzBpL,UAAI,EAAEwG,MAAM,IAAI,MAAV,IAAoB+E,OADD;AAEzBhD,YAAM,EAAE/B,MAAM,IAAG,KAAT,IAAkB+E,OAFD;AAGzBD,SAHyB;AAIzB9E;AAJyB,KAAtB,EAKJzG,IALI,CAKC,CAAC;AAAEC;AAAF,KAAD,KAAcA,IALf,CAAP;AAMH;;AAnD6B;AAoDjC,C;;;;;;;;;;;;;;;;;ACvDD;AAEe;AACXtC,EAAA,mEAAYA;AADD,CAAf,E;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEe,MAAM8N,kBAAN,CAAyB;AACpCpO,aAAW,CAACyH,OAAO,GAAG,KAAX,EAAkB;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI7F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK6F,OAAL,GAAeA,OAAf;AACA,SAAKlG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAED6M,SAAO,CAACC,EAAE,GAAG,KAAN,EAAazH,MAAM,GAAG,CAAtB,EAAyBnB,IAAI,GAAG,KAAK+B,OAAL,CAAa3G,cAAb,CAA4BC,GAA5D,EAAiEwC,QAAQ,GAAG,KAA5E,EAAmF;AACtF,QAAG,6CAAK,CAACsG,UAAN,CAAiBnE,IAAjB,CAAH,EAA2B;AACvBnC,cAAQ,GAAGmC,IAAX;AACAA,UAAI,GAAG,KAAK+B,OAAL,CAAa3G,cAAb,CAA4BC,GAAnC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK8M,OAAxB,EAAiCC,EAAjC,EAAqCzH,MAArC,EAA6CnB,IAA7C,CAAP;AAEJ,QAAG,CAAC,KAAK+B,OAAL,CAAazF,SAAb,CAAuBsM,EAAvB,CAAJ,EACI,OAAO/K,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB0D,IAAvB,CAAJ,EACI,OAAOnC,QAAQ,CAAC,iCAAD,CAAf;AAEJ+K,MAAE,GAAG,KAAK7G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BqM,EAA3B,CAAL;AACA5I,QAAI,GAAG,KAAK+B,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2ByD,IAA3B,CAAP;AAEA,QAAG4I,EAAE,KAAK5I,IAAV,EACI,OAAOnC,QAAQ,CAAC,yCAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,0BAA9B,EAA0D;AACtDO,gBAAU,EAAED,EAD0C;AAEtDE,mBAAa,EAAE9I,IAFuC;AAGtDmB,YAAM,EAAE4H,QAAQ,CAAC5H,MAAD;AAHsC,KAA1D,EAIG,MAJH,EAIWlE,IAJX,CAIgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KATD,EASGhH,KATH,CASSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CATxB;AAUH;;AAED2K,WAAS,CAACJ,EAAE,GAAG,KAAN,EAAazH,MAAM,GAAG,CAAtB,EAAyB8H,OAAO,GAAG,KAAnC,EAA0CjJ,IAAI,GAAG,KAAK+B,OAAL,CAAa3G,cAAb,CAA4BC,GAA7E,EAAkFwC,QAAQ,GAAG,KAA7F,EAAoG;AACzG,QAAG,6CAAK,CAACsG,UAAN,CAAiBnE,IAAjB,CAAH,EAA2B;AACvBnC,cAAQ,GAAGmC,IAAX;AACAA,UAAI,GAAG,KAAK+B,OAAL,CAAa3G,cAAb,CAA4BC,GAAnC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKmN,SAAxB,EAAmCJ,EAAnC,EAAuCzH,MAAvC,EAA+C8H,OAA/C,EAAwDjJ,IAAxD,CAAP;AAEJ,QAAG,CAAC,KAAK+B,OAAL,CAAazF,SAAb,CAAuBsM,EAAvB,CAAJ,EACI,OAAO/K,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAesO,OAAf,CAAD,IAA4B,CAACA,OAAO,CAAC5H,MAAxC,EACI,OAAOxD,QAAQ,CAAC,2BAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB0D,IAAvB,CAAJ,EACI,OAAOnC,QAAQ,CAAC,iCAAD,CAAf;AAEJ+K,MAAE,GAAG,KAAK7G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BqM,EAA3B,CAAL;AACAK,WAAO,GAAG,KAAKlH,OAAL,CAAatC,QAAb,CAAsBwJ,OAAtB,CAAV;AACAjJ,QAAI,GAAG,KAAK+B,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2ByD,IAA3B,CAAP;AAEA,QAAG4I,EAAE,KAAK5I,IAAV,EACI,OAAOnC,QAAQ,CAAC,4CAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDO,gBAAU,EAAED,EADsC;AAElDE,mBAAa,EAAE9I,IAFmC;AAGlDkJ,gBAAU,EAAED,OAHsC;AAIlD9H,YAAM,EAAE4H,QAAQ,CAAC5H,MAAD;AAJkC,KAAtD,EAKG,MALH,EAKWlE,IALX,CAKgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAVD,EAUGhH,KAVH,CAUSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAVxB;AAWH;;AAED8K,eAAa,CAACC,aAAa,GAAG,KAAjB,EAAwBH,OAAO,GAAG,KAAlC,EAAyC9H,MAAM,GAAG,CAAlD,EAAqDkI,KAAK,GAAG,KAAKtH,OAAL,CAAa3G,cAAb,CAA4BC,GAAzF,EAA8FwC,QAAQ,GAAG,KAAzG,EAAgH;AACzH,QAAG,6CAAK,CAACsG,UAAN,CAAiBkF,KAAjB,CAAH,EAA4B;AACxBxL,cAAQ,GAAGwL,KAAX;AACAA,WAAK,GAAG,KAAKtH,OAAL,CAAa3G,cAAb,CAA4BC,GAApC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKsN,aAAxB,EAAuCC,aAAvC,EAAsDH,OAAtD,EAA+D9H,MAA/D,EAAuEkI,KAAvE,CAAP;AAEJ,QAAG,CAAC,KAAKtH,OAAL,CAAazF,SAAb,CAAuB8M,aAAvB,CAAJ,EACI,OAAOvL,QAAQ,CAAC,iCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAesO,OAAf,CAAD,IAA4B,CAACA,OAAO,CAAC5H,MAAxC,EACI,OAAOxD,QAAQ,CAAC,2BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB+M,KAAvB,CAAJ,EACI,OAAOxL,QAAQ,CAAC,gCAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,8BAA9B,EAA8D;AAC1DO,gBAAU,EAAE,KAAK9G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B6M,aAA3B,CAD8C;AAE1DN,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B8M,KAA3B,CAF2C;AAG1DH,gBAAU,EAAE,KAAKnH,OAAL,CAAatC,QAAb,CAAsBwJ,OAAtB,CAH8C;AAI1D9H,YAAM,EAAE4H,QAAQ,CAAC5H,MAAD;AAJ0C,KAA9D,EAKG,MALH,EAKWlE,IALX,CAKgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAVD,EAUGhH,KAVH,CAUSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAVxB;AAWH;;AAEDiL,eAAa,CAAClN,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4C8F,MAAM,GAAG,CAArD,EAAwDoI,QAAQ,GAAG,CAAnE,EAAsE1L,QAAQ,GAAG,KAAjF,EAAwF;AACjG,QAAG,6CAAK,CAACsG,UAAN,CAAiBoF,QAAjB,CAAH,EAA+B;AAC3B1L,cAAQ,GAAG0L,QAAX;AACAA,cAAQ,GAAG,CAAX;AACH;;AAED,QAAG,CAAC1L,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKyN,aAAxB,EAAuClN,OAAvC,EAAgD+E,MAAhD,EAAwDoI,QAAxD,CAAP;AAEJ,QAAG,CAAC,KAAKxH,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsN,QAAhB,CAAD,IAA8BA,QAAQ,GAAG,CAA5C,EACI,OAAO1L,QAAQ,CAAC,8CAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CADmC;AAElDoN,oBAAc,EAAET,QAAQ,CAAC5H,MAAD,CAF0B;AAGlDsI,qBAAe,EAAEV,QAAQ,CAACQ,QAAD;AAHyB,KAAtD,EAIG,MAJH,EAIWtM,IAJX,CAIgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KATD,EASGhH,KATH,CASSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CATxB;AAUH;;AAEDqL,iBAAe,CAACtN,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACzE,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK6N,eAAxB,EAAyCtN,OAAzC,CAAP;AAEJ,QAAG,CAAC,KAAK2F,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B;AADqC,KAAxD,EAEG,MAFH,EAEWa,IAFX,CAEgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAPD,EAOGhH,KAPH,CAOSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAPxB;AAQH;;AAEDsL,sBAAoB,CAACvN,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AAC9E,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK8N,oBAAxB,EAA8CvN,OAA9C,CAAP;AAEJ,QAAG,CAAC,KAAK2F,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B;AADqC,KAAxD,EAEG,MAFH,EAEWa,IAFX,CAEgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAPD,EAOGhH,KAPH,CAOSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAPxB;AAQH;;AAEDuL,YAAU,CAACxN,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CmN,GAAG,GAAG,KAAlD,EAAyD3K,QAAQ,GAAG,KAApE,EAA2E;AACjF,QAAG,6CAAK,CAACP,UAAN,CAAiBlB,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAG2K,GAAG,IAAI,KAAlB;AACAA,SAAG,GAAGpM,OAAN;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+N,UAAxB,EAAoCxN,OAApC,EAA6CoM,GAA7C,CAAP;AAEJ,QAAG,CAAC,KAAKzG,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAACP,UAAN,CAAiBkL,GAAjB,CAAJ,EACI,OAAO3K,QAAQ,CAAC,sBAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CADmC;AAElDoM,SAAG,EAAE,KAAKzG,OAAL,CAAatC,QAAb,CAAsB+I,GAAtB;AAF6C,KAAtD,EAGG,MAHH,EAGWvL,IAHX,CAGgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KARD,EAQGhH,KARH,CAQSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CARxB;AASH;;AAEDwL,MAAI,CAACC,KAAK,GAAG,EAAT,EAAaC,YAAY,GAAG,KAAKhI,OAAL,CAAa3G,cAAb,CAA4BC,GAAxD,EAA6DwC,QAAQ,GAAG,KAAxE,EAA+E;AAC/E,QAAG,6CAAK,CAACsG,UAAN,CAAiB4F,YAAjB,CAAH,EAAmC;AAC/BlM,cAAQ,GAAGkM,YAAX;AACAA,kBAAY,GAAG,KAAKhI,OAAL,CAAa3G,cAAb,CAA4BC,GAA3C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKgO,IAAxB,EAA8BC,KAA9B,EAAqCC,YAArC,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAAC/B,QAAN,CAAe8B,KAAf,CAAD,IAA0B,CAACnN,MAAM,CAAC0K,IAAP,CAAYyC,KAAZ,EAAmBzI,MAAjD,EACI,OAAOxD,QAAQ,CAAC,+BAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuByN,YAAvB,CAAJ,EACI,OAAOlM,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAImM,OAAO,GAAG,KAAd;AAEAF,SAAK,GAAGnN,MAAM,CAACsN,OAAP,CAAeH,KAAf,EAAsB5L,GAAtB,CAA0B,CAAC,CAAEgM,SAAF,EAAaC,SAAb,CAAD,KAA8B;AAC5D,UAAGH,OAAH,EACI;;AAEJ,UAAG,CAAC,KAAKjI,OAAL,CAAazF,SAAb,CAAuB4N,SAAvB,CAAJ,EAAuC;AACnCrM,gBAAQ,CAAC,kCAAkCqM,SAAnC,CAAR;AACA,eAAOF,OAAO,GAAG,IAAjB;AACH;;AAED,UAAG,CAAC,6CAAK,CAAC/N,SAAN,CAAgBkO,SAAhB,CAAD,IAA+BA,SAAS,IAAI,CAA/C,EAAkD;AAC9CtM,gBAAQ,CAAC,yCAAyCqM,SAA1C,CAAR;AACA,eAAOF,OAAO,GAAG,IAAjB;AACH;;AAED,aAAO;AACHI,oBAAY,EAAE,KAAKrI,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B2N,SAA3B,CADX;AAEHG,kBAAU,EAAEtB,QAAQ,CAACoB,SAAD;AAFjB,OAAP;AAIH,KAlBO,CAAR;AAoBA,QAAGH,OAAH,EACI;AAEJ,SAAKjI,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BwN,YAA3B,CADwC;AAEvDD;AAFuD,KAA3D,EAGG,MAHH,EAGW7M,IAHX,CAGgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KARD,EAQGhH,KARH,CAQSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CARxB;AASH;;AAEDgG,qBAAmB,CAACH,OAAO,GAAG,EAAX,EAAekF,aAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACjG,QAAG,6CAAK,CAACsG,UAAN,CAAiBiF,aAAjB,CAAH,EAAoC;AAChCvL,cAAQ,GAAGuL,aAAX;AACAA,mBAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwI,mBAAxB,EAA6CH,OAA7C,EAAsDkF,aAAtD,CAAP;AAEJ,QAAI;AACA1K,SAAG,GAAG,KADN;AAEAuD,cAAQ,GAAG,KAFX;AAGAsE,cAAQ,GAAG,UAHX;AAIAC,eAAS,GAAG,CAJZ;AAKA8D,oBAAc,GAAG,CALjB;AAMAzD,gBAAU,GAAG;AANb,QAOA3C,OAPJ;;AASA,QAAGxF,GAAG,IAAI,6CAAK,CAAC/D,QAAN,CAAe+D,GAAf,CAAV,EAA+B;AAC3B,UAAI;AACAA,WAAG,GAAGgB,IAAI,CAAC6K,KAAL,CAAW7L,GAAX,CAAN;AACH,OAFD,CAEE,gBAAK;AACH,eAAOb,QAAQ,CAAC,8BAAD,CAAf;AACH;AACJ;;AAED,QAAG,CAAC,6CAAK,CAACI,OAAN,CAAcS,GAAd,CAAJ,EACI,OAAOb,QAAQ,CAAC,8BAAD,CAAf;AAEJ,UAAM2M,OAAO,GAAG9L,GAAG,CAAC7B,IAAJ,CAAS4G,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACiC,IAAL,IAAa,aAAb,IAA8BjC,IAAI,CAAC+G,OAA1C;AACH,KAFe,CAAhB;AAIA,QAAG,CAAC,6CAAK,CAAC7L,KAAN,CAAYsD,QAAZ,CAAJ,EACI,OAAOpE,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsK,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAO1I,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuK,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAO3I,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG2M,OAAO,IAAIhE,SAAS,IAAI,CAA3B,EACI,OAAO3I,QAAQ,CAAC,wEAAD,CAAf;AAEJ,QAAG,CAAC2M,OAAD,IAAYhE,SAAS,GAAG,CAA3B,EACI,OAAO3I,QAAQ,CAAC,2DAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBqO,cAAhB,CAAD,IAAoCA,cAAc,GAAG,CAArD,IAA0DA,cAAc,GAAG,GAA9E,EACI,OAAOzM,QAAQ,CAAC,yCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAACI,OAAN,CAAc4I,UAAd,CAAJ,EACI,OAAOhJ,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB8M,aAAvB,CAAJ,EACI,OAAOvL,QAAQ,CAAC,iCAAD,CAAf;;AAEJ,QAAGgJ,UAAU,CAACxF,MAAd,EAAsB;AAClB,YAAM8D,QAAQ,GAAG,IAAI,6CAAM,CAACC,KAAP,CAAaC,QAAjB,EAAjB;AACA,YAAMe,KAAK,GAAG,EAAd;AACA,YAAMxJ,MAAM,GAAG,EAAf;;AAEA,WAAI,IAAI6N,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG5D,UAAU,CAACxF,MAA9B,EAAsCoJ,CAAC,EAAvC,EAA2C;AACvC,YAAI;AAAE/E,cAAF;AAAQnF;AAAR,YAAkBsG,UAAU,CAAC4D,CAAD,CAAhC;AAEA,YAAG,CAAC/E,IAAD,IAAS,CAAC,6CAAK,CAAC/K,QAAN,CAAe+K,IAAf,CAAV,IAAkC,CAACA,IAAI,CAACrE,MAA3C,EACI,OAAOxD,QAAQ,CAAC,sCAAsC6H,IAAvC,CAAf;AAEJ,YAAG,CAACnF,KAAJ,EACI,OAAO1C,QAAQ,CAAC,uCAAuC0C,KAAxC,CAAf;AAEJ,YAAGmF,IAAI,IAAI,SAAX,EACInF,KAAK,GAAG,KAAKwB,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BgE,KAA3B,EAAkCa,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAR;AAEJgF,aAAK,CAACrI,IAAN,CAAW2H,IAAX;AACA9I,cAAM,CAACmB,IAAP,CAAYwC,KAAZ;AACH;;AAED,UAAI;AACAsG,kBAAU,GAAG1B,QAAQ,CAACuF,MAAT,CAAgBtE,KAAhB,EAAuBxJ,MAAvB,EAA+BwE,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAAb;AACH,OAFD,CAEE,OAAOuD,EAAP,EAAW;AACT,eAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ,KA1BD,MA0BOkC,UAAU,GAAG,EAAb;;AAEP,SAAK9E,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B6M,aAA3B,CADoC;AAEnDuB,eAAS,EAAE5B,QAAQ,CAACxC,QAAD,CAFgC;AAGnDqE,gBAAU,EAAE7B,QAAQ,CAACvC,SAAD,CAH+B;AAInDqE,mCAA6B,EAAEP,cAJoB;AAKnD5L,SAAG,EAAEgB,IAAI,CAACC,SAAL,CAAejB,GAAf,CAL8C;AAMnDuD,cANmD;AAOnD6I,eAAS,EAAEjE;AAPwC,KAAvD,EAQG,MARH,EAQW5J,IARX,CAQgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAbD,EAaGhH,KAbH,CAaSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAbxB;AAcH;;AAEDyI,sBAAoB,CAChBpJ,eADgB,EAEhBqG,gBAFgB,EAGhBwC,QAAQ,GAAG,UAHK,EAIhBC,SAAS,GAAG,CAJI,EAKhBK,UAAU,GAAG,EALG,EAMhBuC,aAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAN5B,EAOhBwC,QAAQ,GAAG,KAPK,EAQlB;AACE,QAAG,6CAAK,CAACsG,UAAN,CAAiBiF,aAAjB,CAAH,EAAoC;AAChCvL,cAAQ,GAAGuL,aAAX;AACAA,mBAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,6CAAK,CAAC8I,UAAN,CAAiB0C,UAAjB,CAAH,EAAiC;AAC7BhJ,cAAQ,GAAGgJ,UAAX;AACAA,gBAAU,GAAG,EAAb;AACH;;AAED,QAAG,6CAAK,CAAC1C,UAAN,CAAiBqC,SAAjB,CAAH,EAAgC;AAC5B3I,cAAQ,GAAG2I,SAAX;AACAA,eAAS,GAAG,CAAZ;AACH;;AAED,QAAG,6CAAK,CAACrC,UAAN,CAAiBoC,QAAjB,CAAH,EAA+B;AAC3B1I,cAAQ,GAAG0I,QAAX;AACAA,cAAQ,GAAG,UAAX;AACH;;AAED,QAAG,CAAC1I,QAAJ,EAAc;AACV,aAAO,KAAKhC,aAAL,CACH,KAAKiL,oBADF,EAEHpJ,eAFG,EAGHqG,gBAHG,EAIHwC,QAJG,EAKHC,SALG,EAMHK,UANG,EAOHuC,aAPG,CAAP;AASH;;AAED,QAAG,CAAC,KAAKrH,OAAL,CAAazF,SAAb,CAAuBoB,eAAvB,CAAJ,EACI,OAAOG,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeoJ,gBAAf,CAAD,IAAqC,CAACA,gBAAgB,CAAC1C,MAA1D,EACI,OAAOxD,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuK,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAO3I,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsK,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAO1I,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAACI,OAAN,CAAc4I,UAAd,CAAJ,EACI,OAAOhJ,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB8M,aAAvB,CAAJ,EACI,OAAOvL,QAAQ,CAAC,iCAAD,CAAf;AAEJkG,oBAAgB,GAAGA,gBAAgB,CAAC3C,OAAjB,CAAyB,QAAzB,EAAmC,EAAnC,CAAnB;;AAEA,QAAGyF,UAAU,CAACxF,MAAd,EAAsB;AAClB,YAAM8D,QAAQ,GAAG,IAAI,6CAAM,CAACC,KAAP,CAAaC,QAAjB,EAAjB;AACA,YAAMe,KAAK,GAAG,EAAd;AACA,YAAMxJ,MAAM,GAAG,EAAf;;AAEA,WAAI,IAAI6N,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG5D,UAAU,CAACxF,MAA9B,EAAsCoJ,CAAC,EAAvC,EAA2C;AACvC,YAAI;AAAE/E,cAAF;AAAQnF;AAAR,YAAkBsG,UAAU,CAAC4D,CAAD,CAAhC;AAEA,YAAG,CAAC/E,IAAD,IAAS,CAAC,6CAAK,CAAC/K,QAAN,CAAe+K,IAAf,CAAV,IAAkC,CAACA,IAAI,CAACrE,MAA3C,EACI,OAAOxD,QAAQ,CAAC,sCAAsC6H,IAAvC,CAAf;AAEJ,YAAG,CAACnF,KAAJ,EACI,OAAO1C,QAAQ,CAAC,uCAAuC0C,KAAxC,CAAf;AAEJ,YAAGmF,IAAI,IAAI,SAAX,EACInF,KAAK,GAAG,KAAKwB,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BgE,KAA3B,EAAkCa,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAR;AAEJgF,aAAK,CAACrI,IAAN,CAAW2H,IAAX;AACA9I,cAAM,CAACmB,IAAP,CAAYwC,KAAZ;AACH;;AAED,UAAI;AACAsG,kBAAU,GAAG1B,QAAQ,CAACuF,MAAT,CAAgBtE,KAAhB,EAAuBxJ,MAAvB,EAA+BwE,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAAb;AACH,OAFD,CAEE,OAAOuD,EAAP,EAAW;AACT,eAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ,KA1BD,MA0BOkC,UAAU,GAAG,EAAb;;AAEP,SAAK9E,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,6BAA9B,EAA6D;AACzD5D,sBAAgB,EAAE,KAAK3C,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BmB,eAA3B,CADuC;AAEzDoL,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B6M,aAA3B,CAF0C;AAGzD2B,uBAAiB,EAAEhH,gBAHsC;AAIzD4G,eAAS,EAAE5B,QAAQ,CAACxC,QAAD,CAJsC;AAKzDqE,gBAAU,EAAE7B,QAAQ,CAACvC,SAAD,CALqC;AAMzDsE,eAAS,EAAEjE;AAN8C,KAA7D,EAOG,MAPH,EAOW5J,IAPX,CAOgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;;AAEJ,UAAGkI,WAAW,CAACzD,MAAZ,IAAsByD,WAAW,CAACzD,MAAZ,CAAmBqK,OAA5C,EAAqD;AACjD,eAAOnN,QAAQ,CACX,KAAKkE,OAAL,CAAajC,MAAb,CAAoBsE,WAAW,CAACzD,MAAZ,CAAmBqK,OAAvC,CADW,CAAf;AAGH;;AAED,UAAG,CAAC5G,WAAW,CAACzD,MAAZ,CAAmBA,MAAvB,EACI,OAAO9C,QAAQ,CAACuG,WAAD,CAAf;AAEJvG,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KArBD,EAqBGhH,KArBH,CAqBSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CArBxB;AAsBH;;AAED4M,aAAW,CAAC/G,OAAO,GAAG,EAAX,EAAekF,aAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACzF,QAAG,6CAAK,CAACsG,UAAN,CAAiBiF,aAAjB,CAAH,EAAoC;AAChCvL,cAAQ,GAAGuL,aAAX;AACAA,mBAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoP,WAAxB,EAAqC/G,OAArC,EAA8CkF,aAA9C,CAAP;AAEJ,UAAM;AACFtF,UAAI,GAAG,KADL;AAEFoH,kBAAY,GAAG,KAFb;AAGFC,iBAAW,GAAG,KAHZ;AAIF3C,SAAG,GAAG,KAJJ;AAKF4C,iBAAW,GAAG,CALZ;AAMFC,cAAQ,GAAG,CANT;AAMY;AACdC,gBAAU,GAAG,CAPX;AAOc;AAChBC,eAAS,GAAGC,IAAI,CAACC,GAAL,EARV;AASFC,aAAO,GAAG,KATR;AAUFC,mBAAa,GAAG,CAVd;AAUiB;AACnBC,wBAAkB,GAAG,CAXnB;AAWsB;AACxBC,kBAAY,GAAG,CAZb;AAaFC,oBAAc,GAAG;AAbf,QAcF5H,OAdJ;AAgBA,QAAG,CAAC,6CAAK,CAACvJ,QAAN,CAAemJ,IAAf,CAAD,IAAyB,CAACA,IAAI,CAACzC,MAAlC,EACI,OAAOxD,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeuQ,YAAf,CAAD,IAAiC,CAACA,YAAY,CAAC7J,MAAlD,EACI,OAAOxD,QAAQ,CAAC,qCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBmP,WAAhB,CAAD,IAAiCA,WAAW,IAAI,CAAnD,EACI,OAAOvN,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBoP,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA7C,EACI,OAAOxN,QAAQ,CAAC,sCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBqP,UAAhB,CAAD,IAAgCA,UAAU,IAAI,CAAjD,EACI,OAAOzN,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsP,SAAhB,CAAD,IAA+BA,SAAS,GAAGC,IAAI,CAACC,GAAL,EAA9C,EACI,OAAO5N,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgByP,OAAhB,CAAD,IAA6BA,OAAO,IAAIH,SAA3C,EACI,OAAO1N,QAAQ,CAAC,qCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAewQ,WAAf,CAAD,IAAgC,CAACA,WAAW,CAAC9J,MAAhD,EACI,OAAOxD,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAe6N,GAAf,CAAD,IAAwB,CAACA,GAAG,CAACnH,MAA7B,IAAuC,CAAC,6CAAK,CAAC/D,UAAN,CAAiBkL,GAAjB,CAA3C,EACI,OAAO3K,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB0P,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAO9N,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB2P,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAO/N,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB4P,YAAhB,CAAD,IAAkCA,YAAY,GAAG,CAAjD,IAAuD,CAACC,cAAD,IAAmBD,YAA7E,EACI,OAAOhO,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6P,cAAhB,CAAD,IAAoCA,cAAc,GAAG,CAArD,IAA2DA,cAAc,IAAI,CAACD,YAAjF,EACI,OAAOhO,QAAQ,CAAC,kCAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB8M,aAAvB,CAAJ,EACI,OAAOvL,QAAQ,CAAC,iCAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,yBAA9B,EAAyD;AACrDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B6M,aAA3B,CADsC;AAErDtF,UAAI,EAAE,KAAK/B,OAAL,CAAatC,QAAb,CAAsBqE,IAAtB,CAF+C;AAGrDiI,UAAI,EAAE,KAAKhK,OAAL,CAAatC,QAAb,CAAsByL,YAAtB,CAH+C;AAIrDC,iBAAW,EAAE,KAAKpJ,OAAL,CAAatC,QAAb,CAAsB0L,WAAtB,CAJwC;AAKrD3C,SAAG,EAAE,KAAKzG,OAAL,CAAatC,QAAb,CAAsB+I,GAAtB,CALgD;AAMrDwD,kBAAY,EAAEjD,QAAQ,CAACqC,WAAD,CAN+B;AAOrDa,aAAO,EAAElD,QAAQ,CAACsC,QAAD,CAPoC;AAQrDa,SAAG,EAAEnD,QAAQ,CAACuC,UAAD,CARwC;AASrDa,gBAAU,EAAEpD,QAAQ,CAACwC,SAAD,CATiC;AAUrDa,cAAQ,EAAErD,QAAQ,CAAC2C,OAAD,CAVmC;AAWrDW,0BAAoB,EAAEtD,QAAQ,CAAC4C,aAAD,CAXuB;AAYrDW,iCAA2B,EAAEvD,QAAQ,CAAC6C,kBAAD,CAZgB;AAarDW,mBAAa,EAAE;AACXC,qBAAa,EAAEzD,QAAQ,CAAC8C,YAAD,CADZ;AAEXY,mBAAW,EAAE1D,QAAQ,CAAC+C,cAAD;AAFV;AAbsC,KAAzD,EAiBG,MAjBH,EAiBW7O,IAjBX,CAiBgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;;AAEJ,UAAGkI,WAAW,CAACzD,MAAZ,IAAsByD,WAAW,CAACzD,MAAZ,CAAmBqK,OAA5C,EAAqD;AACjD,eAAOnN,QAAQ,CACX,KAAKkE,OAAL,CAAajC,MAAb,CAAoBsE,WAAW,CAACzD,MAAZ,CAAmBqK,OAAvC,CADW,CAAf;AAGH;;AAEDnN,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KA5BD,EA4BGhH,KA5BH,CA4BSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CA5BxB;AA6BH;;AAEDqO,aAAW,CAACxI,OAAO,GAAG,EAAX,EAAekF,aAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACzF,QAAG,6CAAK,CAACsG,UAAN,CAAiBiF,aAAjB,CAAH,EAAoC;AAChCvL,cAAQ,GAAGuL,aAAX;AACAA,mBAAa,GAAG,KAAKrH,OAAL,CAAa3G,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK6Q,WAAxB,EAAqCxI,OAArC,EAA8CkF,aAA9C,CAAP;AAEJ,UAAM;AACF+B,iBAAW,GAAG,KADZ;AAEF3C,SAAG,GAAG,KAFJ;AAGFmD,mBAAa,GAAG,CAHd;AAGiB;AACnBC,wBAAkB,GAAG,CAJnB,CAIqB;;AAJrB,QAKF1H,OALJ;AAOA,QAAG,CAAC,6CAAK,CAACjI,SAAN,CAAgB0P,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAO9N,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB2P,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAO/N,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,KAAKkE,OAAL,CAAazF,SAAb,CAAuB8M,aAAvB,CAAJ,EACI,OAAOvL,QAAQ,CAAC,iCAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,oBAA9B,EAAoD;AAChDQ,mBAAa,EAAE,KAAK/G,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2B6M,aAA3B,CADiC;AAEhD+B,iBAAW,EAAE,KAAKpJ,OAAL,CAAatC,QAAb,CAAsB0L,WAAtB,CAFmC;AAGhD3C,SAAG,EAAE,KAAKzG,OAAL,CAAatC,QAAb,CAAsB+I,GAAtB,CAH2C;AAIhDmE,eAAS,EAAE5D,QAAQ,CAAC4C,aAAD,CAJ6B;AAKhDiB,sBAAgB,EAAE7D,QAAQ,CAAC6C,kBAAD;AALsB,KAApD,EAMG,MANH,EAMW3O,IANX,CAMgBmH,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAClI,KAAf,EACI,OAAO2B,QAAQ,CAACuG,WAAW,CAAClI,KAAb,CAAf;;AAEJ,UAAGkI,WAAW,CAACzD,MAAZ,IAAsByD,WAAW,CAACzD,MAAZ,CAAmBqK,OAA5C,EAAqD;AACjD,eAAOnN,QAAQ,CACX,KAAKkE,OAAL,CAAajC,MAAb,CAAoBsE,WAAW,CAACzD,MAAZ,CAAmBqK,OAAvC,CADW,CAAf;AAGH;;AAEDnN,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAjBD,EAiBGhH,KAjBH,CAiBSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAjBxB;AAkBH;;AAEDwO,WAAS,CAAC,GAAG1G,IAAJ,EAAU;AACf,WAAO,KAAK6C,SAAL,CAAe,GAAG7C,IAAlB,CAAP;AACH;;AAED2G,eAAa,CAAC,GAAG3G,IAAJ,EAAU;AACnB,WAAO,KAAKgD,aAAL,CAAmB,GAAGhD,IAAtB,CAAP;AACH;;AAED4G,aAAW,CAAC,GAAG5G,IAAJ,EAAU;AACjB,WAAO,KAAK8E,WAAL,CAAiB,GAAG9E,IAApB,CAAP;AACH;;AAED6G,aAAW,CAAC,GAAG7G,IAAJ,EAAU;AACjB,WAAO,KAAKuG,WAAL,CAAiB,GAAGvG,IAApB,CAAP;AACH;;AAnoBmC,C;;;;;;;;;;;;;;;;;;;ACJxC;AACA;AAEe,MAAM8G,GAAN,CAAU;AACrB3S,aAAW,CAACyH,OAAO,GAAG,KAAX,EAAkB;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI7F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK6F,OAAL,GAAeA,OAAf;AACA,SAAKlG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAEDoR,YAAU,CAACC,KAAD,EAAQ;AACd,WAAO,EACH,GAAGA,KADA;AAEHrJ,UAAI,EAAE,KAAK/B,OAAL,CAAajC,MAAb,CAAoBqN,KAAK,CAACrJ,IAA1B,CAFH;AAGHiI,UAAI,EAAEoB,KAAK,CAACpB,IAAN,IAAc,KAAKhK,OAAL,CAAajC,MAAb,CAAoBqN,KAAK,CAACpB,IAA1B,CAHjB;AAIHZ,iBAAW,EAAEgC,KAAK,CAAChC,WAAN,IAAqB,KAAKpJ,OAAL,CAAajC,MAAb,CAAoBqN,KAAK,CAAChC,WAA1B,CAJ/B;AAKH3C,SAAG,EAAE2E,KAAK,CAAC3E,GAAN,IAAa,KAAKzG,OAAL,CAAajC,MAAb,CAAoBqN,KAAK,CAAC3E,GAA1B;AALf,KAAP;AAOH;;AAED4E,iBAAe,CAACvP,QAAQ,GAAG,KAAZ,EAAmB;AAC9B,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKuR,eAAxB,CAAP;AAEJ,SAAKrL,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,oBAA9B,EAAoDrL,IAApD,CAAyD2F,KAAK,IAAI;AAC9D/E,cAAQ,CAAC,IAAD,EAAO+E,KAAP,CAAR;AACH,KAFD,EAEGxF,KAFH,CAESiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFxB;AAGH;;AAEDgP,UAAQ,CAACzK,KAAK,GAAG,KAAKb,OAAL,CAAa7G,YAAtB,EAAoC2C,QAAQ,GAAG,KAA/C,EAAsD;AAC1D,QAAG,6CAAK,CAACsG,UAAN,CAAiBvB,KAAjB,CAAH,EAA4B;AACxB/E,cAAQ,GAAG+E,KAAX;AACAA,WAAK,GAAG,KAAKb,OAAL,CAAa7G,YAArB;AACH;;AAED,QAAG,CAAC2C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwR,QAAxB,EAAkCzK,KAAlC,CAAP;AAEJ,QAAGA,KAAK,KAAK,KAAb,EACI,OAAO/E,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAG+E,KAAK,IAAI,UAAZ,EACIA,KAAK,GAAG,CAAR;AAEJ,QAAGA,KAAK,IAAI,QAAZ,EACI,OAAO,KAAKwK,eAAL,CAAqBvP,QAArB,CAAP;AAEJ,QAAGkK,KAAK,CAACnF,KAAD,CAAL,IAAgB,6CAAK,CAACjE,KAAN,CAAYiE,KAAZ,CAAnB,EACI,OAAO,KAAK0K,cAAL,CAAoB1K,KAApB,EAA2B/E,QAA3B,CAAP;AAEJ,SAAK0P,gBAAL,CAAsB3K,KAAtB,EAA6B/E,QAA7B;AACH;;AAEDyP,gBAAc,CAACE,SAAD,EAAY3P,QAAQ,GAAG,KAAvB,EAA8B;AACxC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKyR,cAAxB,EAAwCE,SAAxC,CAAP;AAEJ,SAAKzL,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,qBAA9B,EAAqD;AACjD/H,WAAK,EAAEiN;AAD0C,KAArD,EAEG,MAFH,EAEWvQ,IAFX,CAEgB2F,KAAK,IAAI;AACrB/E,cAAQ,CAAC,IAAD,EAAO+E,KAAP,CAAR;AACH,KAJD,EAIGxF,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDkP,kBAAgB,CAACvR,OAAD,EAAU6B,QAAQ,GAAG,KAArB,EAA4B;AACxC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0R,gBAAxB,EAA0CvR,OAA1C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACC,SAAN,CAAgBD,OAAhB,CAAD,IAA6BA,OAAO,GAAG,CAA1C,EACI,OAAO6B,QAAQ,CAAC,+BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsD;AAClD4D,SAAG,EAAEnD,QAAQ,CAAC/M,OAAD;AADqC,KAAtD,EAEG,MAFH,EAEWiB,IAFX,CAEgB2F,KAAK,IAAI;AACrB/E,cAAQ,CAAC,IAAD,EAAO+E,KAAP,CAAR;AACH,KAJD,EAIGxF,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDoP,0BAAwB,CAAC7K,KAAK,GAAG,KAAKb,OAAL,CAAa7G,YAAtB,EAAoC2C,QAAQ,GAAG,KAA/C,EAAsD;AAC1E,QAAG,6CAAK,CAACsG,UAAN,CAAiBvB,KAAjB,CAAH,EAA4B;AACxB/E,cAAQ,GAAG+E,KAAX;AACAA,WAAK,GAAG,KAAKb,OAAL,CAAa7G,YAArB;AACH;;AAED,QAAG,CAAC2C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4R,wBAAxB,EAAkD7K,KAAlD,CAAP;AAEJ,SAAKyK,QAAL,CAAczK,KAAd,EAAqB3F,IAArB,CAA0B,CAAC;AAAEyQ,kBAAY,GAAG;AAAjB,KAAD,KAA2B;AACjD7P,cAAQ,CAAC,IAAD,EAAO6P,YAAY,CAACrM,MAApB,CAAR;AACH,KAFD,EAEGjE,KAFH,CAESiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFxB;AAGH;;AAEDsP,gBAAc,CAACnP,aAAD,EAAgBX,QAAQ,GAAG,KAA3B,EAAkC;AAC5C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK8R,cAAxB,EAAwCnP,aAAxC,CAAP;AAEJ,SAAKuD,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,2BAA9B,EAA2D;AACvD/H,WAAK,EAAE/B;AADgD,KAA3D,EAEG,MAFH,EAEWvB,IAFX,CAEgBmH,WAAW,IAAI;AAC3BvG,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAJD,EAIGhH,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAED+I,oBAAkB,CAAC5I,aAAD,EAAgBX,QAAQ,GAAG,KAA3B,EAAkC;AAChD,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKuL,kBAAxB,EAA4C5I,aAA5C,CAAP;AAEJ,SAAKuD,OAAL,CAAavH,YAAb,CAA0B8N,OAA1B,CAAkC,uCAAlC,EAA2E;AACvE/H,WAAK,EAAE/B;AADgE,KAA3E,EAEG,MAFH,EAEWvB,IAFX,CAEgBmH,WAAW,IAAI;AAC3BvG,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KAJD,EAIGhH,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDuP,0BAAwB,CAACxR,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwS,KAAK,GAAG,EAApD,EAAwDC,MAAM,GAAG,CAAjE,EAAoEjQ,QAAQ,GAAG,KAA/E,EAAsF;AAC1G,QAAG,6CAAK,CAACsG,UAAN,CAAiB2J,MAAjB,CAAH,EAA6B;AACzBjQ,cAAQ,GAAGiQ,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC3J,UAAN,CAAiB0J,KAAjB,CAAH,EAA4B;AACxBhQ,cAAQ,GAAGgQ,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,CAAChQ,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+R,wBAAxB,EAAkDxR,OAAlD,EAA2DyR,KAA3D,EAAkEC,MAAlE,CAAP;AAEJ,WAAO,KAAKC,sBAAL,CAA4B3R,OAA5B,EAAqC,IAArC,EAA2CyR,KAA3C,EAAkDC,MAAlD,EAA0DjQ,QAA1D,CAAP;AACH;;AAEDmQ,4BAA0B,CAAC5R,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwS,KAAK,GAAG,EAApD,EAAwDC,MAAM,GAAG,CAAjE,EAAoEjQ,QAAQ,GAAG,KAA/E,EAAsF;AAC5G,QAAG,6CAAK,CAACsG,UAAN,CAAiB2J,MAAjB,CAAH,EAA6B;AACzBjQ,cAAQ,GAAGiQ,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC3J,UAAN,CAAiB0J,KAAjB,CAAH,EAA4B;AACxBhQ,cAAQ,GAAGgQ,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,CAAChQ,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKmS,0BAAxB,EAAoD5R,OAApD,EAA6DyR,KAA7D,EAAoEC,MAApE,CAAP;AAEJ,WAAO,KAAKC,sBAAL,CAA4B3R,OAA5B,EAAqC,MAArC,EAA6CyR,KAA7C,EAAoDC,MAApD,EAA4DjQ,QAA5D,CAAP;AACH;;AAED,QAAMkQ,sBAAN,CAA6B3R,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAnE,EAAwE4S,SAAS,GAAG,KAApF,EAA2FJ,KAAK,GAAG,EAAnG,EAAuGC,MAAM,GAAG,CAAhH,EAAmHjQ,QAAQ,GAAG,KAA9H,EAAqI;AACjI,QAAG,6CAAK,CAACsG,UAAN,CAAiB2J,MAAjB,CAAH,EAA6B;AACzBjQ,cAAQ,GAAGiQ,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC3J,UAAN,CAAiB0J,KAAjB,CAAH,EAA4B;AACxBhQ,cAAQ,GAAGgQ,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,6CAAK,CAAC1J,UAAN,CAAiB8J,SAAjB,CAAH,EAAgC;AAC5BpQ,cAAQ,GAAGoQ,SAAX;AACAA,eAAS,GAAG,KAAZ;AACH;;AAED,QAAG,6CAAK,CAAC9J,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKkS,sBAAxB,EAAgD3R,OAAhD,EAAyD6R,SAAzD,EAAoEJ,KAApE,EAA2EC,MAA3E,CAAP;AAEJ,QAAG,CAAC,CAAE,IAAF,EAAQ,MAAR,EAAgB,KAAhB,EAAwBhJ,QAAxB,CAAiCmJ,SAAjC,CAAJ,EACI,OAAOpQ,QAAQ,CAAC,4DAAD,CAAf;;AAEJ,QAAGoQ,SAAS,IAAI,KAAhB,EAAuB;AACnB,UAAI;AACA,cAAMjO,IAAI,GAAG,MAAM,KAAK+N,sBAAL,CAA4B3R,OAA5B,EAAqC,MAArC,EAA6CyR,KAA7C,EAAoDC,MAApD,CAAnB;AACA,cAAMlF,EAAE,GAAG,MAAM,KAAKmF,sBAAL,CAA4B3R,OAA5B,EAAqC,IAArC,EAA2CyR,KAA3C,EAAkDC,MAAlD,CAAjB;AAEAjQ,gBAAQ,CAAC,IAAD,EAAO,CACX,GAAGmC,IAAI,CAAC9B,GAAL,CAASgQ,EAAE,KAAKA,EAAE,CAACD,SAAH,GAAe,MAAf,EAAuBC,EAA5B,CAAX,CADQ,EAEX,GAAGtF,EAAE,CAAC1K,GAAH,CAAOgQ,EAAE,KAAKA,EAAE,CAACD,SAAH,GAAe,IAAf,EAAqBC,EAA1B,CAAT,CAFQ,EAGbzL,IAHa,CAGR,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACwL,QAAF,CAAWC,SAAX,GAAuB1L,CAAC,CAACyL,QAAF,CAAWC,SAHpC,CAAP,CAAR;AAIH,OARD,CAQE,OAAMzJ,EAAN,EAAU;AACR,eAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AAED,QAAG,CAAC,KAAK5C,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB4R,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,CAA9D,EACI,OAAOhQ,QAAQ,CAAC,wBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6R,MAAhB,CAAD,IAA4BA,MAAM,GAAG,CAAxC,EACI,OAAOjQ,QAAQ,CAAC,yBAAD,CAAf;AAEJzB,WAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAK2F,OAAL,CAAavH,YAAb,CAA0B8N,OAA1B,CAAmC,kCAAiC2F,SAAU,MAA9E,EAAqF;AACjFvM,aAAO,EAAE;AACLtF;AADK,OADwE;AAIjF0R,YAJiF;AAKjFD;AALiF,KAArF,EAMG,MANH,EAMW5Q,IANX,CAMgB,CAAC;AAAEmH;AAAF,KAAD,KAAqB;AACjCvG,cAAQ,CAAC,IAAD,EAAOuG,WAAP,CAAR;AACH,KARD,EAQGhH,KARH,CAQSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CARxB;AASH;;AAEDgQ,YAAU,CAACjS,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACpE,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwS,UAAxB,EAAoCjS,OAApC,CAAP;AAEJ,QAAG,CAAC,KAAK2F,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAK2F,OAAL,CAAavH,YAAb,CAA0B8N,OAA1B,CAAkC,2BAAlC,EAA+D;AAC3DlM;AAD2D,KAA/D,EAEG,MAFH,EAEWa,IAFX,CAEgByE,OAAO,IAAI;AACvB7D,cAAQ,CAAC,IAAD,EAAO6D,OAAP,CAAR;AACH,KAJD,EAIGtE,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDiQ,YAAU,CAAClS,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACpE,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKyS,UAAxB,EAAoClS,OAApC,CAAP;AAEJ,SAAKiS,UAAL,CAAgBjS,OAAhB,EAAyBa,IAAzB,CAA8B,CAAC;AAAEsR,aAAO,GAAG;AAAZ,KAAD,KAAqB;AAC/C1Q,cAAQ,CAAC,IAAD,EAAO0Q,OAAP,CAAR;AACH,KAFD,EAEGnR,KAFH,CAESiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFxB;AAGH;;AAEDmQ,cAAY,CAACpS,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACtE,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK2S,YAAxB,EAAsCpS,OAAtC,CAAP;AAEJ,QAAG,CAAC,KAAK2F,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAK2F,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDlM;AADkD,KAAtD,EAEG,MAFH,EAEWa,IAFX,CAEgB,CAAC;AAAEwR,iBAAW,GAAG,CAAhB;AAAmBC,kBAAY,GAAG,CAAlC;AAAqCC,aAAO,GAAG,CAA/C;AAAkDC,cAAQ,GAAG;AAA7D,KAAD,KAAsE;AAClF/Q,cAAQ,CAAC,IAAD,EAAQ6Q,YAAY,GAAGD,WAAhB,IAAgCG,QAAQ,GAAGD,OAA3C,CAAP,CAAR;AACH,KAJD,EAIGvR,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDwQ,0BAAwB,CAACzS,OAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AAClF,QAAG,6CAAK,CAACsG,UAAN,CAAiB/H,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAK2F,OAAL,CAAa3G,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKgT,wBAAxB,EAAkDzS,OAAlD,CAAP;AAEJ,QAAG,CAAC,KAAK2F,OAAL,CAAazF,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAK2F,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,+BAA9B,EAA+D;AAC3DlM;AAD2D,KAA/D,EAEG,MAFH,EAEWa,IAFX,CAEgB,CAAC;AAAE6R,gBAAU,GAAG;AAAf,KAAD,KAA4B;AACxC,UAAG,CAACA,UAAJ,EACI,OAAOjR,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAf;AAEJ,YAAMkR,MAAM,GAAGD,UAAU,CAAC5Q,GAAX,CAAeiP,KAAK,IAAI;AACnC,eAAO,KAAKD,UAAL,CAAgBC,KAAhB,CAAP;AACH,OAFc,EAEZ6B,MAFY,CAEL,CAACD,MAAD,EAAS5B,KAAT,KAAmB;AACzB,eAAO4B,MAAM,CAAC5B,KAAK,CAACrJ,IAAP,CAAN,GAAqBqJ,KAArB,EAA4B4B,MAAnC;AACH,OAJc,EAIZ,EAJY,CAAf;AAMAlR,cAAQ,CAAC,IAAD,EAAOkR,MAAP,CAAR;AACH,KAbD,EAaG3R,KAbH,CAaSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAbxB;AAcH;;AAED4Q,gBAAc,CAAChG,OAAO,GAAG,KAAX,EAAkBpL,QAAQ,GAAG,KAA7B,EAAoC;AAC9C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoT,cAAxB,EAAwChG,OAAxC,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACtO,QAAN,CAAesO,OAAf,CAAD,IAA4B,CAACA,OAAO,CAAC5H,MAAxC,EACI,OAAOxD,QAAQ,CAAC,2BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,4BAA9B,EAA4D;AACxD/H,WAAK,EAAE,KAAKwB,OAAL,CAAatC,QAAb,CAAsBwJ,OAAtB;AADiD,KAA5D,EAEG,MAFH,EAEWhM,IAFX,CAEgBkQ,KAAK,IAAI;AACrB,UAAG,CAACA,KAAK,CAACrJ,IAAV,EACI,OAAOjG,QAAQ,CAAC,sBAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAO,KAAKqP,UAAL,CAAgBC,KAAhB,CAAP,CAAR;AACH,KAPD,EAOG/P,KAPH,CAOSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAPxB;AAQH;;AAED6Q,WAAS,CAACrR,QAAQ,GAAG,KAAZ,EAAmB;AACxB,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqT,SAAxB,CAAP;AAEJ,SAAKnN,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,kBAA9B,EAAkDrL,IAAlD,CAAuD,CAAC;AAAEkS,WAAK,GAAG;AAAV,KAAD,KAAoB;AACvEtR,cAAQ,CAAC,IAAD,EAAOsR,KAAK,CAACjR,GAAN,CAAU,CAAC;AAAE9B,eAAO,EAAE;AAAEqL,cAAF;AAAQ2H;AAAR;AAAX,OAAD,KACpB,GAAE,KAAKrN,OAAL,CAAajC,MAAb,CAAoB2H,IAApB,CAA0B,IAAG2H,IAAK,EAD1B,CAAP,CAAR;AAGH,KAJD,EAIGhS,KAJH,CAISiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAJxB;AAKH;;AAEDgR,eAAa,CAACrK,KAAK,GAAG,CAAT,EAAYsK,GAAG,GAAG,EAAlB,EAAsBzR,QAAQ,GAAG,KAAjC,EAAwC;AACjD,QAAG,6CAAK,CAACsG,UAAN,CAAiBmL,GAAjB,CAAH,EAA0B;AACtBzR,cAAQ,GAAGyR,GAAX;AACAA,SAAG,GAAG,EAAN;AACH;;AAED,QAAG,6CAAK,CAACnL,UAAN,CAAiBa,KAAjB,CAAH,EAA4B;AACxBnH,cAAQ,GAAGmH,KAAX;AACAA,WAAK,GAAG,CAAR;AACH;;AAED,QAAG,CAACnH,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwT,aAAxB,EAAuCrK,KAAvC,EAA8CsK,GAA9C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACrT,SAAN,CAAgB+I,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAtC,EACI,OAAOnH,QAAQ,CAAC,iCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBqT,GAAhB,CAAD,IAAyBA,GAAG,IAAItK,KAAnC,EACI,OAAOnH,QAAQ,CAAC,+BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,4BAA9B,EAA4D;AACxDiH,cAAQ,EAAExG,QAAQ,CAAC/D,KAAD,CADsC;AAExDwK,YAAM,EAAEzG,QAAQ,CAACuG,GAAD,CAAR,GAAgB;AAFgC,KAA5D,EAGG,MAHH,EAGWrS,IAHX,CAGgB,CAAC;AAAE2F,WAAK,GAAG;AAAV,KAAD,KAAoB;AAChC/E,cAAQ,CAAC,IAAD,EAAO+E,KAAP,CAAR;AACH,KALD,EAKGxF,KALH,CAKSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CALxB;AAMH;;AAEDoR,0BAAwB,CAAC5R,QAAQ,GAAG,KAAZ,EAAmB;AACvC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4T,wBAAxB,CAAP;AAEJ,SAAK1N,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,sBAA9B,EAAsDrL,IAAtD,CAA2D,CAAC;AAAEyS,eAAS,GAAG;AAAd,KAAD,KAAwB;AAC/E7R,cAAQ,CAAC,IAAD,EAAO6R,SAAP,CAAR;AACH,KAFD,EAEGtS,KAFH,CAESiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFxB;AAGH;;AAEDsR,YAAU,CAAC9B,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,EAAwBjQ,QAAQ,GAAG,KAAnC,EAA0C;AAChD,QAAG,6CAAK,CAACsG,UAAN,CAAiB2J,MAAjB,CAAH,EAA6B;AACzBjQ,cAAQ,GAAGiQ,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC3J,UAAN,CAAiB0J,KAAjB,CAAH,EAA4B;AACxBhQ,cAAQ,GAAGgQ,KAAX;AACAA,WAAK,GAAG,CAAR;AACH;;AAED,QAAG,CAAChQ,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK8T,UAAxB,EAAoC9B,KAApC,EAA2CC,MAA3C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAAC7R,SAAN,CAAgB4R,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,CAA9D,EACI,OAAOhQ,QAAQ,CAAC,wBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6R,MAAhB,CAAD,IAA4BA,MAAM,GAAG,CAAxC,EACI,OAAOjQ,QAAQ,CAAC,yBAAD,CAAf;;AAEJ,QAAG,CAACgQ,KAAJ,EAAW;AACP,aAAO,KAAK9L,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,0BAA9B,EAA0DrL,IAA1D,CAA+D,CAAC;AAAE6R,kBAAU,GAAG;AAAf,OAAD,KAAyB;AAC3FjR,gBAAQ,CAAC,IAAD,EAAOiR,UAAU,CAAC5Q,GAAX,CAAeiP,KAAK,IAAI,KAAKD,UAAL,CAAgBC,KAAhB,CAAxB,CAAP,CAAR;AACH,OAFM,EAEJ/P,KAFI,CAEEiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFjB,CAAP;AAGH;;AAED,SAAK0D,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,mCAA9B,EAAmE;AAC/DwF,YAAM,EAAE/E,QAAQ,CAAC+E,MAAD,CAD+C;AAE/DD,WAAK,EAAE9E,QAAQ,CAAC8E,KAAD;AAFgD,KAAnE,EAGG,MAHH,EAGW5Q,IAHX,CAGgB,CAAC;AAAE6R,gBAAU,GAAG;AAAf,KAAD,KAAyB;AACrCjR,cAAQ,CAAC,IAAD,EAAOiR,UAAU,CAAC5Q,GAAX,CAAeiP,KAAK,IAAI,KAAKD,UAAL,CAAgBC,KAAhB,CAAxB,CAAP,CAAR;AACH,KALD,EAKG/P,KALH,CAKSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CALxB;AAMH;;AAEDuR,wBAAsB,CAAC/R,QAAQ,GAAG,KAAZ,EAAmB;AACrC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+T,sBAAxB,CAAP;AAEJ,SAAK7N,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,+BAA9B,EAA+DrL,IAA/D,CAAoE,CAAC;AAAEiP,SAAG,GAAG,CAAC;AAAT,KAAD,KAAkB;AAClF,UAAGA,GAAG,IAAI,CAAC,CAAX,EACI,OAAOrO,QAAQ,CAAC,0CAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAOgS,IAAI,CAACC,KAAL,CAAW5D,GAAG,GAAG,IAAjB,CAAP,CAAR;AACH,KALD,EAKG9O,KALH,CAKSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CALxB;AAMH;;AAEDuG,aAAW,CAAClH,eAAD,EAAkBG,QAAQ,GAAG,KAA7B,EAAoC;AAC3C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+I,WAAxB,EAAqClH,eAArC,CAAP;AAEJ,QAAG,CAAC,KAAKqE,OAAL,CAAazF,SAAb,CAAuBoB,eAAvB,CAAJ,EACI,OAAOG,QAAQ,CAAC,mCAAD,CAAf;AAEJH,mBAAe,GAAG,KAAKqE,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CAA2BmB,eAA3B,CAAlB;AAEA,SAAKqE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CAA8B,oBAA9B,EAAoD;AAChD/H,WAAK,EAAE7C;AADyC,KAApD,EAEGT,IAFH,CAEQwB,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACvC,KAAZ,EACI,OAAO2B,QAAQ,CAAC,yBAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAOY,QAAP,CAAR;AACH,KAPD,EAOGrB,KAPH,CAOSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAPxB;AAQH;;AAEDkG,MAAI,CAACH,WAAW,GAAG,KAAf,EAAsB1J,UAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAAhD,EAAmE0C,QAAQ,GAAG,KAA9E,EAAqF;AACrF,QAAG,6CAAK,CAACsG,UAAN,CAAiBzJ,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0I,IAAxB,EAA8BH,WAA9B,EAA2C1J,UAA3C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACsN,QAAN,CAAe5D,WAAf,CAAJ,EACI,OAAOvG,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAGuG,WAAW,CAACJ,SAAf,EACI,OAAOnG,QAAQ,CAAC,+BAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBG,KAArB,CACZ,KAAKwF,OAAL,CAAa3F,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CADY,EAEdkM,WAFc,EAAhB;AAIA,UAAGxK,OAAO,KAAKgI,WAAW,CAAC+J,QAAZ,CAAqB1P,QAArB,CAA8B,CAA9B,EAAiCqM,SAAjC,CAA2CvK,KAA3C,CAAiDuI,aAAjD,CAA+DlC,WAA/D,EAAf,EACI,OAAO/I,QAAQ,CAAC,mDAAD,CAAf;AAEJ,aAAOA,QAAQ,CAAC,IAAD,EACX,6CAAK,CAACe,MAAN,CAAamR,eAAb,CAA6BrV,UAA7B,EAAyC0J,WAAzC,CADW,CAAf;AAGH,KAXD,CAWE,OAAMO,EAAN,EAAU;AACR9G,cAAQ,CAAC8G,EAAD,CAAR;AACH;AACJ;;AAEDH,oBAAkB,CAACF,iBAAiB,GAAG,KAArB,EAA4BzG,QAAQ,GAAG,KAAvC,EAA8C;AAC5D,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK2I,kBAAxB,EAA4CF,iBAA5C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAAC0D,QAAN,CAAe1D,iBAAf,CAAJ,EACI,OAAOzG,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAG,CAACyG,iBAAiB,CAACN,SAAnB,IAAgC,CAAC,6CAAK,CAAC/F,OAAN,CAAcqG,iBAAiB,CAACN,SAAhC,CAApC,EACI,OAAOnG,QAAQ,CAAC,2BAAD,CAAf;AAEJ,SAAKkE,OAAL,CAAaxH,QAAb,CAAsB+N,OAAtB,CACI,6BADJ,EAEIhE,iBAFJ,EAGI,MAHJ,EAIErH,IAJF,CAIO0D,MAAM,IAAI;AACb9C,cAAQ,CAAC,IAAD,EAAO8C,MAAP,CAAR;AACH,KAND,EAMGvD,KANH,CAMSiB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CANxB;AAOH;;AAED,QAAM2R,eAAN,CAAsBpH,EAAE,GAAG,KAA3B,EAAkCzH,MAAM,GAAG,KAA3C,EAAkDzG,UAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA5E,EAA+F0C,QAAQ,GAAG,KAA1G,EAAiH;AAC7G,QAAG,6CAAK,CAACsG,UAAN,CAAiBzJ,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKmU,eAAxB,EAAyCpH,EAAzC,EAA6CzH,MAA7C,EAAqDzG,UAArD,CAAP;AAEJ,QAAG,CAAC,KAAKqH,OAAL,CAAazF,SAAb,CAAuBsM,EAAvB,CAAJ,EACI,OAAO/K,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,YAAM0J,WAAW,GAAG,MAAM,KAAKrC,OAAL,CAAarG,kBAAb,CAAgCiN,OAAhC,CAAwCC,EAAxC,EAA4CzH,MAA5C,EAAoD/E,OAApD,CAA1B;AACA,YAAMkI,iBAAiB,GAAG,MAAM,KAAKC,IAAL,CAAUH,WAAV,EAAuB1J,UAAvB,CAAhC;AACA,YAAMiG,MAAM,GAAG,MAAM,KAAK6D,kBAAL,CAAwBF,iBAAxB,CAArB;AAEA,aAAOzG,QAAQ,CAAC,IAAD,EAAO8C,MAAP,CAAf;AACH,KAPD,CAOE,OAAMgE,EAAN,EAAU;AACR,aAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AAED,QAAMqE,SAAN,CAAgBJ,EAAE,GAAG,KAArB,EAA4BzH,MAAM,GAAG,KAArC,EAA4C8H,OAAO,GAAG,KAAtD,EAA6DvO,UAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAAvF,EAA0G0C,QAAQ,GAAG,KAArH,EAA4H;AACxH,QAAG,6CAAK,CAACsG,UAAN,CAAiBzJ,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAKqH,OAAL,CAAa5G,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKmN,SAAxB,EAAmCJ,EAAnC,EAAuCzH,MAAvC,EAA+C8H,OAA/C,EAAwDvO,UAAxD,CAAP;AAEJ,QAAG,CAAC,KAAKqH,OAAL,CAAazF,SAAb,CAAuBsM,EAAvB,CAAJ,EACI,OAAO/K,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOtD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAesO,OAAf,CAAJ,EACI,OAAOpL,QAAQ,CAAC,2BAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAK2F,OAAL,CAAa3F,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,YAAM0J,WAAW,GAAG,MAAM,KAAKrC,OAAL,CAAarG,kBAAb,CAAgCsN,SAAhC,CAA0CJ,EAA1C,EAA8CzH,MAA9C,EAAsD8H,OAAtD,EAA+D7M,OAA/D,CAA1B;AACA,YAAMkI,iBAAiB,GAAG,MAAM,KAAKC,IAAL,CAAUH,WAAV,EAAuB1J,UAAvB,CAAhC;AACA,YAAMiG,MAAM,GAAG,MAAM,KAAK6D,kBAAL,CAAwBF,iBAAxB,CAArB;AAEA,aAAOzG,QAAQ,CAAC,IAAD,EAAO8C,MAAP,CAAf;AACH,KAPD,CAOE,OAAMgE,EAAN,EAAU;AACR,aAAO9G,QAAQ,CAAC8G,EAAD,CAAf;AACH;AACJ;;AAEDkI,WAAS,CAAC,GAAG1G,IAAJ,EAAU;AACf,WAAO,KAAK6C,SAAL,CAAe,GAAG7C,IAAlB,CAAP;AACH;;AAEDa,MAAI,CAAC,GAAGb,IAAJ,EAAU;AACV,WAAO,KAAK6J,eAAL,CAAqB,GAAG7J,IAAxB,CAAP;AACH;;AAEDwC,SAAO,CAAC,GAAGxC,IAAJ,EAAU;AACb,WAAO,KAAK6J,eAAL,CAAqB,GAAG7J,IAAxB,CAAP;AACH;;AAEDc,WAAS,CAAC,GAAGd,IAAJ,EAAU;AACf,WAAO,KAAK3B,kBAAL,CAAwB,GAAG2B,IAA3B,CAAP;AACH;;AAED4J,iBAAe,CAAC,GAAG5J,IAAJ,EAAU;AACrB,WAAO,KAAK5B,IAAL,CAAU,GAAG4B,IAAb,CAAP;AACH;;AAviBoB;AAwiBxB,C;;;;;;;;;;;;;;;;;AC3iBc,MAAM8J,OAAN,CAAc,E;;;;;;;;;;;;;;;;;;;ACA7B;AACA;AAOO,SAASrO,eAAT,GAA2B;AAC9B,QAAMsO,WAAW,GAAG,yDAAS,EAA7B;AACA,QAAMC,WAAW,GAAG,mEAAmB,CAACD,WAAD,CAAvC;AACA,QAAME,YAAY,GAAG,oEAAoB,CAACF,WAAD,CAAzC;AAEA,QAAMxV,UAAU,GAAG,+DAAgB,CAACwV,WAAD,CAAnC;AACA,QAAMG,SAAS,GAAG,+DAAgB,CAACF,WAAD,CAAlC;AAEA,SAAO;AACHzV,cADG;AAEH2V,aAFG;AAGHjU,WAAO,EAAE;AACLd,YAAM,EAAE,qEAAqB,CAAC8U,YAAD,CADxB;AAEL/U,SAAG,EAAE,+DAAgB,CAAC+U,YAAD;AAFhB;AAHN,GAAP;AAQH,C;;;;;;;;;;;;;;;;;;;ACxBD,MAAME,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,SAAtC;AAEO,MAAMC,YAAY,GAAGJ,SAAS,GAAG,EAAH,GAAQ,EAAtC;AACA,MAAMK,cAAc,GAAGL,SAAS,GAAG,IAAH,GAAU,IAA1C;AACA,MAAMM,mBAAmB,GAAGN,SAAS,GAAG,IAAH,GAAU,IAA/C,C;;;;;;;;;;;;;;;;;;ACJP,MAAMO,QAAQ,GAAG,4DAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,KAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoG,QAAQ,CAACxP,MAA7B,EAAqCoJ,CAAC,EAAtC,EACIqG,YAAY,CAACD,QAAQ,CAAC5I,MAAT,CAAgBwC,CAAhB,CAAD,CAAZ,GAAmCA,CAAnC;;AAEJ,MAAMsG,IAAI,GAAG,EAAb;AAEO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAAC5P,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIoJ,CAAJ;AACA,MAAIyG,CAAJ;AAEA,QAAMC,MAAM,GAAG,CAAC,CAAD,CAAf;;AAEA,OAAK1G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwG,MAAM,CAAC5P,MAAvB,EAA+BoJ,CAAC,EAAhC,EAAoC;AAChC,SAAKyG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC9P,MAAvB,EAA+B6P,CAAC,EAAhC,EACIC,MAAM,CAACD,CAAD,CAAN,KAAc,CAAd;;AAEJC,UAAM,CAAC,CAAD,CAAN,IAAaF,MAAM,CAACxG,CAAD,CAAnB;AACA,QAAI2G,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC9P,MAAvB,EAA+B,EAAE6P,CAAjC,EAAoC;AAChCC,YAAM,CAACD,CAAD,CAAN,IAAaE,KAAb;AACAA,WAAK,GAAID,MAAM,CAACD,CAAD,CAAN,GAAYH,IAAb,GAAqB,CAA7B;AACAI,YAAM,CAACD,CAAD,CAAN,IAAaH,IAAb;AACH;;AAED,WAAOK,KAAP,EAAc;AACVD,YAAM,CAACpT,IAAP,CAAYqT,KAAK,GAAGL,IAApB;AACAK,WAAK,GAAIA,KAAK,GAAGL,IAAT,GAAiB,CAAzB;AACH;AACJ;;AAED,OAAKtG,CAAC,GAAG,CAAT,EAAYwG,MAAM,CAACxG,CAAD,CAAN,KAAc,CAAd,IAAmBA,CAAC,GAAGwG,MAAM,CAAC5P,MAAP,GAAgB,CAAnD,EAAsDoJ,CAAC,EAAvD,EACI0G,MAAM,CAACpT,IAAP,CAAY,CAAZ;;AAEJ,SAAOoT,MAAM,CAACE,OAAP,GAAiBnT,GAAjB,CAAqBoT,KAAK,IAAIT,QAAQ,CAACS,KAAD,CAAtC,EAA+CtT,IAA/C,CAAoD,EAApD,CAAP;AACH;AAEM,SAASuT,QAAT,CAAkBnS,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAACiC,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIoJ,CAAJ;AACA,MAAIyG,CAAJ;AAEA,QAAMM,KAAK,GAAG,CAAC,CAAD,CAAd;;AAEA,OAAK/G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrL,MAAM,CAACiC,MAAvB,EAA+BoJ,CAAC,EAAhC,EAAoC;AAChC,UAAMgH,CAAC,GAAGrS,MAAM,CAACqL,CAAD,CAAhB;AAEA,QAAI,EAAEgH,CAAC,IAAIX,YAAP,CAAJ,EACI,MAAM,IAAI5U,KAAJ,CAAU,sBAAV,CAAN;;AAEJ,SAAKgV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,KAAK,CAACnQ,MAAtB,EAA8B6P,CAAC,EAA/B,EACIM,KAAK,CAACN,CAAD,CAAL,IAAYH,IAAZ;;AAEJS,SAAK,CAAC,CAAD,CAAL,IAAYV,YAAY,CAACW,CAAD,CAAxB;AACA,QAAIL,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,KAAK,CAACnQ,MAAtB,EAA8B,EAAE6P,CAAhC,EAAmC;AAC/BM,WAAK,CAACN,CAAD,CAAL,IAAYE,KAAZ;AACAA,WAAK,GAAGI,KAAK,CAACN,CAAD,CAAL,IAAY,CAApB;AACAM,WAAK,CAACN,CAAD,CAAL,IAAY,IAAZ;AACH;;AAED,WAAOE,KAAP,EAAc;AACVI,WAAK,CAACzT,IAAN,CAAWqT,KAAK,GAAG,IAAnB;AACAA,WAAK,KAAK,CAAV;AACH;AACJ;;AAED,OAAK3G,CAAC,GAAG,CAAT,EAAYrL,MAAM,CAACqL,CAAD,CAAN,KAAc,GAAd,IAAqBA,CAAC,GAAGrL,MAAM,CAACiC,MAAP,GAAgB,CAArD,EAAwDoJ,CAAC,EAAzD,EACI+G,KAAK,CAACzT,IAAN,CAAW,CAAX;;AAEJ,SAAOyT,KAAK,CAACH,OAAN,EAAP;AACH,C;;;;;;;;;;;;;;;;;AC/EM,SAASK,MAAT,GAAkB;AACrB,OAAKC,OAAL,GAAe,mEAAf;;AAEA,OAAKjH,MAAL,GAAckH,KAAK,IAAI;AACnB,QAAIhM,MAAM,GAAG,EAAb;AACA,QAAIiM,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI1H,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGmH,KAAK,CAACvQ,MAAjB,EAAyB;AACrBwQ,UAAI,GAAGD,KAAK,CAACQ,UAAN,CAAiB3H,CAAC,EAAlB,CAAP;AACAqH,UAAI,GAAGF,KAAK,CAACQ,UAAN,CAAiB3H,CAAC,EAAlB,CAAP;AACAsH,UAAI,GAAGH,KAAK,CAACQ,UAAN,CAAiB3H,CAAC,EAAlB,CAAP;AAEAuH,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAIhK,KAAK,CAAC+J,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIpK,KAAK,CAACgK,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJvM,YAAM,GAAGA,MAAM,GACX,KAAK+L,OAAL,CAAa1J,MAAb,CAAoB+J,IAApB,CADK,GACuB,KAAKL,OAAL,CAAa1J,MAAb,CAAoBgK,IAApB,CADvB,GAEL,KAAKN,OAAL,CAAa1J,MAAb,CAAoBiK,IAApB,CAFK,GAEuB,KAAKP,OAAL,CAAa1J,MAAb,CAAoBkK,IAApB,CAFhC;AAGH;;AAED,WAAOvM,MAAP;AACH,GAhCD;;AAkCA,OAAKyM,gBAAL,GAAwBC,UAAU,IAAI;AAClC,QAAI1M,MAAM,GAAG,EAAb;AACA,QAAIiM,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI1H,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAG6H,UAAU,CAACjR,MAAtB,EAA8B;AAC1BwQ,UAAI,GAAGS,UAAU,CAAC7H,CAAC,EAAF,CAAjB;AACAqH,UAAI,GAAGQ,UAAU,CAAC7H,CAAC,EAAF,CAAjB;AACAsH,UAAI,GAAGO,UAAU,CAAC7H,CAAC,EAAF,CAAjB;AAEAuH,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAIhK,KAAK,CAAC+J,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIpK,KAAK,CAACgK,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJvM,YAAM,GAAGA,MAAM,GACX,KAAK+L,OAAL,CAAa1J,MAAb,CAAoB+J,IAApB,CADK,GACuB,KAAKL,OAAL,CAAa1J,MAAb,CAAoBgK,IAApB,CADvB,GAEL,KAAKN,OAAL,CAAa1J,MAAb,CAAoBiK,IAApB,CAFK,GAEuB,KAAKP,OAAL,CAAa1J,MAAb,CAAoBkK,IAApB,CAFhC;AAGH;;AAED,WAAOvM,MAAP;AACH,GAhCD;;AAkCA,OAAKC,MAAL,GAAc+L,KAAK,IAAI;AACnB,QAAIhM,MAAM,GAAG,EAAb;AACA,QAAIiM,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI1H,CAAC,GAAG,CAAR;AAEAmH,SAAK,GAAGA,KAAK,CAACxQ,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOqJ,CAAC,GAAGmH,KAAK,CAACvQ,MAAjB,EAAyB;AACrB2Q,UAAI,GAAGL,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACAwH,UAAI,GAAGN,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACAyH,UAAI,GAAGP,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACA0H,UAAI,GAAGR,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AAEAoH,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEAvM,YAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBX,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACItM,MAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBV,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACIvM,MAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBT,IAApB,CAAlB;AACP;;AAED,WAAO,KAAKU,YAAL,CAAkB7M,MAAlB,CAAP;AACH,GAjCD;;AAmCA,OAAK8M,iBAAL,GAAyBd,KAAK,IAAI;AAC9B,QAAIhM,MAAM,GAAG,EAAb;AACA,QAAIiM,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI1H,CAAC,GAAG,CAAR;AAEAmH,SAAK,GAAGA,KAAK,CAACxQ,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOqJ,CAAC,GAAGmH,KAAK,CAACvQ,MAAjB,EAAyB;AACrB2Q,UAAI,GAAGL,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACAwH,UAAI,GAAGN,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACAyH,UAAI,GAAGP,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AACA0H,UAAI,GAAGR,OAAO,CAAC/R,OAAR,CAAgBgS,KAAK,CAAC3J,MAAN,CAAawC,CAAC,EAAd,CAAhB,CAAP;AAEAoH,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEAvM,YAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBX,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACItM,MAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBV,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACIvM,MAAM,GAAGA,MAAM,GAAG2M,MAAM,CAACC,YAAP,CAAoBT,IAApB,CAAlB;AACP;;AAED,WAAO,KAAKY,cAAL,CAAoB/M,MAApB,CAAP;AACH,GAjCD;;AAmCA,OAAK+M,cAAL,GAAsBC,OAAO,IAAI;AAC7B,UAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUF,OAAO,CAACvR,MAAlB,CAAlB;AAEA,QAAIoJ,CAAC,GAAG,CAAR;AACA,QAAIgH,CAAC,GAAGsB,EAAE,GAAGC,EAAE,GAAG,CAAlB;;AAEA,WAAOvI,CAAC,GAAGmI,OAAO,CAACvR,MAAnB,EAA2B;AACvBoQ,OAAC,GAAGmB,OAAO,CAACR,UAAR,CAAmB3H,CAAnB,CAAJ;AACAoI,eAAS,CAACpI,CAAD,CAAT,GAAegH,CAAf;AACAhH,OAAC;AACJ;;AAED,WAAOoI,SAAP;AACH,GAbD;;AAeA,OAAKI,YAAL,GAAoB7T,MAAM,IAAI;AAC1BA,UAAM,GAAGA,MAAM,CAACgC,OAAP,CAAe,OAAf,EAAwB,IAAxB,CAAT;AACA,QAAIwR,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9T,MAAM,CAACiC,MAA3B,EAAmC6R,CAAC,EAApC,EAAwC;AACpC,YAAMzB,CAAC,GAAGrS,MAAM,CAACgT,UAAP,CAAkBc,CAAlB,CAAV;;AAEA,UAAIzB,CAAC,GAAG,GAAR,EAAa;AACTmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAoBf,CAApB,CAAX;AACH,OAFD,MAEO,IAAKA,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,IAAtB,EAA6B;AAChCmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBf,CAAC,IAAI,CAAN,GAAW,GAA/B,CAAX;AACAmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBf,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH,OAHM,MAGA;AACHmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBf,CAAC,IAAI,EAAN,GAAY,GAAhC,CAAX;AACAmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAsBf,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAAtC,CAAX;AACAmB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBf,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH;AACJ;;AAED,WAAOmB,OAAP;AACH,GApBD;;AAsBA,OAAKH,YAAL,GAAoBG,OAAO,IAAI;AAC3B,QAAIxT,MAAM,GAAG,EAAb;AACA,QAAIqL,CAAC,GAAG,CAAR;AACA,QAAIgH,CAAC,GAAGsB,EAAE,GAAGC,EAAE,GAAG,CAAlB;;AAEA,WAAOvI,CAAC,GAAGmI,OAAO,CAACvR,MAAnB,EAA2B;AACvBoQ,OAAC,GAAGmB,OAAO,CAACR,UAAR,CAAmB3H,CAAnB,CAAJ;;AAEA,UAAIgH,CAAC,GAAG,GAAR,EAAa;AACTrS,cAAM,IAAImT,MAAM,CAACC,YAAP,CAAoBf,CAApB,CAAV;AACAhH,SAAC;AACJ,OAHD,MAGO,IAAKgH,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,GAAtB,EAA4B;AAC/BuB,UAAE,GAAGJ,OAAO,CAACR,UAAR,CAAmB3H,CAAC,GAAG,CAAvB,CAAL;AACArL,cAAM,IAAImT,MAAM,CAACC,YAAP,CAAqB,CAACf,CAAC,GAAG,EAAL,KAAY,CAAb,GAAmBuB,EAAE,GAAG,EAA5C,CAAV;AACAvI,SAAC,IAAI,CAAL;AACH,OAJM,MAIA;AACHuI,UAAE,GAAGJ,OAAO,CAACR,UAAR,CAAmB3H,CAAC,GAAG,CAAvB,CAAL;AACA0I,UAAE,GAAGP,OAAO,CAACR,UAAR,CAAmB3H,CAAC,GAAG,CAAvB,CAAL;AAEArL,cAAM,IAAImT,MAAM,CAACC,YAAP,CAAqB,CAACf,CAAC,GAAG,EAAL,KAAY,EAAb,GAAoB,CAACuB,EAAE,GAAG,EAAN,KAAa,CAAjC,GAAuCG,EAAE,GAAG,EAAhE,CAAV;AAEA1I,SAAC,IAAI,CAAL;AACH;AACJ;;AAED,WAAOrL,MAAP;AACH,GA1BD;AA2BH,C;;;;;;;;;;;;;;;;;;;;;;AC7MD;AAEO,SAASgU,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,QAAMC,UAAU,GAAG,kBAAnB;AAEA,MAAIC,GAAG,GAAG,EAAV;AACAA,KAAG,IAAID,UAAU,CAACrL,MAAX,CAAkBoL,IAAI,IAAI,CAA1B,CAAP;AACAE,KAAG,IAAID,UAAU,CAACrL,MAAX,CAAkBoL,IAAI,GAAG,IAAzB,CAAP;AAEA,SAAOE,GAAP;AACH;AAEM,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAOA,GAAP;AAEJ,MAAIF,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,GAAG,CAACpS,MAAxB,EAAgCoJ,CAAC,EAAjC,EAAqC;AACjC,UAAMiJ,GAAG,GAAGD,GAAG,CAAChJ,CAAD,CAAH,CAAOxK,QAAP,CAAgB,CAAhB,CAAZ;AACA,UAAM0T,CAAC,GAAGD,GAAG,CAACE,KAAJ,CAAU,WAAV,CAAV;;AAEA,QAAID,CAAC,IAAID,GAAG,CAACrS,MAAJ,KAAe,CAAxB,EAA2B;AACvB,YAAMwS,WAAW,GAAGF,CAAC,CAAC,CAAD,CAAD,CAAKtS,MAAzB;AACA,UAAIyS,KAAK,GAAGL,GAAG,CAAChJ,CAAD,CAAH,CAAOxK,QAAP,CAAgB,CAAhB,EAAmB+C,KAAnB,CAAyB,IAAI6Q,WAA7B,CAAZ;;AAEA,WAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,WAAtB,EAAmCE,EAAE,EAArC,EACID,KAAK,IAAIL,GAAG,CAACM,EAAE,GAAGtJ,CAAN,CAAH,CAAYxK,QAAZ,CAAqB,CAArB,EAAwB+C,KAAxB,CAA8B,CAA9B,CAAT;;AAEJuQ,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBzJ,QAAQ,CAAC+K,KAAD,EAAQ,CAAR,CAA5B,CAAP;AACArJ,OAAC,IAAIoJ,WAAW,GAAG,CAAnB;AACH,KATD,MASO;AACHN,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBiB,GAAG,CAAChJ,CAAD,CAAvB,CAAP;AACH;AACJ;;AAED,SAAO8I,GAAP;AACH;AAEM,SAASS,WAAT,CAAqB3Y,GAArB,EAA0B;AAC7B,QAAMoY,GAAG,GAAGpY,GAAG,CAAC4Y,KAAJ,CAAU,EAAV,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIzJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,GAAG,CAACpS,MAAJ,GAAa,CAAjC,EAAoCoJ,CAAC,EAArC,EAAyC;AACrC,QAAI0J,GAAG,GAAI,KAAKV,GAAG,CAAChJ,CAAC,GAAG,CAAL,CAAS,GAAGgJ,GAAG,CAAChJ,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAa,EAA/C;AACAyJ,OAAG,IAAI3B,MAAM,CAACC,YAAP,CAAoB2B,GAApB,CAAP;AACH;;AAED,SAAOD,GAAP;AACH;AAEM,SAASE,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,SAAO,IAAI,8CAAJ,GAAa3B,iBAAb,CAA+B2B,QAA/B,CAAP;AACH;AAEM,SAASrV,gBAAT,CAA0B6T,SAA1B,EAAqC;AACxC,MAAIU,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIoI,SAAS,CAACxR,MAA/B,EAAwCoJ,CAAC,EAAzC,EACI8I,GAAG,IAAIH,WAAW,CAACP,SAAS,CAACpI,CAAD,CAAV,CAAlB;;AAEJ,SAAO8I,GAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DD;AAEO,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AAC9B,SAAOhC,MAAM,CAACC,YAAP,CAAoB,GAAG+B,KAAvB,CAAP;AACH;AAEM,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACxC,MAAID,MAAM,CAACpT,MAAP,IAAiBqT,MAAM,CAACrT,MAA5B,EACI,OAAO,KAAP;AAEJ,MAAIoJ,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgK,MAAM,CAACpT,MAAvB,EAA+BoJ,CAAC,EAAhC,EAAoC;AAChC,QAAIgK,MAAM,CAAChK,CAAD,CAAN,IAAaiK,MAAM,CAACjK,CAAD,CAAvB,EACI,OAAO,KAAP;AACP;;AAED,SAAO,IAAP;AACH;AAEM,SAASkK,aAAT,CAAuBpB,GAAvB,EAA4B;AAC/B,QAAM/B,KAAK,GAAG,IAAIsB,KAAJ,EAAd;AACA,MAAI8B,GAAJ;AACA,MAAInD,CAAJ;AAEAmD,KAAG,GAAGrB,GAAG,CAAClS,MAAV;;AAEA,OAAK,IAAIoJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAApB,EAAyBnK,CAAC,EAA1B,EAA8B;AAC1BgH,KAAC,GAAG8B,GAAG,CAACnB,UAAJ,CAAe3H,CAAf,CAAJ;;AAEA,QAAIgH,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AAChCD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAACzT,IAAN,CAAY0T,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KALD,MAKO,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAACzT,IAAN,CAAY0T,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAJM,MAIA,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAACzT,IAAN,CAAa0T,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAACzT,IAAN,CAAY0T,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAHM,MAGAD,KAAK,CAACzT,IAAN,CAAW0T,CAAC,GAAG,IAAf;AACV;;AAED,SAAOD,KAAP;AACH;AAEM,SAASgC,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAOA,GAAP;AAEJ,MAAIF,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,GAAG,CAACpS,MAAxB,EAAgCoJ,CAAC,EAAjC,EAAqC;AACjC,UAAMiJ,GAAG,GAAGD,GAAG,CAAChJ,CAAD,CAAH,CAAOxK,QAAP,CAAgB,CAAhB,CAAZ;AACA,UAAM0T,CAAC,GAAGD,GAAG,CAACE,KAAJ,CAAU,WAAV,CAAV;;AAEA,QAAID,CAAC,IAAID,GAAG,CAACrS,MAAJ,IAAc,CAAvB,EAA0B;AACtB,YAAMwS,WAAW,GAAGF,CAAC,CAAC,CAAD,CAAD,CAAKtS,MAAzB;AACA,UAAIyS,KAAK,GAAGL,GAAG,CAAChJ,CAAD,CAAH,CAAOxK,QAAP,CAAgB,CAAhB,EAAmB+C,KAAnB,CAAyB,IAAI6Q,WAA7B,CAAZ;;AAEA,WAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,WAAtB,EAAmCE,EAAE,EAArC,EACID,KAAK,IAAIL,GAAG,CAACM,EAAE,GAAGtJ,CAAN,CAAH,CAAYxK,QAAZ,CAAqB,CAArB,EAAwB+C,KAAxB,CAA8B,CAA9B,CAAT;;AAEJuQ,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBzJ,QAAQ,CAAC+K,KAAD,EAAQ,CAAR,CAA5B,CAAP;AACArJ,OAAC,IAAIoJ,WAAW,GAAG,CAAnB;AACH,KATD,MASON,GAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBiB,GAAG,CAAChJ,CAAD,CAAvB,CAAP;AACV;;AAED,SAAO8I,GAAP;AACH;AAEM,SAASS,WAAT,CAAqB3Y,GAArB,EAA0B;AAC7B,QAAMoY,GAAG,GAAGpY,GAAG,CAAC4Y,KAAJ,CAAU,EAAV,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIzJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgJ,GAAG,CAACpS,MAAJ,GAAa,CAAjC,EAAoCoJ,CAAC,EAArC,EAAyC;AACrC,UAAM0J,GAAG,GAAI,KAAIV,GAAG,CAAChJ,CAAC,GAAG,CAAL,CAAQ,GAAEgJ,GAAG,CAAChJ,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAY,EAA7C;AACA,UAAMoK,SAAS,GAAGtC,MAAM,CAACC,YAAP,CAAoB2B,GAApB,CAAlB;AAEAD,OAAG,IAAIW,SAAP;AACH;;AAED,SAAOX,GAAP;AACH;AAEM,SAASY,YAAT,CAAsBrD,CAAtB,EAAyB;AAC5B,MAAIsD,CAAC,GAAG,CAAR;AAEA,MAAItD,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACIsD,CAAC,GAAGtD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADJ,KAEK,IAAIX,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDsD,CAAC,GAAGtD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADC,KAEA,IAAIX,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDsD,CAAC,GAAGtD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAtB;AAEJ,SAAO2C,CAAP;AACH;AAEM,SAASC,SAAT,CAAmBvD,CAAnB,EAAsB;AACzB,MAAKA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAlB,IACCA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GADlB,IAECA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAFtB,EAE4B;AACxB,WAAO,CAAP;AACH;;AAED,SAAO,CAAP;AACH;AAEM,SAAS1S,gBAAT,CAA0BwU,GAA1B,EAA+B;AAClC,QAAMV,SAAS,GAAGC,KAAK,EAAvB;AACA,MAAIiC,CAAC,GAAG,CAAR;AACA,MAAI7D,CAAC,GAAG,CAAR;AACA,MAAI+D,CAAC,GAAG,CAAR;;AAEA,OAAK,IAAIxK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8I,GAAG,CAAClS,MAAxB,EAAgCoJ,CAAC,EAAjC,EAAqC;AACjC,UAAMgH,CAAC,GAAG8B,GAAG,CAACtL,MAAJ,CAAWwC,CAAX,CAAV;;AAEA,QAAIuK,SAAS,CAACvD,CAAD,CAAb,EAAkB;AACdsD,OAAC,KAAK,CAAN;AACAA,OAAC,IAAID,YAAY,CAACrD,CAAD,CAAjB;AACAP,OAAC;;AAED,UAAI,MAAOA,CAAC,GAAG,CAAf,EAAmB;AACf2B,iBAAS,CAACoC,CAAC,EAAF,CAAT,GAAiBF,CAAjB;AACAA,SAAC,GAAG,CAAJ;AACH;AACJ;AACJ;;AAED,SAAOlC,SAAP;AACH;AAEM,SAASO,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,QAAMC,UAAU,GAAG,kBAAnB;AACA,MAAIC,GAAG,GAAG,EAAV;AAEAA,KAAG,IAAID,UAAU,CAACrL,MAAX,CAAkBoL,IAAI,IAAI,CAA1B,CAAP;AACAE,KAAG,IAAID,UAAU,CAACrL,MAAX,CAAkBoL,IAAI,GAAG,IAAzB,CAAP;AAEA,SAAOE,GAAP;AACH;AAEM,SAASvU,gBAAT,CAA0B6T,SAA1B,EAAqC;AACxC,SAAOA,SAAS,CAAC7D,MAAV,CAAiB,CAAC5P,MAAD,EAASiU,IAAT,KAAkB;AACtC,WAAOjU,MAAM,GAAGgU,WAAW,CAACC,IAAD,CAA3B;AACH,GAFM,EAEJ,EAFI,CAAP;AAGH;AAEM,SAASe,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,QAAM1R,CAAC,GAAG,IAAI,8CAAJ,EAAV;AACA,QAAMuS,WAAW,GAAGvS,CAAC,CAAC+P,iBAAF,CAAoB2B,QAApB,CAApB;AAEA,SAAOa,WAAP;AACH;AAEM,SAASC,oBAAT,CAA8B3D,KAA9B,EAAqC;AACxC,QAAM7O,CAAC,GAAG,IAAI,8CAAJ,EAAV;AACA,QAAM0R,QAAQ,GAAG1R,CAAC,CAAC0P,gBAAF,CAAmBb,KAAnB,CAAjB;AAEA,SAAO6C,QAAP;AACH,C,CAED;;AACO,SAASe,SAAT,CAAmB7B,GAAnB,EAAwB;AAC3B,QAAM8B,QAAQ,GAAG9B,GAAG,CAACU,KAAJ,CAAU,GAAV,CAAjB;AACA,QAAMqB,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYpB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,QAAMsB,IAAI,GAAGxM,QAAQ,CAACuM,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAArB;AACA,QAAME,KAAK,GAAGzM,QAAQ,CAACuM,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,GAA4B,CAA1C;AACA,QAAMG,GAAG,GAAG1M,QAAQ,CAACuM,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAApB;;AAEA,MAAID,QAAQ,CAAChU,MAAT,GAAkB,CAAtB,EAAyB;AACrB,UAAMqU,QAAQ,GAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYpB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,UAAM0B,IAAI,GAAG5M,QAAQ,CAAC2M,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAArB;AACA,UAAME,MAAM,GAAG7M,QAAQ,CAAC2M,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,GAA4B,CAA3C;AACA,UAAMG,MAAM,GAAG9M,QAAQ,CAAC2M,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAvB;AAEA,WAAO,IAAIlK,IAAJ,CAAS+J,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BE,IAA3B,EAAiCC,MAAjC,EAAyCC,MAAzC,CAAP;AACH;;AAED,SAAO,IAAIrK,IAAJ,CAAS+J,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,CAAP;AACH;AAEM,SAASK,QAAT,CAAkBrE,CAAlB,EAAqB;AACxB,MAAIA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACI,OAAO,CAAP;AAEJ,SAAO,CAAP;AACH,C,CAED;AACA;AACA;AACA;;AACO,SAASsE,aAAT,CAAuBxC,GAAvB,EAA4B;AAC/B,MAAI,QAAQA,GAAZ,EACI,OAAO,CAAC,CAAR;AAEJ,MAAI,OAAQA,GAAR,IAAgB,QAApB,EACI,OAAO,CAAC,CAAR;AAEJ,MAAIA,GAAG,CAAClS,MAAJ,IAAc,CAAd,IAAmBkS,GAAG,IAAI,EAA9B,EACI,OAAO,CAAC,CAAR;AAEJ,MAAI9I,CAAC,GAAG,CAAR;;AAEA,MAAI8I,GAAG,CAAClS,MAAJ,IAAc,EAAlB,EAAsB;AAClB,WAAOoJ,CAAC,GAAG,EAAX,EAAeA,CAAC,EAAhB,EAAoB;AAChB,UAAIgH,CAAC,GAAG8B,GAAG,CAACtL,MAAJ,CAAWwC,CAAX,CAAR;AAEA,UAAI,CAACuK,SAAS,CAACvD,CAAD,CAAd,EACI;AACP;AACJ;;AAED,MAAIhH,CAAC,IAAI,EAAT,EACI,OAAO,CAAP,CAtB2B,CAsBjB;;AAEd,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8I,GAAG,CAAClS,MAApB,EAA4BoJ,CAAC,EAA7B,EAAiC;AAC7B,QAAIgH,CAAC,GAAG8B,GAAG,CAACtL,MAAJ,CAAWwC,CAAX,CAAR;AAEA,QAAI,CAACqL,QAAQ,CAACrE,CAAD,CAAb,EACI;AACP;;AAED,MAAIhH,CAAC,IAAI8I,GAAG,CAAClS,MAAb,EACI,OAAO,CAAP,CAhC2B,CAgCjB;;AAEd,OAAKoJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8I,GAAG,CAAClS,MAApB,EAA4BoJ,CAAC,EAA7B,EAAiC;AAC7B,QAAIgH,CAAC,GAAG8B,GAAG,CAACtL,MAAJ,CAAWwC,CAAX,CAAR;AAEA,QAAIgH,CAAC,GAAG,GAAR,EACI,OAAO,CAAP,CAJyB,CAIf;AACjB;;AAED,SAAO,CAAC,CAAR;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7OD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAAS5S,qBAAT,CAA+BuR,YAA/B,EAA6C;AAChD,QAAM4F,KAAK,GAAGC,MAAM,CAAC7F,YAAD,CAApB;AACA,QAAM8F,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AAEA,MAAIG,QAAQ,GAAGD,KAAK,CAAClT,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAf;AACAmT,UAAQ,GAAG/F,YAAY,CAACgG,MAAb,CAAoBD,QAApB,CAAX;AAEA,SAAO,wDAAQ,CAACA,QAAD,CAAf;AACH;AAEM,SAASlX,mBAAT,CAA6BoX,WAA7B,EAA0C;AAC7C,MAAI,OAAQA,WAAR,IAAwB,QAA5B,EACI,OAAO,KAAP;AAEJ,MAAIA,WAAW,CAAChV,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,MAAIjF,OAAO,GAAG,wDAAQ,CAACia,WAAD,CAAtB;AAEA,MAAIA,WAAW,CAAChV,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,QAAMuT,GAAG,GAAGxY,OAAO,CAACiF,MAApB;AACA,QAAMyM,MAAM,GAAG8G,GAAG,GAAG,CAArB;AACA,QAAMuB,QAAQ,GAAG/Z,OAAO,CAAC4G,KAAR,CAAc8K,MAAd,CAAjB;AAEA1R,SAAO,GAAGA,OAAO,CAAC4G,KAAR,CAAc,CAAd,EAAiB8K,MAAjB,CAAV;AAEA,QAAMkI,KAAK,GAAGC,MAAM,CAAC7Z,OAAD,CAApB;AACA,QAAM8Z,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,QAAMM,SAAS,GAAGJ,KAAK,CAAClT,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAImT,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAOla,OAAP;AACH;;AAED,SAAO,8DAAgB,CAAC,4CAAD,CAAvB;AACH;AAEM,SAAS2T,eAAT,CAAyBG,WAAzB,EAAsC9L,WAAtC,EAAmD;AACtD,MAAI,OAAO8L,WAAP,KAAuB,QAA3B,EACIA,WAAW,GAAG,8DAAgB,CAACA,WAAD,CAA9B;AAEJ,QAAMhJ,IAAI,GAAG9C,WAAW,CAAC8C,IAAzB;AACA,QAAMlD,SAAS,GAAGuS,SAAS,CAAC,8DAAgB,CAACrP,IAAD,CAAjB,EAAyBgJ,WAAzB,CAA3B;AAEA9L,aAAW,CAACJ,SAAZ,GAAwB,CAAEA,SAAF,CAAxB;AACA,SAAOI,WAAP;AACH;AAEM,SAASoS,mBAAT,CAA6B9T,CAA7B,EAAgC;AACnC,SAAO+T,IAAI,CAAClE,MAAM,CAACC,YAAP,CAAoB,GAAG9P,CAAvB,CAAD,CAAX;AACH;AAEM,SAASgU,SAAT,CAAmBhc,UAAnB,EAA+Bic,QAA/B,EAAyC;AAC5C,MAAI,OAAOjc,UAAP,KAAsB,QAA1B,EACIA,UAAU,GAAG,8DAAgB,CAACA,UAAD,CAA7B;AAEJ,QAAMkc,SAAS,GAAGX,MAAM,CAACU,QAAD,CAAxB;AACA,QAAMD,SAAS,GAAGH,SAAS,CAACK,SAAD,EAAYlc,UAAZ,CAA3B;AAEA,SAAOgc,SAAP;AACH;AAEM,SAASG,gCAAT,CAA0CC,UAA1C,EAAsD;AACzD,QAAMC,WAAW,GAAG,oEAAsB,CAACD,UAAD,CAA1C;AACA,QAAM1S,WAAW,GAAG4S,KAAK,CAACC,QAAN,CAAeC,WAAf,CAA2BC,iBAA3B,CAA6CJ,WAA7C,CAApB;AACA,QAAMK,GAAG,GAAGhT,WAAW,CAACiT,UAAZ,EAAZ;AAEA,SAAOD,GAAG,CAACE,eAAJ,EAAP;AACH;AAEM,SAASC,SAAT,GAAqB;AACxB,QAAMC,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAMhc,GAAG,GAAGgc,EAAE,CAACC,UAAH,EAAZ;AACA,QAAMC,MAAM,GAAGlc,GAAG,CAACmc,UAAJ,EAAf;AAEA,MAAIC,SAAS,GAAGF,MAAM,CAACzX,QAAP,CAAgB,KAAhB,CAAhB;;AAEA,SAAO2X,SAAS,CAACvW,MAAV,GAAmB,EAA1B,EAA8B;AAC1BuW,aAAS,GAAI,IAAGA,SAAU,EAA1B;AACH;;AAED,SAAO,8DAAgB,CAACA,SAAD,CAAvB;AACH;AAEM,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,MAAIA,QAAQ,CAACzW,MAAT,KAAoB,EAAxB,EACIyW,QAAQ,GAAGA,QAAQ,CAAC9U,KAAT,CAAe,CAAf,CAAX;AAEJ,QAAM+U,IAAI,GAAG,yDAAS,CAACD,QAAD,CAAT,CAAoB7X,QAApB,EAAb;AACA,QAAM+X,UAAU,GAAG,uDAAc,GAAGD,IAAI,CAACE,SAAL,CAAe,EAAf,CAApC;AAEA,SAAO,8DAAgB,CAACD,UAAD,CAAvB;AACH;AAEM,SAASE,oBAAT,CAA8BhI,WAA9B,EAA2C;AAC9C,MAAI4H,QAAQ,GAAGK,mBAAmB,CAACjI,WAAD,CAAlC;AACA,SAAO2H,cAAc,CAACC,QAAD,CAArB;AACH;AAEM,SAASM,aAAT,CAAuBC,UAAvB,EAAmC;AACtC,QAAMC,WAAW,GAAG,wDAAQ,CAACD,UAAD,CAA5B;AAEA,MAAIC,WAAW,CAACjX,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,QAAMkX,UAAU,GAAGD,WAAW,CAACtV,KAAZ,CAAkB,CAAlB,EAAqBsV,WAAW,CAACjX,MAAZ,GAAqB,CAA1C,CAAnB;AACA,QAAM2U,KAAK,GAAGC,MAAM,CAACsC,UAAD,CAApB;AACA,QAAMrC,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;;AAEA,MAAIE,KAAK,CAAC,CAAD,CAAL,KAAaoC,WAAW,CAACC,UAAU,CAAClX,MAAZ,CAAxB,IACA6U,KAAK,CAAC,CAAD,CAAL,KAAaoC,WAAW,CAACC,UAAU,CAAClX,MAAX,GAAoB,CAArB,CADxB,IAEA6U,KAAK,CAAC,CAAD,CAAL,KAAaoC,WAAW,CAACC,UAAU,CAAClX,MAAX,GAAoB,CAArB,CAFxB,IAGA6U,KAAK,CAAC,CAAD,CAAL,KAAaoC,WAAW,CAACC,UAAU,CAAClX,MAAX,GAAoB,CAArB,CAH5B,EAGqD;AACjD,WAAOkX,UAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASjX,cAAT,CAAwBkX,SAAxB,EAAmC;AACtC,MAAI,OAAQA,SAAR,KAAuB,QAA3B,EACI,OAAO,KAAP;AAEJ,MAAIA,SAAS,CAACnX,MAAV,KAAqB,qDAAzB,EACI,OAAO,KAAP;AAEJ,MAAIjF,OAAO,GAAG,wDAAQ,CAACoc,SAAD,CAAtB;AAEA,MAAIpc,OAAO,CAACiF,MAAR,KAAmB,EAAvB,EACI,OAAO,KAAP;AAEJ,MAAIjF,OAAO,CAAC,CAAD,CAAP,KAAe,4DAAnB,EACI,OAAO,KAAP;AAEJ,QAAM+Z,QAAQ,GAAG/Z,OAAO,CAAC4G,KAAR,CAAc,EAAd,CAAjB;AACA5G,SAAO,GAAGA,OAAO,CAAC4G,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAV;AAEA,QAAMgT,KAAK,GAAGC,MAAM,CAAC7Z,OAAD,CAApB;AACA,QAAM8Z,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,QAAMM,SAAS,GAAGJ,KAAK,CAAClT,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAImT,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASmC,2CAAT,CAAqDC,kBAArD,EAAyE;AAC5E,QAAMxI,WAAW,GAAG,oEAAsB,CAACwI,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACjI,WAAD,CAApC;AACA,QAAME,YAAY,GAAGyH,cAAc,CAACC,QAAD,CAAnC;AAEA,SAAOjZ,qBAAqB,CAACuR,YAAD,CAA5B;AACH;AAEM,SAASuI,sCAAT,CAAgDD,kBAAhD,EAAoE;AACvE,QAAMxI,WAAW,GAAG,oEAAsB,CAACwI,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACjI,WAAD,CAApC;AACA,QAAME,YAAY,GAAGyH,cAAc,CAACC,QAAD,CAAnC;AACA,QAAME,UAAU,GAAG,+DAAgB,CAAC5H,YAAD,CAAnC;AAEA,SAAO4H,UAAP;AACH;AAEM,SAASY,gCAAT,CAA0CF,kBAA1C,EAA8D;AACjE,QAAMxI,WAAW,GAAG,oEAAsB,CAACwI,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACjI,WAAD,CAApC;AACA,QAAME,YAAY,GAAGyH,cAAc,CAACC,QAAD,CAAnC;AACA,QAAMe,aAAa,GAAG,kEAAoB,CAACzI,YAAD,CAA1C;AAEA,SAAOyI,aAAP;AACH;AAEM,SAASV,mBAAT,CAA6BjI,WAA7B,EAA0C;AAC7C,QAAMsH,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAMhc,GAAG,GAAGgc,EAAE,CAACsB,cAAH,CAAkB5I,WAAlB,EAA+B,OAA/B,CAAZ;AACA,QAAM6I,MAAM,GAAGvd,GAAG,CAACwd,SAAJ,EAAf;AACA,QAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AACA,QAAMC,CAAC,GAAGH,MAAM,CAACG,CAAjB;AAEA,MAAIC,IAAI,GAAGF,CAAC,CAAChZ,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOkZ,IAAI,CAAC9X,MAAL,GAAc,EAArB,EAAyB;AACrB8X,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,MAAIC,IAAI,GAAGF,CAAC,CAACjZ,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOmZ,IAAI,CAAC/X,MAAL,GAAc,EAArB,EAAyB;AACrB+X,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,QAAMC,SAAS,GAAI,KAAIF,IAAK,GAAEC,IAAK,EAAnC;AACA,QAAME,WAAW,GAAG,8DAAgB,CAACD,SAAD,CAApC;AAEA,SAAOC,WAAP;AACH;AAEM,SAAS/C,SAAT,CAAmBK,SAAnB,EAA8B1G,WAA9B,EAA2C;AAC9C,QAAMsH,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAMhc,GAAG,GAAGgc,EAAE,CAACsB,cAAH,CAAkB5I,WAAlB,EAA+B,OAA/B,CAAZ;AACA,QAAMlM,SAAS,GAAGxI,GAAG,CAAC+I,IAAJ,CAASqS,SAAT,CAAlB;AACA,QAAM2C,CAAC,GAAGvV,SAAS,CAACuV,CAApB;AACA,QAAMC,CAAC,GAAGxV,SAAS,CAACwV,CAApB;AACA,QAAMC,EAAE,GAAGzV,SAAS,CAAC0V,aAArB;AAEA,MAAIC,IAAI,GAAGJ,CAAC,CAACtZ,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAO0Z,IAAI,CAACtY,MAAL,GAAc,EAArB,EAAyB;AACrBsY,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,MAAIC,IAAI,GAAGJ,CAAC,CAACvZ,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAO2Z,IAAI,CAACvY,MAAL,GAAc,EAArB,EAAyB;AACrBuY,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,QAAMC,KAAK,GAAG,0DAAW,CAACJ,EAAD,CAAzB;AACA,QAAMK,OAAO,GAAGH,IAAI,GAAGC,IAAP,GAAcC,KAA9B;AAEA,SAAOC,OAAP;AACH;AAEM,SAAS7D,MAAT,CAAgB8D,QAAhB,EAA0B;AAC7B,QAAMC,MAAM,GAAG,IAAI,4CAAJ,CAAU,SAAV,EAAqB,KAArB,CAAf;AACA,QAAMC,MAAM,GAAG,+DAAgB,CAACF,QAAD,CAA/B;AAEAC,QAAM,CAACE,MAAP,CAAcD,MAAd;AACA,QAAME,OAAO,GAAGH,MAAM,CAACI,OAAP,CAAe,KAAf,CAAhB;AAEA,SAAO,8DAAgB,CAACD,OAAD,CAAvB;AACH;AAEM,SAASE,iBAAT,CAA2BzS,QAA3B,EAAqC;AACxC,QAAM0S,eAAe,GAAG,oEAAsB,CAAC1S,QAAD,CAA9C;AACA,QAAM2S,gBAAgB,GAAGrC,oBAAoB,CAACoC,eAAD,CAA7C;AAEA,SAAOzb,qBAAqB,CAAC0b,gBAAD,CAA5B;AACH;AAEM,SAASrb,WAAT,CAAqBxE,UAArB,EAAiC;AACpC,QAAM4f,eAAe,GAAG,8DAAgB,CAAC5f,UAAD,CAAxC;AACA,QAAM6f,gBAAgB,GAAGrC,oBAAoB,CAACoC,eAAD,CAA7C;AAEA,SAAOzb,qBAAqB,CAAC0b,gBAAD,CAA5B;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;ACxQD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAMnV,KAAK,GAAG;AACV9H,YAAU,CAACkL,GAAD,EAAM;AACZ,WAAO,gDAAS,CAACgS,KAAV,CAAgBhS,GAAhB,EAAqB;AACxBiS,eAAS,EAAE,CAAE,MAAF,EAAU,OAAV;AADa,KAArB,CAAP;AAGH,GALS;;AAOVzS,UAAQ,CAAC0S,GAAD,EAAM;AACV,WAAOA,GAAG,KAAK/d,MAAM,CAAC+d,GAAD,CAAd,IAAuB/d,MAAM,CAACge,SAAP,CAAiB1a,QAAjB,CAA0ByG,IAA1B,CAA+BgU,GAA/B,MAAwC,gBAAtE;AACH,GATS;;AAWVzc,SAAO,CAACsW,KAAD,EAAQ;AACX,WAAOzB,KAAK,CAAC7U,OAAN,CAAcsW,KAAd,CAAP;AACH,GAbS;;AAeVqG,QAAM,CAACxb,MAAD,EAAS;AACX,QAAI;AACA,aAAO,CAAC,CAACM,IAAI,CAAC6K,KAAL,CAAWnL,MAAX,CAAT;AACH,KAFD,CAEE,OAAOuF,EAAP,EAAW;AACT,aAAO,KAAP;AACH;AACJ,GArBS;;AAuBVrF,WAAS,CAACub,IAAD,EAAO;AACZ,WAAO,OAAOA,IAAP,KAAgB,SAAvB;AACH,GAzBS;;AA2BVrb,aAAW,CAACkB,MAAD,EAAS;AAChB,WAAOA,MAAM,KAAKA,MAAM,YAAY,mDAAlB,IAAgCA,MAAM,CAACpG,WAAP,IAAsBoG,MAAM,CAACpG,WAAP,CAAmBwJ,IAAnB,KAA4B,WAAvF,CAAb;AACH,GA7BS;;AA+BVnJ,UAAQ,CAACyE,MAAD,EAAS;AACb,WAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA+BA,MAAM,IAAIA,MAAM,CAAC9E,WAAjB,IAAgC8E,MAAM,CAAC9E,WAAP,CAAmBwJ,IAAnB,KAA4B,QAAlG;AACH,GAjCS;;AAmCVK,YAAU,CAACuW,GAAD,EAAM;AACZ,WAAO,OAAOA,GAAP,KAAe,UAAtB;AACH,GArCS;;AAuCV/b,OAAK,CAACS,MAAD,EAAS;AACV,WAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAAC2I,KAAK,CAACgB,QAAQ,CAAC3J,MAAD,EAAS,EAAT,CAAT,CAA3C;AACH,GAzCS;;AA2CVnD,WAAS,CAACyE,MAAD,EAAS;AACd,WAAOoa,MAAM,CAAC7e,SAAP,CACH6e,MAAM,CAACpa,MAAD,CADH,CAAP;AAGH,GA/CS;;AAiDVvD,aAAW,CAACud,GAAD,EAAMK,QAAN,EAAgB;AACvB,WAAOpe,MAAM,CAACge,SAAP,CAAiBK,cAAjB,CAAgCtU,IAAhC,CAAqCgU,GAArC,EAA0CK,QAA1C,CAAP;AACH,GAnDS;;AAqDVxS,eAAa,CAACmS,GAAD,EAAM,GAAGO,UAAT,EAAqB;AAC9B,WAAOA,UAAU,CAAC5Z,MAAX,IAAqB,CAAC4Z,UAAU,CAAC/c,GAAX,CAAe6c,QAAQ,IAAI;AACpD,aAAO,KAAK5d,WAAL,CAAiBud,GAAjB,EAAsBK,QAAtB,CAAP;AACH,KAF4B,EAE1BjW,QAF0B,CAEjB,KAFiB,CAA7B;AAGH,GAzDS;;AA2DVjJ,eAAa,CAAC4H,IAAD,EAAO,GAAG0C,IAAV,EAAgB;AACzB,WAAO,IAAI+U,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC3X,UAAI,CAAC,GAAG0C,IAAJ,EAAU,CAAC9H,GAAD,EAAMgd,GAAN,KAAc;AACxB,YAAGhd,GAAH,EACI+c,MAAM,CAAC/c,GAAD,CAAN,CADJ,KAEK8c,OAAO,CAACE,GAAD,CAAP;AACR,OAJG,CAAJ;AAKH,KANM,CAAP;AAOH,GAnES;;AAqEVvf,iBAAe,CAACwf,KAAD,EAAQ;AACnB,WAAO,CAAC7X,IAAD,EAAO,GAAG0C,IAAV,KAAmB;AACtB,aAAO,KAAKtK,aAAL,CAAmB4H,IAAI,CAACI,IAAL,CAAUyX,KAAV,CAAnB,EAAqC,GAAGnV,IAAxC,CAAP;AACH,KAFD;AAGH,GAzES;;AA2EV/H,UAAQ,CAACD,KAAD,EAAQ;AACZ,WAAO;AACHyE,WAAK,EAAEzE,KAAK,CAACod,YADV;AAEHnN,eAAS,EAAEjQ,KAAK,CAACqd,eAFd;AAGH/c,cAAQ,EAAEN,KAAK,CAACuG,gBAHb;AAIHZ,UAAI,EAAE3F,KAAK,CAACsd,UAJT;AAKHrX,iBAAW,EAAEjG,KAAK,CAACud,cALhB;AAMH/a,YAAM,EAAExC,KAAK,CAACwC;AANX,KAAP;AAQH;;AApFS,CAAd;AAuFA,+DAAe,EACX,GAAGyE,KADQ;AAEXtG,EAAA,wCAFW;AAGX6C,EAAA,gDAHW;AAIXrG,EAAA,4CAJW;AAKXkW,EAAA,0CALW;AAMX5S,EAAA,4CAAMA;AANK,CAAf,E;;;;;;;;;;;AChGA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,sC","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\nimport Contract from 'lib/contract';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest')\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = +blockID;\n    }\n\n    setPrivateKey(privateKey) {\n        // Set address first as it clears the private key\n        this.setAddress(\n            this.address.fromPrivateKey(privateKey)\n        );\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: this.address.toHex(address),\n            base58: this.address.fromHex(address)\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(contractAddress = false, eventName = false, blockNumber = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        const routeParams = [];\n\n        if(!this.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n        \n        if(blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if(contractAddress)\n            routeParams.push(this.address.fromHex(contractAddress));\n\n        if(eventName)\n            routeParams.push(eventName);\n\n        if(blockNumber)\n            routeParams.push(blockNumber);\n\n        return axios(`${this.eventServer}/event/contract/${routeParams.join('/')}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback(err.response.data || err)); \n    }\n\n    getEventByTransacionID(transactionID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        return axios(`${this.eventServer}/event/transaction/${transactionID}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback(err.response.data || err));\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address;\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                );\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;        \n        this.deployed = false;\n        this.lastBlock = false;  \n\n        this.methods = {};\n\n        if(this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents() {\n        const events = await this.tronWeb.getEventResult(this.address);\n        const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n            if(!this.lastBlock)\n                return true;            \n\n            if(event.block <= this.lastBlock)\n                return false;\n\n            // TronGrid is currently bugged and has duplicated the events\n            return !events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n        });\n\n        if(latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(callback) {\n        if(this.eventListener)\n            clearInterval(this.eventListener);\n\n        if(!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if(!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents();\n\n        this.eventListener = setInterval(() => {\n            this._getEvents().then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if(!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        abi.forEach(func => {\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            this.methods[method.name] = methodCall;\n            this.methods[method.functionSelector] = methodCall;\n            this.methods[method.signature] = methodCall;\n        });\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!contract.result)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            return this.at(signedTransaction.contract_address, callback);\n        } catch(ex) {\n            return callback(ex);\n        }        \n    }\n\n    async at(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if(!contract.contract_address)\n                callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi.entrys);\n\n            callback(null, this);\n        } catch(ex) {\n            if(ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }        \n    }\n\n    events(callback = false) {\n        if(!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if(!startCallback) {\n                    self._startEventListener(callback);\n                    return this;\n                }\n\n                self._startEventListener(callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}","import Ethers from 'ethers';\nimport utils from 'utils';\n\nconst abiCoder = new Ethers.utils.AbiCoder();\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({ type }) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    if(abi.some(output => utils.hasProperty(output, 'name'))) {\n        return abiCoder.decode(\n            abi.map(({ name }) => name),\n            abi.map(({ type }) => type),\n            output\n        )\n    }\n\n    return abiCoder.decode(\n        abi.map(({ type }) => type),\n        output\n    );\n};\n\nconst STATE_MUTABILITY = {\n    PURE: 'pure',\n    VIEW: 'view'\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;        \n        this.name = abi.name;\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.signature = this.tronWeb.sha3(abi.name).slice(0, 8);\n        this.functionSelector = getFunctionSelector(abi);\n    }\n\n    onMethod(...args) {        \n        const types = getParamTypes(this.inputs);\n\n        if(types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        args.forEach((arg, index) => {\n            if(types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(/^(41)/, '0x')\n        });\n\n        const self = this;\n        const defaultOptions = {\n            feeLimit: 1000000000,\n            callValue: 0,\n            from: this.tronWeb.defaultAddress.hex, // Only used for send()\n            shouldPollResponse: false // Only used for sign()\n        };\n\n        return {\n            call(options = defaultOptions, callback = false) {                \n                if(utils.isFunction(options)) {\n                    callback = options;\n                    options = defaultOptions;\n                }\n                    \n                if(!callback)\n                    return utils.injectPromise(this.call.bind(this), options);\n\n                if(!self.contract.address)\n                    throw new Error('Smart contract is missing address');\n\n                if(!self.contract.deployed)\n                    throw new Error('Calling smart contracts requires you to load the contract first');\n\n                const { stateMutability } = self.abi;\n\n                if(![ STATE_MUTABILITY.PURE, STATE_MUTABILITY.VIEW ].includes(stateMutability.toLowerCase()))\n                    return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n                const parameters = args.map((value, index) => ({\n                    type: types[index],\n                    value\n                }));\n\n                self.tronWeb.transactionBuilder.triggerSmartContract(\n                    self.contract.address,\n                    self.functionSelector,\n                    options.feeLimit,\n                    options.callValue,\n                    parameters,\n                    self.tronWeb.address.toHex(options.from),\n                (err, transaction) => {\n                    if(err) \n                        return callback(err);\n\n                    if(!utils.hasProperty(transaction, 'constant_result'))\n                        return callback('Failed to execute');\n\n                    try {\n                        const output = decodeOutput(self.outputs, '0x' + transaction.constant_result[0]);\n                        return callback(null, output);\n                    } catch(ex) {\n                        return callback(ex);\n                    }\n                });\n            },\n            async send(options = {}, privateKey = self.tronWeb.defaultPrivateKey, callback = false) {\n                if(utils.isFunction(privateKey)) {\n                    callback = privateKey;\n                    privateKey = self.tronWeb.defaultPrivateKey;\n                }\n\n                if(utils.isFunction(options)) {\n                    callback = options;\n                    options = defaultOptions;\n                }\n                    \n                if(!callback)\n                    return utils.injectPromise(this.send.bind(this), options, privateKey);\n\n                if(!self.contract.address)\n                    throw new Error('Smart contract is missing address');\n\n                if(!self.contract.deployed)\n                    throw new Error('Calling smart contracts requires you to load the contract first');\n\n                const { stateMutability } = self.abi;\n\n                if([ STATE_MUTABILITY.PURE, STATE_MUTABILITY.VIEW ].includes(stateMutability.toLowerCase()))\n                        return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n                const parameters = args.map((value, index) => ({\n                    type: types[index],\n                    value\n                }));\n\n                try {\n                    const address = self.tronWeb.address.fromPrivateKey(privateKey);\n                    const transaction = await self.tronWeb.transactionBuilder.triggerSmartContract(\n                        self.contract.address,\n                        self.functionSelector,\n                        options.feeLimit,\n                        options.callValue,\n                        parameters,\n                        self.tronWeb.address.toHex(address)\n                    );\n\n                    if(!transaction.result || !transaction.result.result)\n                        return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n                    const signedTransaction = await self.tronWeb.trx.sign(transaction.transaction, privateKey);\n                    const broadcast = await self.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n                    if(!broadcast.result)\n                        return callback('Unknown error: ' + JSON.stringify(broadcast, null, 2));\n\n                    if(!options.shouldPollResponse)\n                        return callback(null, signedTransaction.txID);\n\n                    const checkResult = async (index = 0) => {\n                        if(index == 20)\n                            return callback(null, signedTransaction.txID);\n                        \n                        const output = await self.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                        if(!Object.keys(output).length) {\n                            return setTimeout(() => {\n                                checkResult(index + 1);\n                            }, 3000);\n                        }\n\n                        if(!utils.hasProperty(output, 'contractResult'))\n                            return callback('Failed to execute: ' + JSON.stringify(output, null, 2));\n\n                        const decoded = decodeOutput(self.outputs, '0x' + output.contractResult[0]);\n                        return callback(null, decoded);\n                    }\n\n                    checkResult();                    \n                } catch(ex) {\n                    return callback(ex);\n                }\n            }\n        }\n    }\n}","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(address = this.tronWeb.defaultAddress.hex, amount = 0, duration = 3, callback = false) {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, address, amount, duration);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 1_000_000_000,\n            callValue = 0,\n            bandwidthLimit = 0,\n            parameters = []\n        } = options;\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(bandwidthLimit) || bandwidthLimit < 0 || bandwidthLimit > 100)\n            return callback('Invalid options.bandwidthLimit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(!value)\n                    return callback('Invalid parameter value provided: ' + value);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: bandwidthLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit = 1_000_000_000,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n        }\n\n        if(utils.isFunction(feeLimit)) {\n            callback = feeLimit;\n            feeLimit = 1_000_000_000;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(!value)\n                    return callback('Invalid parameter value provided: ' + value);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n}","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionInfo, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey);\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction', \n            signedTransaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url, {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result\n        };\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}