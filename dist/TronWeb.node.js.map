{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/contract/index.js","webpack:///./src/lib/contract/method.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","constructor","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","setDefaultBlock","blockID","isInteger","Error","setAddress","address","fromPrivateKey","isAddress","toHex","fromHex","isValidProvider","provider","Object","values","some","knownProvider","isEventServerConnected","get","then","data","hasProperty","catch","setStatusPage","isValidURL","currentProviders","currentProvider","getEventResult","contractAddress","eventName","blockNumber","callback","routeParams","push","join","isArray","map","event","mapEvent","err","response","getEventByTransacionID","transactionID","contract","abi","isHex","crypto","getBase58CheckAddress","code","hexStr2byteArray","toLowerCase","byteArray2hexStr","decodeBase58Address","pkToAddress","sha3","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","toUtf8","Buffer","from","toString","toAscii","fromAscii","padding","padEnd","toDecimal","value","toBigNumber","toNumber","number","result","lessThan","substr","fromSun","sun","div","toSun","times","amount","replace","length","isAddressValid","compile","solditySource","createAccount","account","accounts","generateAccount","isConnected","Contract","tronWeb","eventListener","bytecode","deployed","lastBlock","methods","loadAbi","_getEvents","events","latestEvent","sort","a","b","block","newEvents","filter","index","duplicate","slice","priorEvent","_startEventListener","clearInterval","eventCallback","setInterval","console","error","_stopEventListener","func","method","methodCall","onMethod","bind","name","functionSelector","signature","new","options","isFunction","transaction","createSmartContract","signedTransaction","sign","sendRawTransaction","at","contract_address","ex","getContract","entrys","includes","self","start","startCallback","stop","abiCoder","utils","AbiCoder","getFunctionSelector","getParamTypes","inputs","params","type","decodeOutput","output","decode","Method","outputs","defaultOptions","feeLimit","callValue","shouldPollResponse","args","types","arg","call","methodArgs","_call","send","_send","watch","_watch","stateMutability","parameters","triggerSmartContract","constant_result","broadcast","txID","checkResult","getTransactionInfo","keys","setTimeout","decoded","contractResult","listener","getEvents","Promise","reject","bindListener","parseEvent","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","TransactionBuilder","sendTrx","to","to_address","owner_address","parseInt","sendToken","tokenID","asset_name","purchaseToken","issuerAddress","buyer","freezeBalance","duration","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","vote","votes","voterAddress","invalid","entries","srAddress","voteCount","vote_address","vote_count","bandwidthLimit","parse","payable","i","encode","fee_limit","call_value","consume_user_resource_percent","parameter","function_selector","message","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","Date","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","updateToken","new_limit","new_public_limit","sendAsset","purchaseAsset","createAsset","updateAsset","Trx","parseToken","token","getCurrentBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransactionFromBlock","getTransaction","getTransactionsToAddress","limit","offset","getTransactionsRelated","getTransactionsFromAddress","direction","tx","raw_data","timestamp","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","reduce","getTokenFromID","listNodes","nodes","port","getBlockRange","end","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","signTransaction","sendTransaction","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","j","digits","carry","reverse","digit","decode58","bytes","c","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","r","s","id","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","obj","prototype","isJson","bool","Number","property","hasOwnProperty","properties","resolve","res","scope","block_number","block_timestamp","event_name","transaction_id"],"mappings":"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","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\nimport Contract from 'lib/contract';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest')\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = +blockID;\n    }\n\n    setPrivateKey(privateKey) {\n        // Set address first as it clears the private key\n        this.setAddress(\n            this.address.fromPrivateKey(privateKey)\n        );\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if(this.defaultPrivateKey && this.address.fromPrivateKey !== hex)\n           this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(contractAddress = false, eventName = false, blockNumber = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        const routeParams = [];\n\n        if(!this.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n        \n        if(blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if(contractAddress)\n            routeParams.push(this.address.fromHex(contractAddress));\n\n        if(eventName)\n            routeParams.push(eventName);\n\n        if(blockNumber)\n            routeParams.push(blockNumber);\n\n        return axios(`${this.eventServer}/event/contract/${routeParams.join('/')}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback(err.response.data || err)); \n    }\n\n    getEventByTransacionID(transactionID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        return axios(`${this.eventServer}/event/transaction/${transactionID}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback(err.response.data || err));\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address.toLowerCase();\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;        \n        this.deployed = false;\n        this.lastBlock = false;  \n\n        this.methods = {};\n\n        if(this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents() {\n        const events = await this.tronWeb.getEventResult(this.address);\n        const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if(duplicate)\n                return false;\n            \n            if(!this.lastBlock)\n                return true;            \n\n            return event.block > this.lastBlock;\n        });\n\n        if(latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(callback) {\n        if(this.eventListener)\n            clearInterval(this.eventListener);\n\n        if(!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if(!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents();\n\n        this.eventListener = setInterval(() => {\n            this._getEvents().then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if(!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        abi.forEach(func => {\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            this.methods[method.name] = methodCall;\n            this.methods[method.functionSelector] = methodCall;\n            this.methods[method.signature] = methodCall;\n        });\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!contract.result)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            return this.at(signedTransaction.contract_address, callback);\n        } catch(ex) {\n            return callback(ex);\n        }        \n    }\n\n    async at(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if(!contract.contract_address)\n                callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi.entrys);\n\n            callback(null, this);\n        } catch(ex) {\n            if(ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }        \n    }\n\n    events(callback = false) {\n        if(!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if(!startCallback) {\n                    self._startEventListener(callback);\n                    return this;\n                }\n\n                self._startEventListener(callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}","import Ethers from 'ethers';\nimport utils from 'utils';\n\nconst abiCoder = new Ethers.utils.AbiCoder();\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({ type }) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    if(abi.some(output => utils.hasProperty(output, 'name'))) {\n        return abiCoder.decode(\n            abi.map(({ name }) => name),\n            abi.map(({ type }) => type),\n            output\n        )\n    }\n\n    return abiCoder.decode(\n        abi.map(({ type }) => type),\n        output\n    );\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;        \n        this.name = abi.name;\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.signature = this.tronWeb.sha3(abi.name).slice(0, 8);\n        this.functionSelector = getFunctionSelector(abi);\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.defaultOptions = {\n            feeLimit: 1000000000,\n            callValue: 0,\n            from: this.tronWeb.defaultAddress.hex, // Only used for send()\n            shouldPollResponse: false // Only used for sign()\n        };\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if(types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(/^(41)/, '0x')\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, methodArgs),\n            send: (...methodArgs) => this._send(types, args, methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {                \n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n            \n        if(!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if(types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const { stateMutability } = this.abi;\n\n        if(![ 'pure', 'view' ].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = { ...this.defaultOptions, ...options };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options.feeLimit,\n            options.callValue,\n            parameters,\n            this.tronWeb.address.toHex(options.from),\n        (err, transaction) => {\n            if(err) \n                return callback(err);\n\n            if(!utils.hasProperty(transaction, 'constant_result'))\n                return callback('Failed to execute');\n\n            try {\n                let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n                \n                if(output.length === 1)\n                    output = output[0];\n\n                return callback(null, output);\n            } catch(ex) {\n                return callback(ex);\n            }\n        });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n            \n        if(!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if(types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        if(!privateKey || !utils.isString(privateKey))\n            return callback('Invalid private key provided');\n\n        const { stateMutability } = this.abi;\n\n        if([ 'pure', 'view' ].includes(stateMutability.toLowerCase()))\n                return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        options = { ...this.defaultOptions, ...options };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options.feeLimit,\n                options.callValue,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if(!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!broadcast.result)\n                return callback('Unknown error: ' + JSON.stringify(broadcast, null, 2));\n\n            if(!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if(index == 20)\n                    return callback(null, signedTransaction.txID);\n                \n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if(!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if(!utils.hasProperty(output, 'contractResult'))\n                    return callback('Failed to execute: ' + JSON.stringify(output, null, 2));\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if(decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();                    \n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(callback = false) {\n        if(!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n        \n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(this.abi.type.toLowerCase() !== 'event')\n            return callback('Invalid method type for event watching');\n\n        if(!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n\n        const getEvents = async () => {\n            try {\n                const events = await this.tronWeb.getEventResult(this.contract.address, this.name);\n                const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if(duplicate)\n                        return false;\n\n                    if(!lastBlock)\n                        return true;            \n\n                    return event.block > lastBlock;\n                });\n\n                if(latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch(ex) {\n                return Promise.reject(ex);\n            }\n        };\n\n        const bindListener = () => {\n            if(listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener(),\n            stop: () => {\n                if(!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(address = this.tronWeb.defaultAddress.hex, amount = 0, duration = 3, callback = false) {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, address, amount, duration);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 1_000_000_000,\n            callValue = 0,\n            bandwidthLimit = 0,\n            parameters = []\n        } = options;\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(bandwidthLimit) || bandwidthLimit < 0 || bandwidthLimit > 100)\n            return callback('Invalid options.bandwidthLimit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: bandwidthLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit = 1_000_000_000,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n        }\n\n        if(utils.isFunction(feeLimit)) {\n            callback = feeLimit;\n            feeLimit = 1_000_000_000;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n}","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index = 0, callback = false) {\n        if(utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n        \n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        if(!utils.isInteger(index) || index < 0)\n            return callback('Invalid transaction index provided');\n\n        this.getBlock(block).then(({ transactions = false }) => {\n            if(!transactions || transactions.length < index)\n                return callback('Transaction not found in block');\n\n            callback(null, transactions[index]);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n                \n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionInfo, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey);\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction', \n            signedTransaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url, {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result\n        };\n    },\n\n    parseEvent(event, { inputs: abi }) {\n        if(!event.result)\n            return event;\n\n        event.result = event.result.reduce((obj, result, index) => {\n            const {\n                name,\n                type\n            } = abi[index];\n\n            if(type == 'address')\n                result = '41' + address.substr(2).toLowerCase();\n\n            obj[name] = result;\n\n            return obj;\n        }, {});\n\n        return event;\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}