{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/contract/index.js","webpack:///./src/lib/contract/method.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/utils/abi.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"eventemitter3\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","utils","injectPromise","promiseInjector","blockID","includes","isInteger","Error","Math","abs","setAddress","address","fromPrivateKey","emit","isAddress","toHex","fromHex","provider","Object","values","some","knownProvider","isValidProvider","setStatusPage","isConnected","request","then","catch","data","Array","isArray","currentProviders","contractAddress","sinceTimestamp","eventName","blockNumber","callback","getEventResult","routeParams","push","join","map","event","mapEvent","err","response","transactionID","getEventByTransactionID","abi","string","prefix","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","test","isFinite","result","isHex","replace","Buffer","from","toString","str","i","l","length","substring","code","parseInt","substr","String","fromCharCode","padding","padEnd","value","toBigNumber","toNumber","number","isLessThan","sun","div","times","amount","crypto","getBase58CheckAddress","hexStr2byteArray","isAddressValid","account","accounts","generateAccount","toLowerCase","byteArray2hexStr","decodeBase58Address","pkToAddress","Contract","tronWeb","eventListener","bytecode","deployed","lastBlock","methods","methodInstances","props","loadAbi","options","events","sort","a","b","block","latestEvent","newEvents","filter","index","resourceNode","RegExp","duplicate","slice","priorEvent","isFunction","clearInterval","eventCallback","_getEvents","setInterval","console","error","property","hasOwnProperty","__proto__","prop","func","type","method","methodCall","onMethod","bind","name","functionSelector","signature","hasProperty","methodName","inputData","methodInstance","params","decodeInput","new","createSmartContract","transaction","sign","signedTransaction","sendRawTransaction","contract","at","contract_address","getContract","entrys","self","start","startCallback","_startEventListener","stop","_stopEventListener","getFunctionSelector","getParamTypes","inputs","decodeOutput","output","names","types","decodeParams","Method","outputs","sha3","defaultOptions","feeLimit","callValue","shouldPollResponse","args","arg","call","methodArgs","_call","send","_send","watch","_watch","stateMutability","parameters","triggerSmartContract","constant_result","ex","broadcast","txID","checkResult","getTransactionInfo","keys","setTimeout","toUtf8","resMessage","decoded","contractResult","listener","Date","getTime","getEvents","Promise","reject","bindListener","parseEvent","host","timeout","user","password","headers","statusPage","isValidURL","isNaN","isObject","instance","create","baseURL","auth","hasProperties","url","payload","TransactionBuilder","to","sendTrx","to_address","owner_address","tokenID","sendToken","asset_name","issuerAddress","buyer","purchaseToken","duration","resource","freezeBalance","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","votes","voterAddress","vote","invalid","entries","srAddress","voteCount","vote_address","vote_count","userFeePercentage","parse","payable","constructorParams","find","it","abiCoder","AbiCoder","encode","fee_limit","call_value","consume_user_resource_percent","parameter","function_selector","message","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","accountName","updateAccount","account_name","updateToken","new_limit","new_public_limit","createProposal","proposalID","deleteProposal","proposal_id","hasApproval","voteProposal","is_add_approval","isApproval","tokenName","tokenBalance","trxBalance","ownerAddress","createTRXExchange","log","first_token_id","first_token_balance","second_token_id","second_token_balance","resources","exchangeID","tokenAmount","injectExchangeTokens","exchange_id","token_id","quant","withdrawExchangeTokens","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","expected","TRX_MESSAGE_HEADER","ETH_MESSAGE_HEADER","Trx","token","getCurrentBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransactionFromBlock","getTransaction","getConfirmedTransaction","limit","offset","getTransactionsToAddress","getTransactionsRelated","getTransactionsFromAddress","direction","tx","raw_data","timestamp","getAccount","getBalance","balance","getUnconfirmedAccount","getUnconfirmedBalance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","parseToken","reduce","getTokenFromID","listNodes","nodes","port","end","getBlockRange","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","floor","useTronHeader","verifyMessage","messageBytes","toUtf8Bytes","messageDigest","keccak256","recovered","recoverAddress","recoveryParam","r","s","tronAddress","base58Address","signingKey","SigningKey","signDigest","signatureHex","Number","v","signTransaction","sendTransaction","undefined","getProposal","id","proposal","listProposals","proposals","getChainParameters","chainParameter","getAccountResources","getExchangeByID","exchange","listExchanges","exchanges","ignoreMethodHash","decode","obj","encodeParams","priKeyBytes","pubKeyBytes","addressBytes","publicKey","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","charAt","BASE","encode58","buffer","j","digits","carry","reverse","digit","decode58","bytes","c","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","indexOf","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","_utf8_encode","n","c2","c3","byte2hexStr","byte","hexByteMap","bytesToString","arr","one","match","bytesLength","store","st","hextoString","split","out","tmp","base64DecodeFromString","string64","base64EncodeToString","bin2String","array","arrayEquals","array1","array2","strict","stringToBytes","len","hexChar2byte","d","isHexChar","k","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","prototype","isJson","bool","constructor","properties","resolve","res","scope","block_number","block_timestamp","event_name","transaction_id","resource_Node","padLeft"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;IAEqBA,O;;;;;AAOjB,mBAAYC,QAAZ,EAAsBC,YAAtB,EAA6E;AAAA;;AAAA,QAAzCC,WAAyC,uEAA3B,KAA2B;AAAA,QAApBC,UAAoB,uEAAP,KAAO;;AAAA;;AACzE;AAEA,QAAG,8CAAK,CAACC,QAAN,CAAeJ,QAAf,CAAH,EACIA,QAAQ,GAAG,IAAI,sDAAS,CAACK,YAAd,CAA2BL,QAA3B,CAAX;AAEJ,QAAG,8CAAK,CAACI,QAAN,CAAeH,YAAf,CAAH,EACIA,YAAY,GAAG,IAAI,sDAAS,CAACI,YAAd,CAA2BJ,YAA3B,CAAf;AAEJ,QAAG,8CAAK,CAACG,QAAN,CAAeF,WAAf,CAAH,EACIA,WAAW,GAAG,IAAI,sDAAS,CAACG,YAAd,CAA2BH,WAA3B,CAAd;;AAEJ,UAAKI,WAAL,CAAiBN,QAAjB;;AACA,UAAKO,eAAL,CAAqBN,YAArB;;AACA,UAAKO,cAAL,CAAoBN,WAApB;;AAEA,UAAKO,SAAL,GAAiB,sDAAjB;AACA,UAAKC,SAAL,GAAiB,oDAAjB;AAEA,UAAKC,YAAL,GAAoB,KAApB;AACA,UAAKC,iBAAL,GAAyB,KAAzB;AACA,UAAKC,cAAL,GAAsB;AAClBC,SAAG,EAAE,KADa;AAElBC,YAAM,EAAE;AAFU,KAAtB;AAKA,KACI,MADJ,EACY,OADZ,EACqB,QADrB,EAC+B,UAD/B,EAEI,SAFJ,EAEe,WAFf,EAE4B,WAF5B,EAEyC,aAFzC,EAGI,OAHJ,EAGa,SAHb,EAGwB,aAHxB,EAGuC,WAHvC,EAII,eAJJ,EAIqB,SAJrB,EAKEC,OALF,CAKU,UAAAC,GAAG,EAAI;AACb,YAAKA,GAAL,IAAYlB,OAAO,CAACkB,GAAD,CAAnB;AACH,KAPD;AASA,QAAGd,UAAH,EACI,MAAKe,aAAL,CAAmBf,UAAnB;AAEJ,UAAKgB,kBAAL,GAA0B,IAAI,+DAAJ,iLAA1B;AACA,UAAKC,GAAL,GAAW,IAAI,gDAAJ,iLAAX;AACA,UAAKC,KAAL,GAAa,8CAAb;AAEA,UAAKC,aAAL,GAAqB,8CAAK,CAACC,eAAN,iLAArB;AA1CyE;AA2C5E;;;;sCAEgC;AAAA,UAAjBC,OAAiB,uEAAP,KAAO;;AAC7B,UAAG,CAAE,KAAF,EAAS,QAAT,EAAmB,UAAnB,EAA+B,CAA/B,EAAmCC,QAAnC,CAA4CD,OAA5C,CAAH,EAAyD;AACrD,eAAO,KAAKb,YAAL,GAAoBa,OAA3B;AACH;;AAED,UAAG,CAAC,8CAAK,CAACE,SAAN,CAAgBF,OAAhB,CAAD,IAA6B,CAACA,OAAjC,EACI,MAAM,IAAIG,KAAJ,CAAU,2BAAV,CAAN;AAEJ,WAAKhB,YAAL,GAAoBiB,IAAI,CAACC,GAAL,CAASL,OAAT,CAApB;AACH;;;kCAEarB,U,EAAY;AACtB,UAAI;AACA,aAAK2B,UAAL,CACI,KAAKC,OAAL,CAAaC,cAAb,CAA4B7B,UAA5B,CADJ;AAGH,OAJD,CAIE,gBAAM;AACJ,cAAM,IAAIwB,KAAJ,CAAU,8BAAV,CAAN;AACH;;AAED,WAAKf,iBAAL,GAAyBT,UAAzB;AACA,WAAK8B,IAAL,CAAU,mBAAV,EAA+B9B,UAA/B;AACH;;;+BAEU4B,O,EAAS;AAChB,UAAG,CAAC,KAAKG,SAAL,CAAeH,OAAf,CAAJ,EACI,MAAM,IAAIJ,KAAJ,CAAU,0BAAV,CAAN;AAEJ,UAAMb,GAAG,GAAG,KAAKiB,OAAL,CAAaI,KAAb,CAAmBJ,OAAnB,CAAZ;AACA,UAAMhB,MAAM,GAAG,KAAKgB,OAAL,CAAaK,OAAb,CAAqBL,OAArB,CAAf;AAEA,UAAG,KAAKnB,iBAAL,IAA0B,KAAKmB,OAAL,CAAaC,cAAb,CAA4B,KAAKpB,iBAAjC,MAAwDG,MAArF,EACG,KAAKH,iBAAL,GAAyB,KAAzB;AAEH,WAAKC,cAAL,GAAsB;AAClBC,WAAG,EAAHA,GADkB;AAElBC,cAAM,EAANA;AAFkB,OAAtB;AAKA,WAAKkB,IAAL,CAAU,gBAAV,EAA4B;AAAEnB,WAAG,EAAHA,GAAF;AAAOC,cAAM,EAANA;AAAP,OAA5B;AACH;;;oCAEesB,Q,EAAU;AACtB,aAAOC,MAAM,CAACC,MAAP,CAAc,sDAAd,EAAyBC,IAAzB,CAA8B,UAAAC,aAAa;AAAA,eAAIJ,QAAQ,YAAYI,aAAxB;AAAA,OAA3C,CAAP;AACH;;;gCAEWzC,Q,EAAU;AAClB,UAAG,8CAAK,CAACI,QAAN,CAAeJ,QAAf,CAAH,EACIA,QAAQ,GAAG,IAAI,sDAAS,CAACK,YAAd,CAA2BL,QAA3B,CAAX;AAEJ,UAAG,CAAC,KAAK0C,eAAL,CAAqB1C,QAArB,CAAJ,EACI,MAAM,IAAI2B,KAAJ,CAAU,4BAAV,CAAN;AAEJ,WAAK3B,QAAL,GAAgBA,QAAhB;AACA,WAAKA,QAAL,CAAc2C,aAAd,CAA4B,oBAA5B;AACH;;;oCAEe1C,Y,EAAc;AAC1B,UAAG,8CAAK,CAACG,QAAN,CAAeH,YAAf,CAAH,EACIA,YAAY,GAAG,IAAI,sDAAS,CAACI,YAAd,CAA2BJ,YAA3B,CAAf;AAEJ,UAAG,CAAC,KAAKyC,eAAL,CAAqBzC,YAArB,CAAJ,EACI,MAAM,IAAI0B,KAAJ,CAAU,gCAAV,CAAN;AAEJ,WAAK1B,YAAL,GAAoBA,YAApB;AACA,WAAKA,YAAL,CAAkB0C,aAAlB,CAAgC,4BAAhC;AACH;;;qCAEmC;AAAA;;AAAA,UAArBzC,WAAqB,uEAAP,KAAO;AAChC,UAAG,CAACA,WAAJ,EACI,OAAO,KAAKA,WAAL,GAAmB,KAA1B;AAEJ,UAAG,8CAAK,CAACE,QAAN,CAAeF,WAAf,CAAH,EACIA,WAAW,GAAG,IAAI,sDAAS,CAACG,YAAd,CAA2BH,WAA3B,CAAd;AAEJ,UAAG,CAAC,KAAKwC,eAAL,CAAqBxC,WAArB,CAAJ,EACI,MAAM,IAAIyB,KAAJ,CAAU,+BAAV,CAAN;AAEJ,WAAKzB,WAAL,GAAmBA,WAAnB;;AACA,WAAKA,WAAL,CAAiB0C,WAAjB,GAA+B;AAAA,eAAM,MAAI,CAAC1C,WAAL,CAAiB2C,OAAjB,CAAyB,aAAzB,EAAwCC,IAAxC,CAA6C;AAAA,iBAAM,IAAN;AAAA,SAA7C,EAAyDC,KAAzD,CAA+D;AAAA,iBAChG,MAAI,CAAC7C,WAAL,CAAiB2C,OAAjB,CAAyB,eAAzB,EAA0CC,IAA1C,CAA+C,UAAAE,IAAI;AAAA,mBAC/CC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAD+C;AAAA,WAAnD,CADgG;AAAA,SAA/D,EAIlCD,KAJkC,CAI5B;AAAA,iBAAM,KAAN;AAAA,SAJ4B,CAAN;AAAA,OAA/B;AAKH;;;uCAEkB;AACf,aAAO;AACH/C,gBAAQ,EAAE,KAAKA,QADZ;AAEHC,oBAAY,EAAE,KAAKA,YAFhB;AAGHC,mBAAW,EAAE,KAAKA;AAHf,OAAP;AAKH;;;sCAEiB;AACd,aAAO,KAAKiD,gBAAL,EAAP;AACH;;;qCAEqH;AAAA,UAAvGC,eAAuG,uEAArF,KAAqF;AAAA,UAA9EC,cAA8E,uEAA7D,CAA6D;AAAA,UAA1DC,SAA0D,uEAA9C,KAA8C;AAAA,UAAvCC,WAAuC,uEAAzB,KAAyB;AAAA,UAAlBC,QAAkB,uEAAP,KAAO;AAClH,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKmC,cAAxB,EAAwCL,eAAxC,EAAyDC,cAAzD,EAAyEC,SAAzE,EAAoFC,WAApF,CAAP;AAEJ,UAAG,CAAC,KAAKrD,WAAT,EACIsD,QAAQ,CAAC,4BAAD,CAAR;AAEJ,UAAME,WAAW,GAAG,EAApB;AAEA,UAAG,CAAC,KAAKxB,SAAL,CAAekB,eAAf,CAAJ,EACI,OAAOI,QAAQ,CAAC,mCAAD,CAAf;AAEJ,UAAGF,SAAS,IAAI,CAACF,eAAjB,EACI,OAAOI,QAAQ,CAAC,2DAAD,CAAf;AAEJ,UAAGD,WAAW,IAAI,CAACD,SAAnB,EACI,OAAOE,QAAQ,CAAC,wDAAD,CAAf;AAEJ,UAAGJ,eAAH,EACIM,WAAW,CAACC,IAAZ,CAAiB,KAAK5B,OAAL,CAAaK,OAAb,CAAqBgB,eAArB,CAAjB;AAEJ,UAAGE,SAAH,EACII,WAAW,CAACC,IAAZ,CAAiBL,SAAjB;AAEJ,UAAGC,WAAH,EACIG,WAAW,CAACC,IAAZ,CAAiBJ,WAAjB;AAEJ,aAAO,KAAKrD,WAAL,CAAiB2C,OAAjB,0BAA2Ca,WAAW,CAACE,IAAZ,CAAiB,GAAjB,CAA3C,oBAA0EP,cAA1E,GAA4FP,IAA5F,CAAiG,YAAkB;AAAA,YAAjBE,IAAiB,uEAAV,KAAU;AACtH,YAAG,CAACA,IAAJ,EACI,OAAOQ,QAAQ,CAAC,wBAAD,CAAf;AAEJ,YAAG,CAAC,8CAAK,CAACN,OAAN,CAAcF,IAAd,CAAJ,EACI,OAAOQ,QAAQ,CAACR,IAAD,CAAf;AAEJ,eAAOQ,QAAQ,CAAC,IAAD,EACXR,IAAI,CAACa,GAAL,CAAS,UAAAC,KAAK;AAAA,iBAAI,8CAAK,CAACC,QAAN,CAAeD,KAAf,CAAJ;AAAA,SAAd,CADW,CAAf;AAGH,OAVM,EAUJf,KAVI,CAUE,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAAEQ,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAajB,IAA9B,IAAuCgB,GAAxC,CAAZ;AAAA,OAVL,CAAP;AAWH;;;8CAEgE;AAAA,UAAzCE,aAAyC,uEAAzB,KAAyB;AAAA,UAAlBV,QAAkB,uEAAP,KAAO;AAC7D,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK6C,uBAAxB,EAAiDD,aAAjD,CAAP;AAEJ,UAAG,CAAC,KAAKhE,WAAT,EACIsD,QAAQ,CAAC,4BAAD,CAAR;AAEJ,aAAO,KAAKtD,WAAL,CAAiB2C,OAAjB,6BAA8CqB,aAA9C,GAA+DpB,IAA/D,CAAoE,YAAkB;AAAA,YAAjBE,IAAiB,uEAAV,KAAU;AACzF,YAAG,CAACA,IAAJ,EACI,OAAOQ,QAAQ,CAAC,wBAAD,CAAf;AAEJ,YAAG,CAAC,8CAAK,CAACN,OAAN,CAAcF,IAAd,CAAJ,EACI,OAAOQ,QAAQ,CAACR,IAAD,CAAf;AAEJ,eAAOQ,QAAQ,CAAC,IAAD,EACXR,IAAI,CAACa,GAAL,CAAS,UAAAC,KAAK;AAAA,iBAAI,8CAAK,CAACC,QAAN,CAAeD,KAAf,CAAJ;AAAA,SAAd,CADW,CAAf;AAGH,OAVM,EAUJf,KAVI,CAUE,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAAEQ,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAajB,IAA9B,IAAuCgB,GAAxC,CAAZ;AAAA,OAVL,CAAP;AAWH;;;+BAEmC;AAAA,UAA3BI,GAA2B,uEAArB,EAAqB;AAAA,UAAjBrC,OAAiB,uEAAP,KAAO;AAChC,aAAO,IAAI,qDAAJ,CAAa,IAAb,EAAmBqC,GAAnB,EAAwBrC,OAAxB,CAAP;AACH;;;;;;;;;;;;;AA+JiByB,wB,2DAAW,K;;oBACrBA,Q;;;;;iDACO,KAAKlC,aAAL,CAAmB,KAAKsB,WAAxB,C;;;8BAEXY,Q;;uBACoB,KAAKxD,QAAL,CAAc4C,WAAd,E;;;;;uBACI,KAAK3C,YAAL,CAAkB2C,WAAlB,E;;;;8BACP,KAAK1C,W;;;;;;;;uBAAqB,KAAKA,WAAL,CAAiB0C,WAAjB,E;;;;;;;;AAFvC5C,0B;AACAC,8B;AACAC,6B;;iCAHK,I;;;;;;;;;;;;;;;;yBAvIDmE,M,EAAuB;AAAA,UAAfC,MAAe,uEAAN,IAAM;AAC/B,aAAO,CAACA,MAAM,GAAG,IAAH,GAAU,EAAjB,IAAuB,0DAAS,CAACD,MAAD,CAAvC;AACH;;;0BAEYE,G,EAAK;AACd,UAAG,8CAAK,CAACC,SAAN,CAAgBD,GAAhB,CAAH,EACI,OAAOxE,OAAO,CAAC0E,WAAR,CAAoB,CAACF,GAArB,CAAP;AAEJ,UAAG,8CAAK,CAACG,WAAN,CAAkBH,GAAlB,CAAH,EACI,OAAOxE,OAAO,CAAC0E,WAAR,CAAoBF,GAApB,CAAP;AAEJ,UAAG,qEAAOA,GAAP,MAAe,QAAlB,EACI,OAAOxE,OAAO,CAAC4E,QAAR,CAAiBC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAAjB,CAAP;;AAEJ,UAAG,8CAAK,CAACnE,QAAN,CAAemE,GAAf,CAAH,EAAwB;AACpB,YAAI,UAAUO,IAAV,CAAeP,GAAf,CAAJ,EACI,OAAOA,GAAP;AAEJ,YAAG,CAACQ,QAAQ,CAACR,GAAD,CAAZ,EACI,OAAOxE,OAAO,CAAC4E,QAAR,CAAiBJ,GAAjB,CAAP;AACP;;AAED,UAAIS,MAAM,GAAGjF,OAAO,CAAC0E,WAAR,CAAoBF,GAApB,CAAb;;AACA,UAAIS,MAAM,KAAK,OAAf,EAAwB;AACpB,cAAM,IAAIrD,KAAJ,CAAU,qDAAV,CAAN;AACH,OAFD,MAEO;AACH,eAAOqD,MAAP;AACH;AACJ;;;2BAEalE,G,EAAK;AACf,UAAI,8CAAK,CAACmE,KAAN,CAAYnE,GAAZ,CAAJ,EAAsB;AAClBA,WAAG,GAAGA,GAAG,CAACoE,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;AACA,eAAOC,MAAM,CAACC,IAAP,CAAYtE,GAAZ,EAAiB,KAAjB,EAAwBuE,QAAxB,CAAiC,MAAjC,CAAP;AACH,OAHD,MAGO;AACH,cAAM,IAAI1D,KAAJ,CAAU,4CAAV,CAAN;AACH;AACJ;;;6BAEe0C,M,EAAQ;AACpB,UAAI,CAAC,8CAAK,CAACjE,QAAN,CAAeiE,MAAf,CAAL,EAA6B;AACzB,cAAM,IAAI1C,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,aAAO,OAAOwD,MAAM,CAACC,IAAP,CAAYf,MAAZ,EAAoB,MAApB,EAA4BgB,QAA5B,CAAqC,KAArC,CAAd;AACH;;;4BAEcvE,G,EAAK;AAChB,UAAI,8CAAK,CAACmE,KAAN,CAAYnE,GAAZ,CAAJ,EAAsB;AAClB,YAAIwE,GAAG,GAAG,EAAV;AACA,YAAIC,CAAC,GAAG,CAAR;AAAA,YAAWC,CAAC,GAAG1E,GAAG,CAAC2E,MAAnB;;AACA,YAAI3E,GAAG,CAAC4E,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,IAA5B,EAAkC;AAC9BH,WAAC,GAAG,CAAJ;AACH;;AACD,eAAOA,CAAC,GAAGC,CAAX,EAAcD,CAAC,IAAE,CAAjB,EAAoB;AAChB,cAAII,IAAI,GAAGC,QAAQ,CAAC9E,GAAG,CAAC+E,MAAJ,CAAWN,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAnB;AACAD,aAAG,IAAIQ,MAAM,CAACC,YAAP,CAAoBJ,IAApB,CAAP;AACH;;AACD,eAAOL,GAAP;AACH,OAXD,MAWO;AACH,cAAM,IAAI3D,KAAJ,CAAU,4CAAV,CAAN;AACH;AACJ;;;8BAEgB0C,M,EAAQ2B,O,EAAS;AAC9B,UAAI,CAAC,8CAAK,CAAC5F,QAAN,CAAeiE,MAAf,CAAL,EAA6B;AACzB,cAAM,IAAI1C,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,aAAO,OAAOwD,MAAM,CAACC,IAAP,CAAYf,MAAZ,EAAoB,OAApB,EAA6BgB,QAA7B,CAAsC,KAAtC,EAA6CY,MAA7C,CAAoDD,OAApD,EAA6D,GAA7D,CAAd;AACH;;;8BAGgBE,K,EAAO;AACpB,aAAOnG,OAAO,CAACoG,WAAR,CAAoBD,KAApB,EAA2BE,QAA3B,EAAP;AACH;;;gCAEkBF,K,EAAO;AACtB,UAAMG,MAAM,GAAGtG,OAAO,CAACoG,WAAR,CAAoBD,KAApB,CAAf;AACA,UAAMlB,MAAM,GAAGqB,MAAM,CAAChB,QAAP,CAAgB,EAAhB,CAAf;AAEA,aAAOgB,MAAM,CAACC,UAAP,CAAkB,CAAlB,IAAuB,QAAQtB,MAAM,CAACa,MAAP,CAAc,CAAd,CAA/B,GAAkD,OAAOb,MAAhE;AACH;;;4BAEcuB,G,EAAK;AAChB,UAAMnF,GAAG,GAAGrB,OAAO,CAACoG,WAAR,CAAoBI,GAApB,EAAyBC,GAAzB,CAA6B,OAA7B,CAAZ;AACA,aAAO,8CAAK,CAAC9B,WAAN,CAAkB6B,GAAlB,IAAyBnF,GAAzB,GAA+BA,GAAG,CAACiE,QAAJ,CAAa,EAAb,CAAtC;AACH;;;0BAEYjE,G,EAAK;AACd,UAAMmF,GAAG,GAAGxG,OAAO,CAACoG,WAAR,CAAoB/E,GAApB,EAAyBqF,KAAzB,CAA+B,OAA/B,CAAZ;AACA,aAAO,8CAAK,CAAC/B,WAAN,CAAkBtD,GAAlB,IAAyBmF,GAAzB,GAA+BA,GAAG,CAAClB,QAAJ,CAAa,EAAb,CAAtC;AACH;;;kCAE8B;AAAA,UAAZqB,MAAY,uEAAH,CAAG;AAC3B,UAAG,8CAAK,CAAChC,WAAN,CAAkBgC,MAAlB,CAAH,EACI,OAAOA,MAAP;AAEJ,UAAG,8CAAK,CAACtG,QAAN,CAAesG,MAAf,KAA0B,UAAU5B,IAAV,CAAe4B,MAAf,CAA7B,EACI,OAAO,IAAI,oDAAJ,CAAcA,MAAM,CAACxB,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAd,EAAwC,EAAxC,CAAP;AAEJ,aAAO,IAAI,oDAAJ,CAAcwB,MAAM,CAACrB,QAAP,CAAgB,EAAhB,CAAd,EAAmC,EAAnC,CAAP;AACH;;;gCAEiC;AAAA,UAAjBtD,OAAiB,uEAAP,KAAO;AAC9B,UAAG,CAAC,8CAAK,CAAC3B,QAAN,CAAe2B,OAAf,CAAJ,EACI,OAAO,KAAP,CAF0B,CAI9B;;AACA,UAAGA,OAAO,CAAC0D,MAAR,KAAmB,EAAtB,EAA0B;AACtB,YAAI;AACA,iBAAO1F,OAAO,CAACmC,SAAR,CACH,8CAAK,CAACyE,MAAN,CAAaC,qBAAb,CACI,8CAAK,CAACjB,IAAN,CAAWkB,gBAAX,CAA4B9E,OAA5B,CADJ,CACyC;AADzC,WADG,CAAP;AAKH,SAND,CAME,OAAMiC,GAAN,EAAW;AACT,iBAAO,KAAP;AACH;AACJ;;AAED,aAAO,8CAAK,CAAC2C,MAAN,CAAaG,cAAb,CAA4B/E,OAA5B,CAAP;AACH;;;;;;;;;;;;;;AAE0ByB,wB,8DAAW,K;AAC5BuD,uB,GAAU,8CAAK,CAACC,QAAN,CAAeC,eAAf,E;AAEhB,oBAAGzD,QAAH,EACIA,QAAQ,CAAC,IAAD,EAAOuD,OAAP,CAAR;kDAEGA,O;;;;;;;;;;;;;;;;wBA1JU;AACjB,aAAO;AACH3E,eADG,mBACKL,OADL,EACc;AACb,cAAG,CAAC,8CAAK,CAACkD,KAAN,CAAYlD,OAAZ,CAAJ,EACI,OAAOA,OAAP;AAEJ,iBAAO,8CAAK,CAAC4E,MAAN,CAAaC,qBAAb,CACH,8CAAK,CAACjB,IAAN,CAAWkB,gBAAX,CAA4B9E,OAA5B,CADG,CAAP;AAGH,SARE;AASHI,aATG,iBASGJ,OATH,EASY;AACX,cAAG,8CAAK,CAACkD,KAAN,CAAYlD,OAAZ,CAAH,EACI,OAAOA,OAAO,CAACmF,WAAR,GAAsBhC,OAAtB,CAA8B,KAA9B,EAAoC,IAApC,CAAP;AAEJ,iBAAO,8CAAK,CAACS,IAAN,CAAWwB,gBAAX,CACH,8CAAK,CAACR,MAAN,CAAaS,mBAAb,CAAiCrF,OAAjC,CADG,EAELmF,WAFK,EAAP;AAGH,SAhBE;AAiBHlF,sBAjBG,0BAiBY7B,UAjBZ,EAiBwB;AACvB,cAAI;AACA,mBAAO,8CAAK,CAACwG,MAAN,CAAaU,WAAb,CAAyBlH,UAAzB,CAAP;AACH,WAFD,CAEE,iBAAM;AAAE,mBAAO,KAAP;AAAe;AAC5B;AArBE,OAAP;AAuBH;;;;EA9OgC,qD;;6EAAhBJ,O,eACE,sD;;6EADFA,O,eAEE,oD;;6EAFFA,O,wBAGW,+D;;6EAHXA,O,SAIJ,gD;;6EAJIA,O,cAKC,qD;;;AAwXrB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxYD;AACA;AACA;;IAEqBuH,Q;;;AACjB,sBAAwD;AAAA,QAA5CC,OAA4C,uEAAlC,KAAkC;AAAA,QAA3BnD,GAA2B,uEAArB,EAAqB;AAAA,QAAjBrC,OAAiB,uEAAP,KAAO;;AAAA;;AACpD,QAAG,CAACwF,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI5F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK4F,OAAL,GAAeA,OAAf;AACA,SAAKjG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AAEA,SAAKQ,OAAL,GAAeA,OAAf;AACA,SAAKqC,GAAL,GAAWA,GAAX;AAEA,SAAKoD,aAAL,GAAqB,KAArB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,QAAG,KAAKP,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAH,EACI,KAAK2F,QAAL,GAAgB,IAAhB,CADJ,KAEK,KAAK3F,OAAL,GAAe,KAAf;AAEL,SAAKgG,OAAL,CAAa3D,GAAb;AACH;;;;;;;;;;;;;;;;;;;;;;AAEgB4D,uB,2DAAU,E;;uBACF,KAAKT,OAAL,CAAa9D,cAAb,CAA4B,KAAK1B,OAAjC,C;;;AAAfkG,sB;+BACkBA,MAAM,CAACC,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,yBAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAtB;AAAA,iBAAZ,C,gHAAhBC,W;AACFC,yB,GAAYN,MAAM,CAACO,MAAP,CAAc,UAAC1E,KAAD,EAAQ2E,KAAR,EAAkB;AAE9C,sBAAIT,OAAO,CAACU,YAAR,IAAwB,CAACC,MAAM,CAACX,OAAO,CAACU,YAAT,EAAuB,GAAvB,CAAN,CAAkC5D,IAAlC,CAAuChB,KAAK,CAAC4E,YAA7C,CAA7B,EACI,OAAO,KAAP;AAEJ,sBAAME,SAAS,GAAGX,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBJ,KAAhB,EAAuBjG,IAAvB,CAA4B,UAAAsG,UAAU;AAAA,2BACpDlE,IAAI,CAACC,SAAL,CAAeiE,UAAf,KAA8BlE,IAAI,CAACC,SAAL,CAAef,KAAf,CADsB;AAAA,mBAAtC,CAAlB;AAIA,sBAAG8E,SAAH,EACI,OAAO,KAAP;AAEJ,sBAAG,CAAC,KAAI,CAACjB,SAAT,EACI,OAAO,IAAP;AAEJ,yBAAO7D,KAAK,CAACuE,KAAN,GAAc,KAAI,CAACV,SAA1B;AACH,iBAhBiB,C;AAkBlB,oBAAGW,WAAH,EACI,KAAKX,SAAL,GAAiBW,WAAW,CAACD,KAA7B;iDAEGE,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGeP,uB,8DAAU,E;AAAIxE,wB;;AACpC,oBAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,KAAKR,aAAR,EACIwB,aAAa,CAAC,KAAKxB,aAAN,CAAb;;oBAEA,KAAKD,OAAL,CAAarH,W;;;;;sBACP,IAAIyB,KAAJ,CAAU,gCAAV,C;;;oBAEN,KAAKI,O;;;;;sBACC,IAAIJ,KAAJ,CAAU,4CAAV,C;;;AAEV,qBAAKsH,aAAL,GAAqBzF,QAArB;;uBACM,KAAK0F,UAAL,CAAgBlB,OAAhB,C;;;AAEN,qBAAKR,aAAL,GAAqB2B,WAAW,CAAC,YAAM;AACnC,wBAAI,CAACD,UAAL,CAAgBlB,OAAhB,EAAyBlF,IAAzB,CAA8B,UAAAyF,SAAS;AAAA,2BAAIA,SAAS,CAACvH,OAAV,CAAkB,UAAA8C,KAAK,EAAI;AAClE,4BAAI,CAACmF,aAAL,IAAsB,MAAI,CAACA,aAAL,CAAmBnF,KAAnB,CAAtB;AACH,qBAF0C,CAAJ;AAAA,mBAAvC,EAEIf,KAFJ,CAEU,UAAAiB,GAAG,EAAI;AACboF,2BAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CrF,GAA1C;AACH,mBAJD;AAKH,iBAN+B,EAM7B,IAN6B,CAAhC;;;;;;;;;;;;;;;;yCASiB;AACjB,UAAG,CAAC,KAAKwD,aAAT,EACI;AAEJwB,mBAAa,CAAC,KAAKxB,aAAN,CAAb;AACA,WAAKA,aAAL,GAAqB,KAArB;AACA,WAAKyB,aAAL,GAAqB,KAArB;AACH;;;gCAEWK,Q,EAAU;AAClB,aAAO,KAAKC,cAAL,CAAoBD,QAApB,KAAiC,KAAKE,SAAL,CAAeD,cAAf,CAA8BD,QAA9B,CAAxC;AACH;;;4BAEOlF,G,EAAK;AAAA;;AACT,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAKwD,OAAL,GAAe,EAAf;AAEA,WAAKE,KAAL,CAAW9G,OAAX,CAAmB,UAAAyI,IAAI;AAAA,eAAI,OAAO,MAAI,CAACA,IAAD,CAAf;AAAA,OAAvB;AAEArF,SAAG,CAACpD,OAAJ,CAAY,UAAA0I,IAAI,EAAI;AAChB;AACA,YAAIA,IAAI,CAACC,IAAL,CAAUzC,WAAV,OAA4B,aAAhC,EACI;AAEJ,YAAM0C,MAAM,GAAG,IAAI,+CAAJ,CAAW,MAAX,EAAiBF,IAAjB,CAAf;AACA,YAAMG,UAAU,GAAGD,MAAM,CAACE,QAAP,CAAgBC,IAAhB,CAAqBH,MAArB,CAAnB;AANgB,YASZI,IATY,GAYZJ,MAZY,CASZI,IATY;AAAA,YAUZC,gBAVY,GAYZL,MAZY,CAUZK,gBAVY;AAAA,YAWZC,SAXY,GAYZN,MAZY,CAWZM,SAXY;AAchB,cAAI,CAACtC,OAAL,CAAaoC,IAAb,IAAqBH,UAArB;AACA,cAAI,CAACjC,OAAL,CAAaqC,gBAAb,IAAiCJ,UAAjC;AACA,cAAI,CAACjC,OAAL,CAAasC,SAAb,IAA0BL,UAA1B;AAEA,cAAI,CAAChC,eAAL,CAAqBmC,IAArB,IAA6BJ,MAA7B;AACA,cAAI,CAAC/B,eAAL,CAAqBoC,gBAArB,IAAyCL,MAAzC;AACA,cAAI,CAAC/B,eAAL,CAAqBqC,SAArB,IAAkCN,MAAlC;;AAEA,YAAG,CAAC,MAAI,CAACO,WAAL,CAAiBH,IAAjB,CAAJ,EAA4B;AACxB,gBAAI,CAACA,IAAD,CAAJ,GAAaH,UAAb;;AACA,gBAAI,CAAC/B,KAAL,CAAWnE,IAAX,CAAgBqG,IAAhB;AACH;;AAED,YAAG,CAAC,MAAI,CAACG,WAAL,CAAiBF,gBAAjB,CAAJ,EAAwC;AACpC,gBAAI,CAACA,gBAAD,CAAJ,GAAyBJ,UAAzB;;AACA,gBAAI,CAAC/B,KAAL,CAAWnE,IAAX,CAAgBsG,gBAAhB;AACH;;AAED,YAAG,CAAC,MAAI,CAACE,WAAL,CAAiBD,SAAjB,CAAJ,EAAiC;AAC7B,gBAAI,CAACA,SAAD,CAAJ,GAAkBL,UAAlB;;AACA,gBAAI,CAAC/B,KAAL,CAAWnE,IAAX,CAAgBuG,SAAhB;AACH;AACJ,OApCD;AAqCH;;;gCAEWlH,I,EAAM;AAEd,UAAMoH,UAAU,GAAGpH,IAAI,CAAC0C,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAnB;AACA,UAAM2E,SAAS,GAAGrH,IAAI,CAAC0C,SAAL,CAAe,CAAf,CAAlB;AAEA,UAAI,CAAC,KAAKmC,eAAL,CAAqBuC,UAArB,CAAL,EACI,MAAM,IAAIzI,KAAJ,CAAU,qBAAqByI,UAArB,GAAkC,YAA5C,CAAN;AAEJ,UAAME,cAAc,GAAG,KAAKzC,eAAL,CAAqBuC,UAArB,CAAvB;AAEA,aAAO;AACHJ,YAAI,EAAEM,cAAc,CAACN,IADlB;AAEHO,cAAM,EAAE,KAAK1C,eAAL,CAAqBuC,UAArB,EAAiCI,WAAjC,CAA6CH,SAA7C;AAFL,OAAP;AAIH;;;;;;+FAESrC,O;;;;;;;;;;;;AAAS7H,0B,8DAAa,KAAKoH,OAAL,CAAa3G,iB;AAAmB4C,wB,8DAAW,K;;AACvE,oBAAG,6CAAK,CAACuF,UAAN,CAAiB5I,UAAjB,CAAH,EAAiC;AAC7BqD,0BAAQ,GAAGrD,UAAX;AACAA,4BAAU,GAAG,KAAKoH,OAAL,CAAa3G,iBAA1B;AACH;;oBAEG4C,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKmJ,GAAxB,EAA6BzC,OAA7B,EAAsC7H,UAAtC,C;;;;AAGD4B,uB,GAAU,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoC7B,UAApC,C;;uBACU,KAAKoH,OAAL,CAAapG,kBAAb,CAAgCuJ,mBAAhC,CAAoD1C,OAApD,EAA6DjG,OAA7D,C;;;AAApB4I,2B;;uBAC0B,KAAKpD,OAAL,CAAanG,GAAb,CAAiBwJ,IAAjB,CAAsBD,WAAtB,EAAmCxK,UAAnC,C;;;AAA1B0K,iC;;uBACiB,KAAKtD,OAAL,CAAanG,GAAb,CAAiB0J,kBAAjB,CAAoCD,iBAApC,C;;;AAAjBE,wB;;oBAEFA,QAAQ,CAAC/F,M;;;;;kDACFxB,QAAQ,CAAC,oBAAoBoB,IAAI,CAACC,SAAL,CAAekG,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAArB,C;;;kDAEZ,KAAKC,EAAL,CAAQH,iBAAiB,CAACI,gBAA1B,EAA4CzH,QAA5C,C;;;;;kDAEAA,QAAQ,c;;;;;;;;;;;;;;;;;;;+FAIdJ,e;;;;;;;;AAAiBI,wB,8DAAW,K;;oBAC7BA,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAK0J,EAAxB,EAA4B5H,eAA5B,C;;;;;uBAGgB,KAAKmE,OAAL,CAAanG,GAAb,CAAiB8J,WAAjB,CAA6B9H,eAA7B,C;;;AAAjB2H,wB;AAEN,oBAAG,CAACA,QAAQ,CAACE,gBAAb,EACIzH,QAAQ,CAAC,oBAAoBoB,IAAI,CAACC,SAAL,CAAekG,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAArB,CAAR;AAEJ,qBAAKhJ,OAAL,GAAegJ,QAAQ,CAACE,gBAAxB;AACA,qBAAKxD,QAAL,GAAgBsD,QAAQ,CAACtD,QAAzB;AACA,qBAAKC,QAAL,GAAgB,IAAhB;AAEA,qBAAKK,OAAL,CAAagD,QAAQ,CAAC3G,GAAT,CAAa+G,MAA1B;AAEA3H,wBAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;;;;;;;;qBAEG,aAAG6B,QAAH,GAAc5D,QAAd,CAAuB,gBAAvB,C;;;;;kDACQ+B,QAAQ,CAAC,+CAAD,C;;;kDAEZA,QAAQ,c;;;;;;;;;;;;;;;;6BAIgB;AAAA,UAAhCwE,OAAgC,uEAAtB,EAAsB;AAAA,UAAlBxE,QAAkB,uEAAP,KAAO;;AACnC,UAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,gBAAQ,GAAGwE,OAAX;AACAA,eAAO,GAAG,EAAV;AACH;;AAED,UAAG,CAAC,6CAAK,CAACe,UAAN,CAAiBvF,QAAjB,CAAJ,EACI,MAAM,IAAI7B,KAAJ,CAAU,4BAAV,CAAN;AAEJ,UAAMyJ,IAAI,GAAG,IAAb;AAEA,aAAO;AACHC,aADG,mBAC0B;AAAA,cAAvBC,aAAuB,uEAAP,KAAO;;AACzB,cAAG,CAACA,aAAJ,EAAmB;AACfF,gBAAI,CAACG,mBAAL,CAAyBvD,OAAzB,EAAkCxE,QAAlC;;AACA,mBAAO,IAAP;AACH;;AAED4H,cAAI,CAACG,mBAAL,CAAyBvD,OAAzB,EAAkCxE,QAAlC,EAA4CV,IAA5C,CAAiD,YAAM;AACnDwI,yBAAa;AAChB,WAFD,EAEGvI,KAFH,CAES,UAAAiB,GAAG,EAAI;AACZsH,yBAAa,CAACtH,GAAD,CAAb;AACH,WAJD;;AAMA,iBAAO,IAAP;AACH,SAdE;AAeHwH,YAfG,kBAeI;AACHJ,cAAI,CAACK,kBAAL;AACH;AAjBE,OAAP;AAmBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9OL;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAtH,GAAG,EAAI;AAC/B,SAAOA,GAAG,CAAC4F,IAAJ,GAAW,GAAX,GAAiB2B,aAAa,CAACvH,GAAG,CAACwH,MAAJ,IAAc,EAAf,CAAb,CAAgChI,IAAhC,CAAqC,GAArC,CAAjB,GAA6D,GAApE;AACH,CAFD;;AAIA,IAAM+H,aAAa,GAAG,SAAhBA,aAAgB,CAAApB,MAAM,EAAI;AAC5B,SAAOA,MAAM,CAAC1G,GAAP,CAAW;AAAA,QAAG8F,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAAX,CAAP;AACH,CAFD;;AAIA,IAAMkC,YAAY,GAAG,SAAfA,YAAe,CAACzH,GAAD,EAAM0H,MAAN,EAAiB;AAClC,MAAMC,KAAK,GAAG3H,GAAG,CAACP,GAAJ,CAAQ;AAAA,QAAGmG,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAAR,EAA4BxB,MAA5B,CAAmC,UAAAwB,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAAvC,CAAd;AACA,MAAMgC,KAAK,GAAG5H,GAAG,CAACP,GAAJ,CAAQ;AAAA,QAAG8F,IAAH,SAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GAAR,CAAd;AAEA,SAAO,6CAAK,CAACvF,GAAN,CAAU6H,YAAV,CAAuBF,KAAvB,EAA8BC,KAA9B,EAAqCF,MAArC,CAAP;AACH,CALD;;IAOqBI,M;;;AACjB,kBAAYnB,QAAZ,EAAsB3G,GAAtB,EAA2B;AAAA;;AACvB,SAAKmD,OAAL,GAAewD,QAAQ,CAACxD,OAAxB;AACA,SAAKwD,QAAL,GAAgBA,QAAhB;AAEA,SAAK3G,GAAL,GAAWA,GAAX;AACA,SAAK4F,IAAL,GAAY5F,GAAG,CAAC4F,IAAJ,KAAa5F,GAAG,CAAC4F,IAAJ,GAAW5F,GAAG,CAACuF,IAA5B,CAAZ;AAEA,SAAKiC,MAAL,GAAcxH,GAAG,CAACwH,MAAJ,IAAc,EAA5B;AACA,SAAKO,OAAL,GAAe/H,GAAG,CAAC+H,OAAJ,IAAe,EAA9B;AAEA,SAAKlC,gBAAL,GAAwByB,mBAAmB,CAACtH,GAAD,CAA3C;AACA,SAAK8F,SAAL,GAAiB,KAAK3C,OAAL,CAAa6E,IAAb,CAAkB,KAAKnC,gBAAvB,EAAyC,KAAzC,EAAgDpB,KAAhD,CAAsD,CAAtD,EAAyD,CAAzD,CAAjB;AACA,SAAKvH,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AAEA,SAAK8K,cAAL,GAAsB;AAClBC,cAAQ,EAAE,UADQ;AAElBC,eAAS,EAAE,CAFO;AAGlBnH,UAAI,EAAE,KAAKmC,OAAL,CAAa1G,cAAb,CAA4BC,GAHhB;AAGqB;AACvC0L,wBAAkB,EAAE,KAJF,CAIQ;;AAJR,KAAtB;AAMH;;;;gCAEWxJ,I,EAAM;AACd,aAAO6I,YAAY,CAAC,KAAKD,MAAN,EAAc,OAAO5I,IAArB,CAAnB;AACH;;;+BAEiB;AAAA;;AAAA,wCAANyJ,IAAM;AAANA,YAAM;AAAA;;AACd,UAAMT,KAAK,GAAGL,aAAa,CAAC,KAAKC,MAAN,CAA3B;AAEAa,UAAI,CAACzL,OAAL,CAAa,UAAC0L,GAAD,EAAMjE,KAAN,EAAgB;AACzB,YAAIuD,KAAK,CAACvD,KAAD,CAAL,IAAgB,SAApB,EACIgE,IAAI,CAAChE,KAAD,CAAJ,GAAc,KAAI,CAAClB,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BuK,GAA3B,EAAgCxH,OAAhC,CAAwC,OAAxC,EAAiD,IAAjD,CAAd;;AAEJ,YAAI8G,KAAK,CAACvD,KAAD,CAAL,IAAgB,WAApB,EAAiC;AAC7BgE,cAAI,CAAChE,KAAD,CAAJ,GAAcgE,IAAI,CAAChE,KAAD,CAAJ,CAAY5E,GAAZ,CAAgB,UAAA9B,OAAO,EAAI;AACrC,mBAAO,KAAI,CAACwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,EAAoCmD,OAApC,CAA4C,OAA5C,EAAqD,IAArD,CAAP;AACH,WAFa,CAAd;AAGH;AACJ,OATD;AAWA,aAAO;AACHyH,YAAI,EAAE;AAAA,6CAAIC,UAAJ;AAAIA,sBAAJ;AAAA;;AAAA,iBAAmB,KAAI,CAACC,KAAL,YAAI,GAAOb,KAAP,EAAcS,IAAd,SAAuBG,UAAvB,EAAvB;AAAA,SADH;AAEHE,YAAI,EAAE;AAAA,6CAAIF,UAAJ;AAAIA,sBAAJ;AAAA;;AAAA,iBAAmB,KAAI,CAACG,KAAL,YAAI,GAAOf,KAAP,EAAcS,IAAd,SAAuBG,UAAvB,EAAvB;AAAA,SAFH;AAGHI,aAAK,EAAE;AAAA,iBAAmB,KAAI,CAACC,MAAL,YAAI,YAAvB;AAAA;AAHJ,OAAP;AAKH;;;;;;8FAEWjB,K,EAAOS,I;;;;;;;;;;;;AAAMzE,uB,2DAAU,E;AAAIxE,wB,2DAAW,K;;AAC9C,oBAAI,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAJ,EAA+B;AAC3BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;oBAEIxE,Q;;;;;iDACM,KAAKlC,aAAL,CAAmB,KAAKuL,KAAxB,EAA+Bb,KAA/B,EAAsCS,IAAtC,EAA4CzE,OAA5C,C;;;sBAEPgE,KAAK,CAACvG,MAAN,KAAiBgH,IAAI,CAAChH,M;;;;;iDACfjC,QAAQ,CAAC,iCAAD,C;;;oBAEd,KAAKuH,QAAL,CAAchJ,O;;;;;iDACRyB,QAAQ,CAAC,mCAAD,C;;;oBAEd,KAAKuH,QAAL,CAAcrD,Q;;;;;iDACRlE,QAAQ,CAAC,iEAAD,C;;;AAEZ0J,+B,GAAmB,KAAK9I,G,CAAxB8I,e;;oBAEF,CAAC,MAAD,EAAS,MAAT,EAAiBzL,QAAjB,CAA0ByL,eAAe,CAAChG,WAAhB,EAA1B,C;;;;;iDACM1D,QAAQ,2CAAmC0J,eAAnC,wB;;;AAEnBlF,uBAAO,GAAG,+EAAK,KAAKqE,cAAb,EAAgCrE,OAAhC,CAAP;AAEMmF,0B,GAAaV,IAAI,CAAC5I,GAAL,CAAS,UAACqC,KAAD,EAAQuC,KAAR;AAAA,yBAAmB;AAC3CkB,wBAAI,EAAEqC,KAAK,CAACvD,KAAD,CADgC;AAE3CvC,yBAAK,EAALA;AAF2C,mBAAnB;AAAA,iBAAT,C;AAKnB,qBAAKqB,OAAL,CAAapG,kBAAb,CAAgCiM,oBAAhC,CACI,KAAKrC,QAAL,CAAchJ,OADlB,EAEI,KAAKkI,gBAFT,EAGIjC,OAAO,CAACsE,QAHZ,EAIItE,OAAO,CAACuE,SAJZ,EAKIY,UALJ,EAMI,KAAK5F,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B6F,OAAO,CAAC5C,IAAnC,CANJ,EAOI,UAACpB,GAAD,EAAM2G,WAAN,EAAsB;AAClB,sBAAI3G,GAAJ,EACI,OAAOR,QAAQ,CAACQ,GAAD,CAAf;AAEJ,sBAAI,CAAC,6CAAK,CAACmG,WAAN,CAAkBQ,WAAlB,EAA+B,iBAA/B,CAAL,EACI,OAAOnH,QAAQ,CAAC,mBAAD,CAAf;;AAEJ,sBAAI;AACA,wBAAIsI,MAAM,GAAGD,YAAY,CAAC,MAAI,CAACM,OAAN,EAAe,OAAOxB,WAAW,CAAC0C,eAAZ,CAA4B,CAA5B,CAAtB,CAAzB;AAEA,wBAAIvB,MAAM,CAACrG,MAAP,KAAkB,CAAtB,EACIqG,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;AAEJ,2BAAOtI,QAAQ,CAAC,IAAD,EAAOsI,MAAP,CAAf;AACH,mBAPD,CAOE,OAAOwB,EAAP,EAAW;AACT,2BAAO9J,QAAQ,CAAC8J,EAAD,CAAf;AACH;AACJ,iBAxBL;;;;;;;;;;;;;;;;;;;+FA2BQtB,K,EAAOS,I;;;;;;;;;;;;;;;;;;AAAMzE,uB,8DAAU,E;AAAI7H,0B,8DAAa,KAAKoH,OAAL,CAAa3G,iB;AAAmB4C,wB,8DAAW,K;;AAC3F,oBAAI,6CAAK,CAACuF,UAAN,CAAiB5I,UAAjB,CAAJ,EAAkC;AAC9BqD,0BAAQ,GAAGrD,UAAX;AACAA,4BAAU,GAAG,KAAKoH,OAAL,CAAa3G,iBAA1B;AACH;;AAED,oBAAI,6CAAK,CAACmI,UAAN,CAAiBf,OAAjB,CAAJ,EAA+B;AAC3BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;oBAEIxE,Q;;;;;kDACM,KAAKlC,aAAL,CAAmB,KAAKyL,KAAxB,EAA+Bf,KAA/B,EAAsCS,IAAtC,EAA4CzE,OAA5C,EAAqD7H,UAArD,C;;;sBAEP6L,KAAK,CAACvG,MAAN,KAAiBgH,IAAI,CAAChH,M;;;;;sBAChB,IAAI9D,KAAJ,CAAU,iCAAV,C;;;oBAEL,KAAKoJ,QAAL,CAAchJ,O;;;;;kDACRyB,QAAQ,CAAC,mCAAD,C;;;oBAEd,KAAKuH,QAAL,CAAcrD,Q;;;;;kDACRlE,QAAQ,CAAC,iEAAD,C;;;AAEZ0J,+B,GAAmB,KAAK9I,G,CAAxB8I,e;;qBAEH,CAAC,MAAD,EAAS,MAAT,EAAiBzL,QAAjB,CAA0ByL,eAAe,CAAChG,WAAhB,EAA1B,C;;;;;kDACO1D,QAAQ,2CAAmC0J,eAAnC,wB;;;AAEnB;AACA,oBAAI,CAAC,CAAC,SAAD,EAAYzL,QAAZ,CAAqByL,eAAe,CAAChG,WAAhB,EAArB,CAAL,EACIc,OAAO,CAACuE,SAAR,GAAoB,CAApB;AAEJvE,uBAAO,GAAG,+EAAI,KAAKqE,cAAZ,EAA+BrE,OAA/B,CAAP;AAEMmF,0B,GAAaV,IAAI,CAAC5I,GAAL,CAAS,UAACqC,KAAD,EAAQuC,KAAR;AAAA,yBAAmB;AAC3CkB,wBAAI,EAAEqC,KAAK,CAACvD,KAAD,CADgC;AAE3CvC,yBAAK,EAALA;AAF2C,mBAAnB;AAAA,iBAAT,C;;AAMTnE,uB,GAAU5B,UAAU,GAAG,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoC7B,UAApC,CAAH,GAAqD,KAAKoH,OAAL,CAAa1G,cAAb,CAA4BE,M;;uBACjF,KAAKwG,OAAL,CAAapG,kBAAb,CAAgCiM,oBAAhC,CACtB,KAAKrC,QAAL,CAAchJ,OADQ,EAEtB,KAAKkI,gBAFiB,EAGtBjC,OAAO,CAACsE,QAHc,EAItBtE,OAAO,CAACuE,SAJc,EAKtBY,UALsB,EAMtB,KAAK5F,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CANsB,C;;;AAApB4I,2B;;sBASF,CAACA,WAAW,CAAC3F,MAAb,IAAuB,CAAC2F,WAAW,CAAC3F,MAAZ,CAAmBA,M;;;;;kDACpCxB,QAAQ,CAAC,oBAAoBoB,IAAI,CAACC,SAAL,CAAe8F,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAArB,C;;;;uBAGa,KAAKpD,OAAL,CAAanG,GAAb,CAAiBwJ,IAAjB,CAAsBD,WAAW,CAACA,WAAlC,EAA+CxK,UAA/C,C;;;AAA1B0K,iC;;oBAEDA,iBAAiB,CAACX,S;;;;;oBACd/J,U;;;;;kDACMqD,QAAQ,CAAC,qCAAD,C;;;kDAEZA,QAAQ,CAAC,8BAAD,C;;;;uBAGK,KAAK+D,OAAL,CAAanG,GAAb,CAAiB0J,kBAAjB,CAAoCD,iBAApC,C;;;AAAlB0C,yB;;oBAEDA,SAAS,CAACvI,M;;;;;kDACJxB,QAAQ,CAAC,oBAAoBoB,IAAI,CAACC,SAAL,CAAe0I,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAArB,C;;;oBAEdvF,OAAO,CAACwE,kB;;;;;kDACFhJ,QAAQ,CAAC,IAAD,EAAOqH,iBAAiB,CAAC2C,IAAzB,C;;;AAEbC,2B;;;;;yFAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOhF,iCAAP,8DAAe,CAAf;;AAAA,kCACZA,KAAK,IAAI,EADG;AAAA;AAAA;AAAA;;AAAA,8DAELjF,QAAQ,CAAC;AACZ6F,mCAAK,EAAE,qCADK;AAEZsB,yCAAW,EAAEE;AAFD,6BAAD,CAFH;;AAAA;AAAA;AAAA,mCAQK,MAAI,CAACtD,OAAL,CAAanG,GAAb,CAAiBsM,kBAAjB,CAAoC7C,iBAAiB,CAAC2C,IAAtD,CARL;;AAAA;AAQV1B,kCARU;;AAAA,gCAUXxJ,MAAM,CAACqL,IAAP,CAAY7B,MAAZ,EAAoBrG,MAVT;AAAA;AAAA;AAAA;;AAAA,8DAWLmI,UAAU,CAAC,YAAM;AACpBH,yCAAW,CAAChF,KAAK,GAAG,CAAT,CAAX;AACH,6BAFgB,EAEd,IAFc,CAXL;;AAAA;AAAA,kCAgBZqD,MAAM,CAAC9G,MAAP,IAAiB8G,MAAM,CAAC9G,MAAP,IAAiB,QAhBtB;AAAA;AAAA;AAAA;;AAAA,8DAiBLxB,QAAQ,CAAC;AACZ6F,mCAAK,EAAE,MAAI,CAAC9B,OAAL,CAAasG,MAAb,CAAoB/B,MAAM,CAACgC,UAA3B,CADK;AAEZnD,yCAAW,EAAEE,iBAFD;AAGZiB,oCAAM,EAANA;AAHY,6BAAD,CAjBH;;AAAA;AAAA,gCAwBX,6CAAK,CAAC3B,WAAN,CAAkB2B,MAAlB,EAA0B,gBAA1B,CAxBW;AAAA;AAAA;AAAA;;AAAA,8DAyBLtI,QAAQ,CAAC;AACZ6F,mCAAK,EAAE,wBAAwBzE,IAAI,CAACC,SAAL,CAAeiH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CADnB;AAEZnB,yCAAW,EAAEE,iBAFD;AAGZiB,oCAAM,EAANA;AAHY,6BAAD,CAzBH;;AAAA;AAgCZiC,mCAhCY,GAgCFlC,YAAY,CAAC,MAAI,CAACM,OAAN,EAAe,OAAOL,MAAM,CAACkC,cAAP,CAAsB,CAAtB,CAAtB,CAhCV;AAkChB,gCAAID,OAAO,CAACtI,MAAR,KAAmB,CAAvB,EACIsI,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAjB;AAnCY,8DAqCTvK,QAAQ,CAAC,IAAD,EAAOuK,OAAP,CArCC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mB;;kCAAdN,W;;;;;AAwCNA,2BAAW;;;;;;;kDAEJjK,QAAQ,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIVwE,uB,8DAAU,E;AAAIxE,wB,8DAAW,K;;AAClC,oBAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;oBAEG,6CAAK,CAACe,UAAN,CAAiBvF,QAAjB,C;;;;;sBACM,IAAI7B,KAAJ,CAAU,kCAAV,C;;;oBAEL,KAAKoJ,QAAL,CAAchJ,O;;;;;kDACRyB,QAAQ,CAAC,mCAAD,C;;;sBAEf,KAAKY,GAAL,CAASuF,IAAT,CAAczC,WAAd,OAAgC,O;;;;;kDACzB1D,QAAQ,CAAC,wCAAD,C;;;oBAEd,KAAK+D,OAAL,CAAarH,W;;;;;kDACPsD,QAAQ,CAAC,4BAAD,C;;;AAEfyK,wB,GAAW,K;AACXtG,yB,GAAY,K;AACVtE,8B,GAAiB,IAAI6K,IAAJ,GAAWC,OAAX,E;;AAEjBC,yB;;;;;yFAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEW,MAAI,CAAC7G,OAAL,CAAa9D,cAAb,CAA4B,MAAI,CAACsH,QAAL,CAAchJ,OAA1C,EAAmDsB,cAAnD,EAAmE,MAAI,CAAC2G,IAAxE,CAFX;;AAAA;AAEJ/B,kCAFI;AAAA,2CAGcA,MAAM,CAACC,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,qCAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAtB;AAAA,6BAAZ,CAHd,gHAGFC,WAHE;AAIJC,qCAJI,GAIQN,MAAM,CAACO,MAAP,CAAc,UAAC1E,KAAD,EAAQ2E,KAAR,EAAkB;AAE9C,kCAAIT,OAAO,CAACU,YAAR,IAAwB,CAACC,MAAM,CAACX,OAAO,CAACU,YAAT,EAAuB,GAAvB,CAAN,CAAkC5D,IAAlC,CAAuChB,KAAK,CAAC4E,YAA7C,CAA7B,EACI,OAAO,KAAP;AAEJ,kCAAME,SAAS,GAAGX,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBJ,KAAhB,EAAuBjG,IAAvB,CAA4B,UAAAsG,UAAU;AAAA,uCACpDlE,IAAI,CAACC,SAAL,CAAeiE,UAAf,KAA8BlE,IAAI,CAACC,SAAL,CAAef,KAAf,CADsB;AAAA,+BAAtC,CAAlB;AAIA,kCAAI8E,SAAJ,EACI,OAAO,KAAP;AAEJ,kCAAI,CAACjB,SAAL,EACI,OAAO,IAAP;AAEJ,qCAAO7D,KAAK,CAACuE,KAAN,GAAcV,SAArB;AACH,6BAhBiB,CAJR;AAsBV,gCAAIW,WAAJ,EACIX,SAAS,GAAGW,WAAW,CAACD,KAAxB;AAvBM,8DAyBHE,SAzBG;;AAAA;AAAA;AAAA;AAAA,8DA2BH8F,OAAO,CAACC,MAAR,cA3BG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mB;;kCAAZF,S;;;;;AA+BAG,4B,GAAe,SAAfA,YAAe,GAAM;AACvB,sBAAIN,QAAJ,EACIjF,aAAa,CAACiF,QAAD,CAAb;AAEJA,0BAAQ,GAAG9E,WAAW,CAAC,YAAM;AACzBiF,6BAAS,GAAGtL,IAAZ,CAAiB,UAAAmF,MAAM;AAAA,6BAAIA,MAAM,CAACjH,OAAP,CAAe,UAAA8C,KAAK,EAAI;AAC/CN,gCAAQ,CAAC,IAAD,EAAO,6CAAK,CAACgL,UAAN,CAAiB1K,KAAjB,EAAwB,MAAI,CAACM,GAA7B,CAAP,CAAR;AACH,uBAF0B,CAAJ;AAAA,qBAAvB,EAEIrB,KAFJ,CAEU,UAAAiB,GAAG;AAAA,6BAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,qBAFb;AAGH,mBAJqB,EAInB,IAJmB,CAAtB;AAKH,iB;;;uBAEKoK,SAAS,E;;;AACfG,4BAAY;kDAEL;AACHlD,uBAAK,EAAEkD,YAAY,EADhB;AAEH/C,sBAAI,EAAE,gBAAM;AACR,wBAAI,CAACyC,QAAL,EACI;AAEJjF,iCAAa,CAACiF,QAAD,CAAb;AACAA,4BAAQ,GAAG,KAAX;AACH;AARE,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClTf;AACA;;IAEqB5N,Y;;;AACjB,wBAAYoO,IAAZ,EAAmG;AAAA,QAAjFC,OAAiF,uEAAvE,KAAuE;AAAA,QAAhEC,IAAgE,uEAAzD,KAAyD;AAAA,QAAlDC,QAAkD,uEAAvC,KAAuC;AAAA,QAAhCC,OAAgC,uEAAtB,EAAsB;AAAA,QAAlBC,UAAkB,uEAAL,GAAK;;AAAA;;AAC/F,QAAG,CAAC,6CAAK,CAACC,UAAN,CAAiBN,IAAjB,CAAJ,EACI,MAAM,IAAI9M,KAAJ,CAAU,sCAAV,CAAN;AAEJ,QAAGqN,KAAK,CAACN,OAAD,CAAL,IAAkBA,OAAO,GAAG,CAA/B,EACI,MAAM,IAAI/M,KAAJ,CAAU,mCAAV,CAAN;AAEJ,QAAG,CAAC,6CAAK,CAACsN,QAAN,CAAeJ,OAAf,CAAJ,EACI,MAAM,IAAIlN,KAAJ,CAAU,iCAAV,CAAN;AAEJ8M,QAAI,GAAGA,IAAI,CAACvJ,OAAL,CAAa,MAAb,EAAoB,EAApB,CAAP;AAEA,SAAKuJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKI,QAAL,GAAgB,4CAAK,CAACC,MAAN,CAAa;AACzBC,aAAO,EAAEX,IADgB;AAEzBC,aAAO,EAAEA,OAFgB;AAGzBG,aAAO,EAAEA,OAHgB;AAIzBQ,UAAI,EAAEV,IAAI,IAAI;AACVA,YAAI,EAAJA,IADU;AAEVC,gBAAQ,EAARA;AAFU;AAJW,KAAb,CAAhB;AASH;;;;oCAE+B;AAAA,UAAlBE,UAAkB,uEAAL,GAAK;AAC5B,WAAKA,UAAL,GAAkBA,UAAlB;AACH;;;;;;;;;;;;;AAEiBA,0B,2DAAa,KAAKA,U;iDACzB,KAAKjM,OAAL,CAAaiM,UAAb,EAAyBhM,IAAzB,CAA8B,UAAAE,IAAI,EAAI;AACzC,yBAAO,6CAAK,CAACsM,aAAN,CAAoBtM,IAApB,EAA0B,SAA1B,EAAqC,cAArC,CAAP;AACH,iBAFM,EAEJD,KAFI,CAEE;AAAA,yBAAM,KAAN;AAAA,iBAFF,C;;;;;;;;;;;;;;;;4BAKHwM,G,EAAmC;AAAA,UAA9BC,OAA8B,uEAApB,EAAoB;AAAA,UAAhB5F,MAAgB,uEAAP,KAAO;AACvCA,YAAM,GAAGA,MAAM,CAAC1C,WAAP,EAAT;AAEA,aAAO,KAAKgI,QAAL,CAAcrM,OAAd,CAAsB;AACzBG,YAAI,EAAE4G,MAAM,IAAI,MAAV,IAAoB4F,OADD;AAEzBjF,cAAM,EAAEX,MAAM,IAAG,KAAT,IAAkB4F,OAFD;AAGzBD,WAAG,EAAHA,GAHyB;AAIzB3F,cAAM,EAANA;AAJyB,OAAtB,EAKJ9G,IALI,CAKC;AAAA,YAAGE,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAd;AAAA,OALD,CAAP;AAMH;;;;;;;AACJ,C;;;;;;;;;;;;;;;;;ACtDD;AAEe;AACX3C,cAAY,EAAZ,qDAAYA;AADD,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;IAEqBoP,kB;;;AACjB,gCAA6B;AAAA,QAAjBlI,OAAiB,uEAAP,KAAO;;AAAA;;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI5F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK4F,OAAL,GAAeA,OAAf;AACA,SAAKjG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;;;8BAEyF;AAAA,UAAlFmO,EAAkF,uEAA7E,KAA6E;AAAA,UAAtEhJ,MAAsE,uEAA7D,CAA6D;AAAA,UAA1DtB,IAA0D,uEAAnD,KAAKmC,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACtF,UAAG,6CAAK,CAACuF,UAAN,CAAiB3D,IAAjB,CAAH,EAA2B;AACvB5B,gBAAQ,GAAG4B,IAAX;AACAA,YAAI,GAAG,KAAKmC,OAAL,CAAa1G,cAAb,CAA4BC,GAAnC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKqO,OAAxB,EAAiCD,EAAjC,EAAqChJ,MAArC,EAA6CtB,IAA7C,CAAP;AAEJ,UAAG,CAAC,KAAKmC,OAAL,CAAarF,SAAb,CAAuBwN,EAAvB,CAAJ,EACI,OAAOlM,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOlD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBkD,IAAvB,CAAJ,EACI,OAAO5B,QAAQ,CAAC,iCAAD,CAAf;AAEJkM,QAAE,GAAG,KAAKnI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BuN,EAA3B,CAAL;AACAtK,UAAI,GAAG,KAAKmC,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BiD,IAA3B,CAAP;AAEA,UAAGsK,EAAE,KAAKtK,IAAV,EACI,OAAO5B,QAAQ,CAAC,yCAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,0BAA9B,EAA0D;AACtD+M,kBAAU,EAAEF,EAD0C;AAEtDG,qBAAa,EAAEzK,IAFuC;AAGtDsB,cAAM,EAAEd,QAAQ,CAACc,MAAD;AAHsC,OAA1D,EAIG,MAJH,EAIW5D,IAJX,CAIgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OATD,EASG5H,KATH,CASS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OATZ;AAUH;;;gCAE4G;AAAA,UAAnG0L,EAAmG,uEAA9F,KAA8F;AAAA,UAAvFhJ,MAAuF,uEAA9E,CAA8E;AAAA,UAA3EoJ,OAA2E,uEAAjE,KAAiE;AAAA,UAA1D1K,IAA0D,uEAAnD,KAAKmC,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACzG,UAAG,6CAAK,CAACuF,UAAN,CAAiB3D,IAAjB,CAAH,EAA2B;AACvB5B,gBAAQ,GAAG4B,IAAX;AACAA,YAAI,GAAG,KAAKmC,OAAL,CAAa1G,cAAb,CAA4BC,GAAnC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKyO,SAAxB,EAAmCL,EAAnC,EAAuChJ,MAAvC,EAA+CoJ,OAA/C,EAAwD1K,IAAxD,CAAP;AAEJ,UAAG,CAAC,KAAKmC,OAAL,CAAarF,SAAb,CAAuBwN,EAAvB,CAAJ,EACI,OAAOlM,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOlD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAe0P,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACrK,MAAxC,EACI,OAAOjC,QAAQ,CAAC,2BAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBkD,IAAvB,CAAJ,EACI,OAAO5B,QAAQ,CAAC,iCAAD,CAAf;AAEJkM,QAAE,GAAG,KAAKnI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BuN,EAA3B,CAAL;AACAI,aAAO,GAAG,KAAKvI,OAAL,CAAa5C,QAAb,CAAsBmL,OAAtB,CAAV;AACA1K,UAAI,GAAG,KAAKmC,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BiD,IAA3B,CAAP;AAEA,UAAGsK,EAAE,KAAKtK,IAAV,EACI,OAAO5B,QAAQ,CAAC,4CAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClD+M,kBAAU,EAAEF,EADsC;AAElDG,qBAAa,EAAEzK,IAFmC;AAGlD4K,kBAAU,EAAEF,OAHsC;AAIlDpJ,cAAM,EAAEd,QAAQ,CAACc,MAAD;AAJkC,OAAtD,EAKG,MALH,EAKW5D,IALX,CAKgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAVD,EAUG5H,KAVH,CAUS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAVZ;AAWH;;;oCAE4H;AAAA,UAA/GiM,aAA+G,uEAA/F,KAA+F;AAAA,UAAxFH,OAAwF,uEAA9E,KAA8E;AAAA,UAAvEpJ,MAAuE,uEAA9D,CAA8D;AAAA,UAA3DwJ,KAA2D,uEAAnD,KAAK3I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACzH,UAAG,6CAAK,CAACuF,UAAN,CAAiBmH,KAAjB,CAAH,EAA4B;AACxB1M,gBAAQ,GAAG0M,KAAX;AACAA,aAAK,GAAG,KAAK3I,OAAL,CAAa1G,cAAb,CAA4BC,GAApC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK6O,aAAxB,EAAuCF,aAAvC,EAAsDH,OAAtD,EAA+DpJ,MAA/D,EAAuEwJ,KAAvE,CAAP;AAEJ,UAAG,CAAC,KAAK3I,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,iCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAe0P,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACrK,MAAxC,EACI,OAAOjC,QAAQ,CAAC,2BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOlD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBgO,KAAvB,CAAJ,EACI,OAAO1M,QAAQ,CAAC,gCAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,8BAA9B,EAA8D;AAC1D+M,kBAAU,EAAE,KAAKrI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CAD8C;AAE1DJ,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B+N,KAA3B,CAF2C;AAG1DF,kBAAU,EAAE,KAAKzI,OAAL,CAAa5C,QAAb,CAAsBmL,OAAtB,CAH8C;AAI1DpJ,cAAM,EAAEd,QAAQ,CAACc,MAAD;AAJ0C,OAA9D,EAKG,MALH,EAKW5D,IALX,CAKgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAVD,EAUG5H,KAVH,CAUS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAVZ;AAWH;;;oCAGD;AAAA,UADc0C,MACd,uEADuB,CACvB;AAAA,UAD0B0J,QAC1B,uEADqC,CACrC;AAAA,UADwCC,QACxC,uEADmD,WACnD;AAAA,UADgEtO,OAChE,uEAD0E,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GACtG;AAAA,UAD2G0C,QAC3G,uEADsH,KACtH;;AACI,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,6CAAK,CAACiI,UAAN,CAAiBqH,QAAjB,CAAH,EAA+B;AAC3B5M,gBAAQ,GAAG4M,QAAX;AACAA,gBAAQ,GAAG,CAAX;AACH;;AAED,UAAG,6CAAK,CAACrH,UAAN,CAAiBsH,QAAjB,CAAH,EAA+B;AAC3B7M,gBAAQ,GAAG6M,QAAX;AACAA,gBAAQ,GAAG,WAAX;AACH;;AAED,UAAG,CAAC7M,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKgP,aAAxB,EAAuC5J,MAAvC,EAA+C0J,QAA/C,EAAyDC,QAAzD,EAAmEtO,OAAnE,CAAP;AAEJ,UAAG,CAAC,CAAE,WAAF,EAAe,QAAf,EAA0BN,QAA1B,CAAmC4O,QAAnC,CAAJ,EACI,OAAO7M,QAAQ,CAAC,6DAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAOlD,QAAQ,CAAC,yBAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB0O,QAAhB,CAAD,IAA8BA,QAAQ,GAAG,CAA5C,EACI,OAAO5M,QAAQ,CAAC,8CAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CADmC;AAElDwO,sBAAc,EAAE3K,QAAQ,CAACc,MAAD,CAF0B;AAGlD8J,uBAAe,EAAE5K,QAAQ,CAACwK,QAAD,CAHyB;AAIlDC,gBAAQ,EAAEA;AAJwC,OAAtD,EAKG,MALH,EAKWvN,IALX,CAKgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAVD,EAUG5H,KAVH,CAUS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAVZ;AAWH;;;sCAGD;AAAA,UADgBqM,QAChB,uEAD2B,WAC3B;AAAA,UADwCtO,OACxC,uEADkD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAC9E;AAAA,UADmF0C,QACnF,uEAD8F,KAC9F;;AACI,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,6CAAK,CAACiI,UAAN,CAAiBsH,QAAjB,CAAH,EAA+B;AAC3B7M,gBAAQ,GAAG6M,QAAX;AACAA,gBAAQ,GAAG,WAAX;AACH;;AAED,UAAG,CAAC7M,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKmP,eAAxB,EAAyCJ,QAAzC,EAAmDtO,OAAnD,CAAP;AAEJ,UAAG,CAAC,CAAE,WAAF,EAAe,QAAf,EAA0BN,QAA1B,CAAmC4O,QAAnC,CAAJ,EACI,OAAO7M,QAAQ,CAAC,6DAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CADqC;AAEpDsO,gBAAQ,EAAEA;AAF0C,OAAxD,EAGG,MAHH,EAGWvN,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OARD,EAQG5H,KARH,CAQS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OARZ;AASH;;;2CAEiF;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC9E,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKoP,oBAAxB,EAA8C3O,OAA9C,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B;AADqC,OAAxD,EAEG,MAFH,EAEWe,IAFX,CAEgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAPD,EAOG5H,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;iCAEoF;AAAA,UAA1EjC,OAA0E,uEAAhE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAoC;AAAA,UAA/ByO,GAA+B,uEAAzB,KAAyB;AAAA,UAAlB/L,QAAkB,uEAAP,KAAO;;AACjF,UAAG,6CAAK,CAACuL,UAAN,CAAiBhN,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAG+L,GAAG,IAAI,KAAlB;AACAA,WAAG,GAAGxN,OAAN;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKqP,UAAxB,EAAoC5O,OAApC,EAA6CwN,GAA7C,CAAP;AAEJ,UAAG,CAAC,KAAKhI,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACuL,UAAN,CAAiBQ,GAAjB,CAAJ,EACI,OAAO/L,QAAQ,CAAC,sBAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CADmC;AAElDwN,WAAG,EAAE,KAAKhI,OAAL,CAAa5C,QAAb,CAAsB4K,GAAtB;AAF6C,OAAtD,EAGG,MAHH,EAGWzM,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OARD,EAQG5H,KARH,CAQS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OARZ;AASH;;;2BAEkF;AAAA;;AAAA,UAA9E4M,KAA8E,uEAAtE,EAAsE;AAAA,UAAlEC,YAAkE,uEAAnD,KAAKtJ,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC/E,UAAG,6CAAK,CAACuF,UAAN,CAAiB8H,YAAjB,CAAH,EAAmC;AAC/BrN,gBAAQ,GAAGqN,YAAX;AACAA,oBAAY,GAAG,KAAKtJ,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKwP,IAAxB,EAA8BF,KAA9B,EAAqCC,YAArC,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAAC5B,QAAN,CAAe2B,KAAf,CAAD,IAA0B,CAACtO,MAAM,CAACqL,IAAP,CAAYiD,KAAZ,EAAmBnL,MAAjD,EACI,OAAOjC,QAAQ,CAAC,+BAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuB2O,YAAvB,CAAJ,EACI,OAAOrN,QAAQ,CAAC,gCAAD,CAAf;AAEJ,UAAIuN,OAAO,GAAG,KAAd;AAEAH,WAAK,GAAGtO,MAAM,CAAC0O,OAAP,CAAeJ,KAAf,EAAsB/M,GAAtB,CAA0B,gBAA8B;AAAA;AAAA,YAA3BoN,SAA2B;AAAA,YAAhBC,SAAgB;;AAC5D,YAAGH,OAAH,EACI;;AAEJ,YAAG,CAAC,KAAI,CAACxJ,OAAL,CAAarF,SAAb,CAAuB+O,SAAvB,CAAJ,EAAuC;AACnCzN,kBAAQ,CAAC,kCAAkCyN,SAAnC,CAAR;AACA,iBAAOF,OAAO,GAAG,IAAjB;AACH;;AAED,YAAG,CAAC,6CAAK,CAACrP,SAAN,CAAgBwP,SAAhB,CAAD,IAA+BA,SAAS,IAAI,CAA/C,EAAkD;AAC9C1N,kBAAQ,CAAC,yCAAyCyN,SAA1C,CAAR;AACA,iBAAOF,OAAO,GAAG,IAAjB;AACH;;AAED,eAAO;AACHI,sBAAY,EAAE,KAAI,CAAC5J,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8O,SAA3B,CADX;AAEHG,oBAAU,EAAExL,QAAQ,CAACsL,SAAD;AAFjB,SAAP;AAIH,OAlBO,CAAR;AAoBA,UAAGH,OAAH,EACI;AAEJ,WAAKxJ,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0O,YAA3B,CADwC;AAEvDD,aAAK,EAALA;AAFuD,OAA3D,EAGG,MAHH,EAGW9N,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OARD,EAQG5H,KARH,CAQS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OARZ;AASH;;;0CAEoG;AAAA,UAAjFgE,OAAiF,uEAAvE,EAAuE;AAAA,UAAnEiI,aAAmE,uEAAnD,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACjG,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKoJ,mBAAxB,EAA6C1C,OAA7C,EAAsDiI,aAAtD,CAAP;AAP6F,yBAiB7FjI,OAjB6F,CAU7F5D,GAV6F;AAAA,UAU7FA,GAV6F,6BAUvF,KAVuF;AAAA,8BAiB7F4D,OAjB6F,CAW7FP,QAX6F;AAAA,UAW7FA,QAX6F,kCAWlF,KAXkF;AAAA,8BAiB7FO,OAjB6F,CAY7FsE,QAZ6F;AAAA,UAY7FA,QAZ6F,kCAYlF,UAZkF;AAAA,+BAiB7FtE,OAjB6F,CAa7FuE,SAb6F;AAAA,UAa7FA,SAb6F,mCAajF,CAbiF;AAAA,kCAiB7FvE,OAjB6F,CAc7FqJ,iBAd6F;AAAA,UAc7FA,iBAd6F,sCAczE,CAdyE;AAAA,gCAiB7FrJ,OAjB6F,CAe7FmF,UAf6F;AAAA,UAe7FA,UAf6F,oCAehF,EAfgF;AAAA,0BAiB7FnF,OAjB6F,CAgB7FgC,IAhB6F;AAAA,UAgB7FA,IAhB6F,8BAgBtF,EAhBsF;;AAoBjG,UAAG5F,GAAG,IAAI,6CAAK,CAAChE,QAAN,CAAegE,GAAf,CAAV,EAA+B;AAC3B,YAAI;AACAA,aAAG,GAAGQ,IAAI,CAAC0M,KAAL,CAAWlN,GAAX,CAAN;AACH,SAFD,CAEE,gBAAK;AACH,iBAAOZ,QAAQ,CAAC,8BAAD,CAAf;AACH;AACJ;;AAED,UAAG,CAAC,6CAAK,CAACN,OAAN,CAAckB,GAAd,CAAJ,EACI,OAAOZ,QAAQ,CAAC,8BAAD,CAAf;AAGJ,UAAM+N,OAAO,GAAGnN,GAAG,CAAC5B,IAAJ,CAAS,UAAAkH,IAAI,EAAI;AAC7B,eAAOA,IAAI,CAACC,IAAL,IAAa,aAAb,IAA8BD,IAAI,CAAC6H,OAA1C;AACH,OAFe,CAAhB;AAIA,UAAG,CAAC,6CAAK,CAACtM,KAAN,CAAYwC,QAAZ,CAAJ,EACI,OAAOjE,QAAQ,CAAC,mCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB4K,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAO9I,QAAQ,CAAC,mCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB6K,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAO/I,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG+N,OAAO,IAAIhF,SAAS,IAAI,CAA3B,EACI,OAAO/I,QAAQ,CAAC,wEAAD,CAAf;AAEJ,UAAG,CAAC+N,OAAD,IAAYhF,SAAS,GAAG,CAA3B,EACI,OAAO/I,QAAQ,CAAC,2DAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB2P,iBAAhB,CAAD,IAAuCA,iBAAiB,GAAG,CAA3D,IAAgEA,iBAAiB,GAAG,GAAvF,EACI,OAAO7N,QAAQ,CAAC,4CAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACN,OAAN,CAAciK,UAAd,CAAJ,EACI,OAAO3J,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,iCAAD,CAAf;AAEJ,UAAIgO,iBAAiB,GAAGpN,GAAG,CAACqN,IAAJ,CACpB,UAACC,EAAD,EAAQ;AACJ,eAAOA,EAAE,CAAC/H,IAAH,KAAY,aAAnB;AACH,OAHmB,CAAxB;;AAMA,UAAG,OAAO6H,iBAAP,KAA6B,WAA7B,IAA4CA,iBAA/C,EAAkE;AAC9D,YAAMG,QAAQ,GAAG,IAAI,6CAAaC,QAAjB,EAAjB;AACA,YAAM5F,KAAK,GAAG,EAAd;AACA,YAAMzJ,MAAM,GAAG,EAAf;AACAiP,yBAAiB,GAAGA,iBAAiB,CAAC5F,MAAtC;AAEA,YAAGuB,UAAU,CAAC1H,MAAX,IAAqB+L,iBAAiB,CAAC/L,MAA1C,EACI,OAAOjC,QAAQ,6BAAsBgO,iBAAiB,CAAC/L,MAAxC,kBAAsD0H,UAAU,CAAC1H,MAAjE,eAAf;;AAEJ,aAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG4H,UAAU,CAAC1H,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,cAAIoE,IAAI,GAAG6H,iBAAiB,CAACjM,CAAD,CAAjB,CAAqBoE,IAAhC;AACA,cAAIzD,KAAK,GAAGiH,UAAU,CAAC5H,CAAD,CAAtB;AAEA,cAAG,CAACoE,IAAD,IAAS,CAAC,6CAAK,CAACvJ,QAAN,CAAeuJ,IAAf,CAAV,IAAkC,CAACA,IAAI,CAAClE,MAA3C,EACI,OAAOjC,QAAQ,CAAC,sCAAsCmG,IAAvC,CAAf;AAEJ,cAAGA,IAAI,IAAI,SAAX,EACIzD,KAAK,GAAG,KAAKqB,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B+D,KAA3B,EAAkChB,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAR;AAEJ8G,eAAK,CAACrI,IAAN,CAAWgG,IAAX;AACApH,gBAAM,CAACoB,IAAP,CAAYuC,KAAZ;AACH;;AAED,YAAI;AACAiH,oBAAU,GAAGwE,QAAQ,CAACE,MAAT,CAAgB7F,KAAhB,EAAuBzJ,MAAvB,EAA+B2C,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAAb;AACH,SAFD,CAEE,OAAOoI,EAAP,EAAW;AACT,iBAAO9J,QAAQ,CAAC8J,EAAD,CAAf;AACH;AACJ,OA5BD,MA4BOH,UAAU,GAAG,EAAb;;AAEP,WAAK5F,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CADoC;AAEnD6B,iBAAS,EAAElM,QAAQ,CAAC0G,QAAD,CAFgC;AAGnDyF,kBAAU,EAAEnM,QAAQ,CAAC2G,SAAD,CAH+B;AAInDyF,qCAA6B,EAAEX,iBAJoB;AAKnDjN,WAAG,EAAEQ,IAAI,CAACC,SAAL,CAAeT,GAAf,CAL8C;AAMnDqD,gBAAQ,EAARA,QANmD;AAOnDwK,iBAAS,EAAE9E,UAPwC;AAQnDnD,YAAI,EAAJA;AARmD,OAAvD,EASG,MATH,EASWlH,IATX,CASgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAdD,EAcG5H,KAdH,CAcS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAdZ;AAeH;;;yCAGGZ,e,EACA6G,gB,EAMF;AAAA;;AAAA,UALEqC,QAKF,uEALa,UAKb;AAAA,UAJEC,SAIF,uEAJc,CAId;AAAA,UAHEY,UAGF,uEAHe,EAGf;AAAA,UAFE8C,aAEF,uEAFkB,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAE9C;AAAA,UADE0C,QACF,uEADa,KACb;;AACE,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,6CAAK,CAACiI,UAAN,CAAiBoE,UAAjB,CAAH,EAAiC;AAC7B3J,gBAAQ,GAAG2J,UAAX;AACAA,kBAAU,GAAG,EAAb;AACH;;AAED,UAAG,6CAAK,CAACpE,UAAN,CAAiBwD,SAAjB,CAAH,EAAgC;AAC5B/I,gBAAQ,GAAG+I,SAAX;AACAA,iBAAS,GAAG,CAAZ;AACH;;AAED,UAAG,6CAAK,CAACxD,UAAN,CAAiBuD,QAAjB,CAAH,EAA+B;AAC3B9I,gBAAQ,GAAG8I,QAAX;AACAA,gBAAQ,GAAG,UAAX;AACH;;AAED,UAAG,CAAC9I,QAAJ,EAAc;AACV,eAAO,KAAKlC,aAAL,CACH,KAAK8L,oBADF,EAEHhK,eAFG,EAGH6G,gBAHG,EAIHqC,QAJG,EAKHC,SALG,EAMHY,UANG,EAOH8C,aAPG,CAAP;AASH;;AAED,UAAG,CAAC,KAAK1I,OAAL,CAAarF,SAAb,CAAuBkB,eAAvB,CAAJ,EACI,OAAOI,QAAQ,CAAC,mCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAe6J,gBAAf,CAAD,IAAqC,CAACA,gBAAgB,CAACxE,MAA1D,EACI,OAAOjC,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB6K,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAO/I,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB4K,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAO9I,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACN,OAAN,CAAciK,UAAd,CAAJ,EACI,OAAO3J,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,iCAAD,CAAf;AAEJyG,sBAAgB,GAAGA,gBAAgB,CAAC/E,OAAjB,CAAyB,QAAzB,EAAmC,EAAnC,CAAnB;;AAEA,UAAGiI,UAAU,CAAC1H,MAAd,EAAsB;AAClB,YAAMkM,QAAQ,GAAG,IAAI,6CAAaC,QAAjB,EAAjB;AACA,YAAM5F,KAAK,GAAG,EAAd;AACA,YAAMzJ,MAAM,GAAG,EAAf;;AAEA,aAAI,IAAIgD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG4H,UAAU,CAAC1H,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAA,8BACjB4H,UAAU,CAAC5H,CAAD,CADO;AAAA,cACjCoE,IADiC,iBACjCA,IADiC;AAAA,cAC3BzD,KAD2B,iBAC3BA,KAD2B;AAGvC,cAAG,CAACyD,IAAD,IAAS,CAAC,6CAAK,CAACvJ,QAAN,CAAeuJ,IAAf,CAAV,IAAkC,CAACA,IAAI,CAAClE,MAA3C,EACI,OAAOjC,QAAQ,CAAC,sCAAsCmG,IAAvC,CAAf;AAEJ,cAAGA,IAAI,IAAI,SAAX,EACIzD,KAAK,GAAG,KAAKqB,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B+D,KAA3B,EAAkChB,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAR;AAEJ8G,eAAK,CAACrI,IAAN,CAAWgG,IAAX;AACApH,gBAAM,CAACoB,IAAP,CAAYuC,KAAZ;AACH;;AAED,YAAI;AACAiH,oBAAU,GAAGwE,QAAQ,CAACE,MAAT,CAAgB7F,KAAhB,EAAuBzJ,MAAvB,EAA+B2C,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAAb;AACH,SAFD,CAEE,OAAOoI,EAAP,EAAW;AACT,iBAAO9J,QAAQ,CAAC8J,EAAD,CAAf;AACH;AACJ,OAvBD,MAuBOH,UAAU,GAAG,EAAb;;AAEP,WAAK5F,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,6BAA9B,EAA6D;AACzDoI,wBAAgB,EAAE,KAAK1D,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BiB,eAA3B,CADuC;AAEzDyM,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CAF0C;AAGzDiC,yBAAiB,EAAEjI,gBAHsC;AAIzD6H,iBAAS,EAAElM,QAAQ,CAAC0G,QAAD,CAJsC;AAKzDyF,kBAAU,EAAEnM,QAAQ,CAAC2G,SAAD,CALqC;AAMzD0F,iBAAS,EAAE9E;AAN8C,OAA7D,EAOG,MAPH,EAOWrK,IAPX,CAOgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED,YAAG,CAACxH,WAAW,CAAC3F,MAAZ,CAAmBA,MAAvB,EACI,OAAOxB,QAAQ,CAACmH,WAAD,CAAf;AAEJnH,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OArBD,EAqBG5H,KArBH,CAqBS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OArBZ;AAsBH;;;kCAE4F;AAAA;;AAAA,UAAjFgE,OAAiF,uEAAvE,EAAuE;AAAA,UAAnEiI,aAAmE,uEAAnD,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACzF,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK8Q,WAAxB,EAAqCpK,OAArC,EAA8CiI,aAA9C,CAAP;AAPqF,2BAuBrFjI,OAvBqF,CAUrFgC,IAVqF;AAAA,UAUrFA,IAVqF,+BAU9E,KAV8E;AAAA,kCAuBrFhC,OAvBqF,CAWrFqK,YAXqF;AAAA,UAWrFA,YAXqF,sCAWtE,KAXsE;AAAA,iCAuBrFrK,OAvBqF,CAYrFsK,WAZqF;AAAA,UAYrFA,WAZqF,qCAYvE,KAZuE;AAAA,yBAuBrFtK,OAvBqF,CAarFuH,GAbqF;AAAA,UAarFA,GAbqF,6BAa/E,KAb+E;AAAA,iCAuBrFvH,OAvBqF,CAcrFuK,WAdqF;AAAA,UAcrFA,WAdqF,qCAcvE,CAduE;AAAA,8BAuBrFvK,OAvBqF,CAerFwK,QAfqF;AAAA,UAerFA,QAfqF,kCAe1E,CAf0E;AAAA,gCAuBrFxK,OAvBqF,CAgBrFyK,UAhBqF;AAAA,UAgBrFA,UAhBqF,oCAgBxE,CAhBwE;AAAA,+BAuBrFzK,OAvBqF,CAiBrF0K,SAjBqF;AAAA,UAiBrFA,SAjBqF,mCAiBzExE,IAAI,CAACyE,GAAL,EAjByE;AAAA,6BAuBrF3K,OAvBqF,CAkBrF4K,OAlBqF;AAAA,UAkBrFA,OAlBqF,iCAkB3E,KAlB2E;AAAA,kCAuBrF5K,OAvBqF,CAmBrF6K,aAnBqF;AAAA,UAmBrFA,aAnBqF,sCAmBrE,CAnBqE;AAAA,mCAuBrF7K,OAvBqF,CAoBrF8K,kBApBqF;AAAA,UAoBrFA,kBApBqF,uCAoBhE,CApBgE;AAAA,kCAuBrF9K,OAvBqF,CAqBrF+K,YArBqF;AAAA,UAqBrFA,YArBqF,sCAqBtE,CArBsE;AAAA,kCAuBrF/K,OAvBqF,CAsBrFgL,cAtBqF;AAAA,UAsBrFA,cAtBqF,sCAsBpE,CAtBoE;AAyBzF,UAAG,CAAC,6CAAK,CAAC5S,QAAN,CAAe4J,IAAf,CAAD,IAAyB,CAACA,IAAI,CAACvE,MAAlC,EACI,OAAOjC,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAeiS,YAAf,CAAD,IAAiC,CAACA,YAAY,CAAC5M,MAAlD,EACI,OAAOjC,QAAQ,CAAC,qCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB6Q,WAAhB,CAAD,IAAiCA,WAAW,IAAI,CAAnD,EACI,OAAO/O,QAAQ,CAAC,gCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB8Q,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA7C,EACI,OAAOhP,QAAQ,CAAC,sCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB+Q,UAAhB,CAAD,IAAgCA,UAAU,IAAI,CAAjD,EACI,OAAOjP,QAAQ,CAAC,wCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgR,SAAhB,CAAD,IAA+BA,SAAS,GAAGxE,IAAI,CAACyE,GAAL,EAA9C,EACI,OAAOnP,QAAQ,CAAC,uCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBkR,OAAhB,CAAD,IAA6BA,OAAO,IAAIF,SAA3C,EACI,OAAOlP,QAAQ,CAAC,qCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAekS,WAAf,CAAD,IAAgC,CAACA,WAAW,CAAC7M,MAAhD,EACI,OAAOjC,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAemP,GAAf,CAAD,IAAwB,CAACA,GAAG,CAAC9J,MAA7B,IAAuC,CAAC,6CAAK,CAACsJ,UAAN,CAAiBQ,GAAjB,CAA3C,EACI,OAAO/L,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBmR,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAOrP,QAAQ,CAAC,wCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBoR,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAOtP,QAAQ,CAAC,uCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBqR,YAAhB,CAAD,IAAkCA,YAAY,GAAG,CAAjD,IAAuD,CAACC,cAAD,IAAmBD,YAA7E,EACI,OAAOvP,QAAQ,CAAC,gCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBsR,cAAhB,CAAD,IAAoCA,cAAc,GAAG,CAArD,IAA2DA,cAAc,IAAI,CAACD,YAAjF,EACI,OAAOvP,QAAQ,CAAC,kCAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,iCAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,yBAA9B,EAAyD;AACrDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CADsC;AAErDjG,YAAI,EAAE,KAAKzC,OAAL,CAAa5C,QAAb,CAAsBqF,IAAtB,CAF+C;AAGrDiJ,YAAI,EAAE,KAAK1L,OAAL,CAAa5C,QAAb,CAAsB0N,YAAtB,CAH+C;AAIrDC,mBAAW,EAAE,KAAK/K,OAAL,CAAa5C,QAAb,CAAsB2N,WAAtB,CAJwC;AAKrD/C,WAAG,EAAE,KAAKhI,OAAL,CAAa5C,QAAb,CAAsB4K,GAAtB,CALgD;AAMrD2D,oBAAY,EAAEtN,QAAQ,CAAC2M,WAAD,CAN+B;AAOrDY,eAAO,EAAEvN,QAAQ,CAAC4M,QAAD,CAPoC;AAQrDY,WAAG,EAAExN,QAAQ,CAAC6M,UAAD,CARwC;AASrDY,kBAAU,EAAEzN,QAAQ,CAAC8M,SAAD,CATiC;AAUrDY,gBAAQ,EAAE1N,QAAQ,CAACgN,OAAD,CAVmC;AAWrDW,4BAAoB,EAAE3N,QAAQ,CAACiN,aAAD,CAXuB;AAYrDW,mCAA2B,EAAE5N,QAAQ,CAACkN,kBAAD,CAZgB;AAarDW,qBAAa,EAAE;AACXC,uBAAa,EAAE9N,QAAQ,CAACmN,YAAD,CADZ;AAEXY,qBAAW,EAAE/N,QAAQ,CAACoN,cAAD;AAFV;AAbsC,OAAzD,EAiBG,MAjBH,EAiBWlQ,IAjBX,CAiBgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OA5BD,EA4BG5H,KA5BH,CA4BS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OA5BZ;AA6BH;;;oCAGD;AAAA,UADc4P,WACd,uEAD4B,KAC5B;AAAA,UADmC7R,OACnC,uEAD6C,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GACzE;AAAA,UAD8E0C,QAC9E,uEADyF,KACzF;;AACI,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EAAc;AACV,eAAO,KAAKlC,aAAL,CAAmB,KAAKuS,aAAxB,EAAuCD,WAAvC,EAAoD7R,OAApD,CAAP;AACH;;AAED,UAAI,CAAC,6CAAK,CAAC3B,QAAN,CAAewT,WAAf,CAAD,IAAgC,CAACA,WAAW,CAACnO,MAAjD,EAAyD;AACrD,eAAOjC,QAAQ,CAAC,uBAAD,CAAf;AACH;;AAED,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EAAqC;AACjC,eAAOyB,QAAQ,CAAC,iCAAD,CAAf;AACH;;AAED,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDiR,oBAAY,EAAE,KAAKvM,OAAL,CAAa5C,QAAb,CAAsBiP,WAAtB,CADoC;AAElD/D,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B;AAFmC,OAAtD,EAGG,MAHH,EAGWe,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAE3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;AAEJ6B,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OATD,EASG5H,KATH,CASS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OATZ;AAUH;;;kCAE4F;AAAA;;AAAA,UAAjFgE,OAAiF,uEAAvE,EAAuE;AAAA,UAAnEiI,aAAmE,uEAAnD,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACzF,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKyS,WAAxB,EAAqC/L,OAArC,EAA8CiI,aAA9C,CAAP;AAPqF,kCAcrFjI,OAdqF,CAUrFsK,WAVqF;AAAA,UAUrFA,WAVqF,sCAUvE,KAVuE;AAAA,0BAcrFtK,OAdqF,CAWrFuH,GAXqF;AAAA,UAWrFA,GAXqF,8BAW/E,KAX+E;AAAA,mCAcrFvH,OAdqF,CAYrF6K,aAZqF;AAAA,UAYrFA,aAZqF,uCAYrE,CAZqE;AAAA,mCAcrF7K,OAdqF,CAarF8K,kBAbqF;AAAA,UAarFA,kBAbqF,uCAahE,CAbgE;AAgBzF,UAAG,CAAC,6CAAK,CAAC1S,QAAN,CAAekS,WAAf,CAAD,IAAgC,CAACA,WAAW,CAAC7M,MAAhD,EACI,OAAOjC,QAAQ,CAAC,oCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAemP,GAAf,CAAD,IAAwB,CAACA,GAAG,CAAC9J,MAA7B,IAAuC,CAAC,6CAAK,CAACsJ,UAAN,CAAiBQ,GAAjB,CAA3C,EACI,OAAO/L,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBmR,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAOrP,QAAQ,CAAC,wCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBoR,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAOtP,QAAQ,CAAC,uCAAD,CAAf;AAEJ,UAAG,CAAC,KAAK+D,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,iCAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,oBAA9B,EAAoD;AAChDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CADiC;AAEhDqC,mBAAW,EAAE,KAAK/K,OAAL,CAAa5C,QAAb,CAAsB2N,WAAtB,CAFmC;AAGhD/C,WAAG,EAAE,KAAKhI,OAAL,CAAa5C,QAAb,CAAsB4K,GAAtB,CAH2C;AAIhDyE,iBAAS,EAAEpO,QAAQ,CAACiN,aAAD,CAJ6B;AAKhDoB,wBAAgB,EAAErO,QAAQ,CAACkN,kBAAD;AALsB,OAApD,EAMG,MANH,EAMWhQ,IANX,CAMgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAjBD,EAiBG5H,KAjBH,CAiBS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAjBZ;AAkBH;;;gCAEkB;AACf,aAAO,KAAK+L,SAAL,uBAAP;AACH;;;oCAEsB;AACnB,aAAO,KAAKI,aAAL,uBAAP;AACH;;;kCAEoB;AACjB,aAAO,KAAKiC,WAAL,uBAAP;AACH;;;kCAEoB;AACjB,aAAO,KAAK2B,WAAL,uBAAP;AACH;AAED;;;;;;;qCAIsG;AAAA;;AAAA,UAAvF5G,UAAuF,uEAA1E,KAA0E;AAAA,UAAnE8C,aAAmE,uEAAnD,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAClG,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,CAACqM,UAAJ,EACI,OAAO3J,QAAQ,CAAC,sCAAD,CAAf;AAEJ,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK4S,cAAxB,EAAwC/G,UAAxC,EAAoD8C,aAApD,CAAP;AAEJ,UAAG,CAAC,KAAK1I,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,gCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACyL,QAAN,CAAe9B,UAAf,CAAJ,EACI,OAAO3J,QAAQ,CAAC,6BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CADoC;AAEnD9C,kBAAU,EAAEA;AAFuC,OAAvD,EAGG,MAHH,EAGWrK,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAdD,EAcG5H,KAdH,CAcS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAdZ;AAeH;AAED;;;;;;;qCAIsG;AAAA;;AAAA,UAAvFmQ,UAAuF,uEAA1E,KAA0E;AAAA,UAAnElE,aAAmE,uEAAnD,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAClG,UAAG,6CAAK,CAACuF,UAAN,CAAiBkH,aAAjB,CAAH,EAAoC;AAChCzM,gBAAQ,GAAGyM,aAAX;AACAA,qBAAa,GAAG,KAAK1I,OAAL,CAAa1G,cAAb,CAA4BC,GAA5C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK8S,cAAxB,EAAwCD,UAAxC,EAAoDlE,aAApD,CAAP;AAEJ,UAAG,CAAC,KAAK1I,OAAL,CAAarF,SAAb,CAAuB+N,aAAvB,CAAJ,EACI,OAAOzM,QAAQ,CAAC,gCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgByS,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO3Q,QAAQ,CAAC,6BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B8N,aAA3B,CADoC;AAEnDoE,mBAAW,EAAEzO,QAAQ,CAACuO,UAAD;AAF8B,OAAvD,EAGG,MAHH,EAGWrR,IAHX,CAGgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAdD,EAcG5H,KAdH,CAcS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAdZ;AAeH;AAED;;;;;;;mCAIwH;AAAA;;AAAA,UAA3GmQ,UAA2G,uEAA9F,KAA8F;AAAA,UAAvFG,WAAuF,uEAAzE,KAAyE;AAAA,UAAlEzD,YAAkE,uEAAnD,KAAKtJ,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACpH,UAAG,6CAAK,CAACuF,UAAN,CAAiB8H,YAAjB,CAAH,EAAmC;AAC/BrN,gBAAQ,GAAGqN,YAAX;AACAA,oBAAY,GAAG,KAAKtJ,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKiT,YAAxB,EAAsCJ,UAAtC,EAAkDG,WAAlD,EAA+DzD,YAA/D,CAAP;AAEJ,UAAG,CAAC,KAAKtJ,OAAL,CAAarF,SAAb,CAAuB2O,YAAvB,CAAJ,EACI,OAAOrN,QAAQ,CAAC,uCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgByS,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO3Q,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACgB,SAAN,CAAgB8P,WAAhB,CAAJ,EACI,OAAO9Q,QAAQ,CAAC,8BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0O,YAA3B,CADqC;AAEpDwD,mBAAW,EAAEzO,QAAQ,CAACuO,UAAD,CAF+B;AAGpDK,uBAAe,EAAEC,UAAU,CAACpP,QAAX;AAHmC,OAAxD,EAIG,MAJH,EAIWvC,IAJX,CAIgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAfD,EAeG5H,KAfH,CAeS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAfZ;AAgBH;AAED;;;;;;;;sCAKkB0Q,S,EAAWC,Y,EAAcC,U,EAA8E;AAAA,UAAlEC,YAAkE,uEAAnD,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACrH,UAAG,6CAAK,CAACuF,UAAN,CAAiB8L,YAAjB,CAAH,EAAmC;AAC/BrR,gBAAQ,GAAGqR,YAAX;AACAA,oBAAY,GAAG,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAI,CAAC0C,QAAL,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKwT,iBAAxB,EAA2CJ,SAA3C,EAAsDC,YAAtD,EAAoEC,UAApE,EAAgFC,YAAhF,CAAP;AAEJ,UAAI,CAAC,KAAKtN,OAAL,CAAarF,SAAb,CAAuB2S,YAAvB,CAAL,EACI,OAAOrR,QAAQ,CAAC,0BAAD,CAAf;AAEJ,UAAI,CAAC,6CAAK,CAACpD,QAAN,CAAesU,SAAf,CAAD,IAA8B,CAACA,SAAS,CAACjP,MAA7C,EACI,OAAOjC,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAI,CAAC,6CAAK,CAAC9B,SAAN,CAAgBiT,YAAhB,CAAD,IAAkCA,YAAY,IAAI,CAAlD,IACG,CAAC,6CAAK,CAACjT,SAAN,CAAgBkT,UAAhB,CADJ,IACmCA,UAAU,IAAI,CADrD,EAEI,OAAOpR,QAAQ,CAAC,yBAAD,CAAf;AAEJ4F,aAAO,CAAC2L,GAAR,CAAY;AACRlF,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0S,YAA3B,CADP;AAERG,sBAAc,EAAE,KAAKzN,OAAL,CAAa5C,QAAb,CAAsB+P,SAAtB,CAFR;AAGRO,2BAAmB,EAAEN,YAHb;AAIRO,uBAAe,EAAE,IAJT;AAIe;AACvBC,4BAAoB,EAAEP;AALd,OAAZ;AAQA,WAAKrN,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0S,YAA3B,CADoC;AAEnDG,sBAAc,EAAE,KAAKzN,OAAL,CAAa5C,QAAb,CAAsB+P,SAAtB,CAFmC;AAGnDO,2BAAmB,EAAEN,YAH8B;AAInDO,uBAAe,EAAE,IAJkC;AAI5B;AACvBC,4BAAoB,EAAEP;AAL6B,OAAvD,EAMG,MANH,EAMW9R,IANX,CAMgB,UAAAsS,SAAS,EAAI;AACzB5R,gBAAQ,CAAC,IAAD,EAAO4R,SAAP,CAAR;AACH,OARD,EAQGrS,KARH,CAQS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OARZ;AASH;AAED;;;;;;2CAG+I;AAAA;;AAAA,UAA1HqR,UAA0H,uEAA7G,KAA6G;AAAA,UAAtGX,SAAsG,uEAA1F,KAA0F;AAAA,UAAnFY,WAAmF,uEAArE,CAAqE;AAAA,UAAlET,YAAkE,uEAAnD,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC3I,UAAG,6CAAK,CAACuF,UAAN,CAAiB8L,YAAjB,CAAH,EAAmC;AAC/BrR,gBAAQ,GAAGqR,YAAX;AACAA,oBAAY,GAAG,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKiU,oBAAxB,EAA8CF,UAA9C,EAA0DX,SAA1D,EAAqEY,WAArE,EAAkFT,YAAlF,CAAP;AAEJ,UAAG,CAAC,KAAKtN,OAAL,CAAarF,SAAb,CAAuB2S,YAAvB,CAAJ,EACI,OAAOrR,QAAQ,CAAC,+BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB2T,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO7R,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAesU,SAAf,CAAD,IAA8B,CAACA,SAAS,CAACjP,MAA5C,EACI,OAAOjC,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB4T,WAAhB,CAAD,IAAiCA,WAAW,GAAG,CAAlD,EACI,OAAO9R,QAAQ,CAAC,8BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0S,YAA3B,CADoC;AAEnDW,mBAAW,EAAE5P,QAAQ,CAACyP,UAAD,CAF8B;AAGnDI,gBAAQ,EAAE,KAAKlO,OAAL,CAAa5C,QAAb,CAAsB+P,SAAtB,CAHyC;AAInDgB,aAAK,EAAC9P,QAAQ,CAAC0P,WAAD;AAJqC,OAAvD,EAKG,MALH,EAKWxS,IALX,CAKgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAhBD,EAgBG5H,KAhBH,CAgBS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAhBZ;AAiBH;AAED;;;;;;6CAGiJ;AAAA;;AAAA,UAA1HqR,UAA0H,uEAA7G,KAA6G;AAAA,UAAtGX,SAAsG,uEAA1F,KAA0F;AAAA,UAAnFY,WAAmF,uEAArE,CAAqE;AAAA,UAAlET,YAAkE,uEAAnD,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC7I,UAAG,6CAAK,CAACuF,UAAN,CAAiB8L,YAAjB,CAAH,EAAmC;AAC/BrR,gBAAQ,GAAGqR,YAAX;AACAA,oBAAY,GAAG,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKqU,sBAAxB,EAAgDN,UAAhD,EAA4DX,SAA5D,EAAuEY,WAAvE,EAAoFT,YAApF,CAAP;AAEJ,UAAG,CAAC,KAAKtN,OAAL,CAAarF,SAAb,CAAuB2S,YAAvB,CAAJ,EACI,OAAOrR,QAAQ,CAAC,+BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB2T,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO7R,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAesU,SAAf,CAAD,IAA8B,CAACA,SAAS,CAACjP,MAA5C,EACI,OAAOjC,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB4T,WAAhB,CAAD,IAAiCA,WAAW,GAAG,CAAlD,EACI,OAAO9R,QAAQ,CAAC,8BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,yBAA9B,EAAyD;AACrDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0S,YAA3B,CADsC;AAErDW,mBAAW,EAAE5P,QAAQ,CAACyP,UAAD,CAFgC;AAGrDI,gBAAQ,EAAE,KAAKlO,OAAL,CAAa5C,QAAb,CAAsB+P,SAAtB,CAH2C;AAIrDgB,aAAK,EAAC9P,QAAQ,CAAC0P,WAAD;AAJuC,OAAzD,EAKG,MALH,EAKWxS,IALX,CAKgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,MAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAhBD,EAgBG5H,KAhBH,CAgBS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAhBZ;AAiBH;AAED;;;;;;0CAQsB;AAAA;;AAAA,UALFqR,UAKE,uEALW,KAKX;AAAA,UAJlBX,SAIkB,uEAJN,KAIM;AAAA,UAHlBkB,eAGkB,uEAHA,CAGA;AAAA,UAFlBC,mBAEkB,uEAFI,CAEJ;AAAA,UADlBhB,YACkB,uEADH,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GACzB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAClB,UAAG,6CAAK,CAACuF,UAAN,CAAiB8L,YAAjB,CAAH,EAAmC;AAC/BrR,gBAAQ,GAAGqR,YAAX;AACAA,oBAAY,GAAG,KAAKtN,OAAL,CAAa1G,cAAb,CAA4BC,GAA3C;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKwU,mBAAxB,EAA6CT,UAA7C,EAAyDX,SAAzD,EAAoEkB,eAApE,EAAqFC,mBAArF,EAA0GhB,YAA1G,CAAP;AAEJ,UAAG,CAAC,KAAKtN,OAAL,CAAarF,SAAb,CAAuB2S,YAAvB,CAAJ,EACI,OAAOrR,QAAQ,CAAC,+BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgB2T,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO7R,QAAQ,CAAC,6BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAACpD,QAAN,CAAesU,SAAf,CAAD,IAA8B,CAACA,SAAS,CAACjP,MAA5C,EACI,OAAOjC,QAAQ,CAAC,4BAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBkU,eAAhB,CAAD,IAAqCA,eAAe,GAAG,CAA1D,EACI,OAAOpS,QAAQ,CAAC,kCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBmU,mBAAhB,CAAD,IAAyCA,mBAAmB,GAAG,CAAlE,EACI,OAAOrS,QAAQ,CAAC,sCAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,yBAA9B,EAAyD;AACrDgN,qBAAa,EAAE,KAAKtI,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2B0S,YAA3B,CADsC;AAErDW,mBAAW,EAAE5P,QAAQ,CAACyP,UAAD,CAFgC;AAGrDI,gBAAQ,EAAE,KAAKlO,OAAL,CAAawO,SAAb,CAAuBrB,SAAvB,CAH2C;AAIrDgB,aAAK,EAAC9P,QAAQ,CAACgQ,eAAD,CAJuC;AAKrDI,gBAAQ,EAACpQ,QAAQ,CAACiQ,mBAAD;AALoC,OAAzD,EAMG,MANH,EAMW/S,IANX,CAMgB,UAAA6H,WAAW,EAAI;AAC3B,YAAGA,WAAW,CAAChJ,KAAf,EACI,OAAO6B,QAAQ,CAACmH,WAAW,CAAChJ,KAAb,CAAf;;AAEJ,YAAGgJ,WAAW,CAAC3F,MAAZ,IAAsB2F,WAAW,CAAC3F,MAAZ,CAAmBmN,OAA5C,EAAqD;AACjD,iBAAO3O,QAAQ,CACX,OAAI,CAAC+D,OAAL,CAAasG,MAAb,CAAoBlD,WAAW,CAAC3F,MAAZ,CAAmBmN,OAAvC,CADW,CAAf;AAGH;;AAED3O,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAjBD,EAiBG5H,KAjBH,CAiBS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAjBZ;AAkBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACt/BL;AACA;AACA;AAEA,IAAMiS,kBAAkB,GAAG,8BAA3B;AACA,IAAMC,kBAAkB,GAAG,kCAA3B;;IAEqBC,G;;;AACjB,iBAA6B;AAAA,QAAjB5O,OAAiB,uEAAP,KAAO;;AAAA;;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAI5F,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAK4F,OAAL,GAAeA,OAAf;AACA,SAAKjG,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;;;+BAEU6U,K,EAAO;AACd,4FACOA,KADP;AAEIpM,YAAI,EAAE,KAAKzC,OAAL,CAAasG,MAAb,CAAoBuI,KAAK,CAACpM,IAA1B,CAFV;AAGIiJ,YAAI,EAAEmD,KAAK,CAACnD,IAAN,IAAc,KAAK1L,OAAL,CAAasG,MAAb,CAAoBuI,KAAK,CAACnD,IAA1B,CAHxB;AAIIX,mBAAW,EAAE8D,KAAK,CAAC9D,WAAN,IAAqB,KAAK/K,OAAL,CAAasG,MAAb,CAAoBuI,KAAK,CAAC9D,WAA1B,CAJtC;AAKI/C,WAAG,EAAE6G,KAAK,CAAC7G,GAAN,IAAa,KAAKhI,OAAL,CAAasG,MAAb,CAAoBuI,KAAK,CAAC7G,GAA1B;AALtB;AAOH;;;sCAEiC;AAAA,UAAlB/L,QAAkB,uEAAP,KAAO;AAC9B,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK+U,eAAxB,CAAP;AAEJ,WAAK9O,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,oBAA9B,EAAoDC,IAApD,CAAyD,UAAAuF,KAAK,EAAI;AAC9D7E,gBAAQ,CAAC,IAAD,EAAO6E,KAAP,CAAR;AACH,OAFD,EAEGtF,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;;;+BAE6D;AAAA,UAArDqE,KAAqD,uEAA7C,KAAKd,OAAL,CAAa5G,YAAgC;AAAA,UAAlB6C,QAAkB,uEAAP,KAAO;;AAC1D,UAAG,6CAAK,CAACuF,UAAN,CAAiBV,KAAjB,CAAH,EAA4B;AACxB7E,gBAAQ,GAAG6E,KAAX;AACAA,aAAK,GAAG,KAAKd,OAAL,CAAa5G,YAArB;AACH;;AAED,UAAG,CAAC6C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKgV,QAAxB,EAAkCjO,KAAlC,CAAP;AAEJ,UAAGA,KAAK,KAAK,KAAb,EACI,OAAO7E,QAAQ,CAAC,8BAAD,CAAf;AAEJ,UAAG6E,KAAK,IAAI,UAAZ,EACIA,KAAK,GAAG,CAAR;AAEJ,UAAGA,KAAK,IAAI,QAAZ,EACI,OAAO,KAAKgO,eAAL,CAAqB7S,QAArB,CAAP;AAEJ,UAAGwL,KAAK,CAAC3G,KAAD,CAAL,IAAgB,6CAAK,CAACpD,KAAN,CAAYoD,KAAZ,CAAnB,EACI,OAAO,KAAKkO,cAAL,CAAoBlO,KAApB,EAA2B7E,QAA3B,CAAP;AAEJ,WAAKgT,gBAAL,CAAsBnO,KAAtB,EAA6B7E,QAA7B;AACH;;;mCAEciT,S,EAA6B;AAAA,UAAlBjT,QAAkB,uEAAP,KAAO;AACxC,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKiV,cAAxB,EAAwCE,SAAxC,CAAP;AAEJ,WAAKlP,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,qBAA9B,EAAqD;AACjDqD,aAAK,EAAEuQ;AAD0C,OAArD,EAEG,MAFH,EAEW3T,IAFX,CAEgB,UAAAuF,KAAK,EAAI;AACrB,YAAG,CAAC/F,MAAM,CAACqL,IAAP,CAAYtF,KAAZ,EAAmB5C,MAAvB,EACI,OAAOjC,QAAQ,CAAC,iBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAO6E,KAAP,CAAR;AACH,OAPD,EAOGtF,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;qCAEgBxC,O,EAA2B;AAAA,UAAlBgC,QAAkB,uEAAP,KAAO;AACxC,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKkV,gBAAxB,EAA0ChV,OAA1C,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAACE,SAAN,CAAgBF,OAAhB,CAAD,IAA6BA,OAAO,GAAG,CAA1C,EACI,OAAOgC,QAAQ,CAAC,+BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDuQ,WAAG,EAAExN,QAAQ,CAACpE,OAAD;AADqC,OAAtD,EAEG,MAFH,EAEWsB,IAFX,CAEgB,UAAAuF,KAAK,EAAI;AACrB,YAAG,CAAC/F,MAAM,CAACqL,IAAP,CAAYtF,KAAZ,EAAmB5C,MAAvB,EACI,OAAOjC,QAAQ,CAAC,iBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAO6E,KAAP,CAAR;AACH,OAPD,EAOGtF,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;+CAE6E;AAAA,UAArDqE,KAAqD,uEAA7C,KAAKd,OAAL,CAAa5G,YAAgC;AAAA,UAAlB6C,QAAkB,uEAAP,KAAO;;AAC1E,UAAG,6CAAK,CAACuF,UAAN,CAAiBV,KAAjB,CAAH,EAA4B;AACxB7E,gBAAQ,GAAG6E,KAAX;AACAA,aAAK,GAAG,KAAKd,OAAL,CAAa5G,YAArB;AACH;;AAED,UAAG,CAAC6C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKoV,wBAAxB,EAAkDrO,KAAlD,CAAP;AAEJ,WAAKiO,QAAL,CAAcjO,KAAd,EAAqBvF,IAArB,CAA0B,gBAA2B;AAAA,qCAAxB6T,YAAwB;AAAA,YAAxBA,YAAwB,kCAAT,EAAS;AACjDnT,gBAAQ,CAAC,IAAD,EAAOmT,YAAY,CAAClR,MAApB,CAAR;AACH,OAFD,EAEG1C,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;;;8CAEuF;AAAA,UAAhEqE,KAAgE,uEAAxD,KAAKd,OAAL,CAAa5G,YAA2C;AAAA,UAA7B8H,KAA6B,uEAArB,CAAqB;AAAA,UAAlBjF,QAAkB,uEAAP,KAAO;;AACpF,UAAG,6CAAK,CAACuF,UAAN,CAAiBN,KAAjB,CAAH,EAA4B;AACxBjF,gBAAQ,GAAGiF,KAAX;AACAA,aAAK,GAAG,CAAR;AACH;;AAED,UAAG,6CAAK,CAACM,UAAN,CAAiBV,KAAjB,CAAH,EAA4B;AACxB7E,gBAAQ,GAAG6E,KAAX;AACAA,aAAK,GAAG,KAAKd,OAAL,CAAa5G,YAArB;AACH;;AAED,UAAG,CAAC6C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKsV,uBAAxB,EAAiDvO,KAAjD,EAAwDI,KAAxD,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAAC/G,SAAN,CAAgB+G,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAtC,EACI,OAAOjF,QAAQ,CAAC,oCAAD,CAAf;AAEJ,WAAK8S,QAAL,CAAcjO,KAAd,EAAqBvF,IAArB,CAA0B,iBAA8B;AAAA,uCAA3B6T,YAA2B;AAAA,YAA3BA,YAA2B,mCAAZ,KAAY;AACpD,YAAG,CAACA,YAAD,IAAiBA,YAAY,CAAClR,MAAb,GAAsBgD,KAA1C,EACI,OAAOjF,QAAQ,CAAC,gCAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAOmT,YAAY,CAAClO,KAAD,CAAnB,CAAR;AACH,OALD,EAKG1F,KALH,CAKS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OALZ;AAMH;;;mCAEcE,a,EAAiC;AAAA,UAAlBV,QAAkB,uEAAP,KAAO;AAC5C,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKuV,cAAxB,EAAwC3S,aAAxC,CAAP;AAEJ,WAAKqD,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDqD,aAAK,EAAEhC;AADgD,OAA3D,EAEG,MAFH,EAEWpB,IAFX,CAEgB,UAAA6H,WAAW,EAAI;AAC3B,YAAG,CAACrI,MAAM,CAACqL,IAAP,CAAYhD,WAAZ,EAAyBlF,MAA7B,EACI,OAAOjC,QAAQ,CAAC,uBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAPD,EAOG5H,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;4CAEuBE,a,EAAiC;AAAA,UAAlBV,QAAkB,uEAAP,KAAO;AACrD,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKwV,uBAAxB,EAAiD5S,aAAjD,CAAP;AAEJ,WAAKqD,OAAL,CAAatH,YAAb,CAA0B4C,OAA1B,CAAkC,mCAAlC,EAAuE;AACnEqD,aAAK,EAAEhC;AAD4D,OAAvE,EAEG,MAFH,EAEWpB,IAFX,CAEgB,UAAA6H,WAAW,EAAI;AAC3B,YAAG,CAACrI,MAAM,CAACqL,IAAP,CAAYhD,WAAZ,EAAyBlF,MAA7B,EACI,OAAOjC,QAAQ,CAAC,uBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAPD,EAOG5H,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;uCAEkBE,a,EAAiC;AAAA,UAAlBV,QAAkB,uEAAP,KAAO;AAChD,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKoM,kBAAxB,EAA4CxJ,aAA5C,CAAP;AAEJ,WAAKqD,OAAL,CAAatH,YAAb,CAA0B4C,OAA1B,CAAkC,uCAAlC,EAA2E;AACvEqD,aAAK,EAAEhC;AADgE,OAA3E,EAEG,MAFH,EAEWpB,IAFX,CAEgB,UAAA6H,WAAW,EAAI;AAC3BnH,gBAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,OAJD,EAIG5H,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;;;+CAE6G;AAAA,UAArFjC,OAAqF,uEAA3E,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAA+C;AAAA,UAA1CiW,KAA0C,uEAAlC,EAAkC;AAAA,UAA9BC,MAA8B,uEAArB,CAAqB;AAAA,UAAlBxT,QAAkB,uEAAP,KAAO;;AAC1G,UAAG,6CAAK,CAACuF,UAAN,CAAiBiO,MAAjB,CAAH,EAA6B;AACzBxT,gBAAQ,GAAGwT,MAAX;AACAA,cAAM,GAAG,CAAT;AACH;;AAED,UAAG,6CAAK,CAACjO,UAAN,CAAiBgO,KAAjB,CAAH,EAA4B;AACxBvT,gBAAQ,GAAGuT,KAAX;AACAA,aAAK,GAAG,EAAR;AACH;;AAED,UAAG,CAACvT,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK2V,wBAAxB,EAAkDlV,OAAlD,EAA2DgV,KAA3D,EAAkEC,MAAlE,CAAP;AAEJjV,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,aAAO,KAAKmV,sBAAL,CAA4BnV,OAA5B,EAAqC,IAArC,EAA2CgV,KAA3C,EAAkDC,MAAlD,EAA0DxT,QAA1D,CAAP;AACH;;;iDAE+G;AAAA,UAArFzB,OAAqF,uEAA3E,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAA+C;AAAA,UAA1CiW,KAA0C,uEAAlC,EAAkC;AAAA,UAA9BC,MAA8B,uEAArB,CAAqB;AAAA,UAAlBxT,QAAkB,uEAAP,KAAO;;AAC5G,UAAG,6CAAK,CAACuF,UAAN,CAAiBiO,MAAjB,CAAH,EAA6B;AACzBxT,gBAAQ,GAAGwT,MAAX;AACAA,cAAM,GAAG,CAAT;AACH;;AAED,UAAG,6CAAK,CAACjO,UAAN,CAAiBgO,KAAjB,CAAH,EAA4B;AACxBvT,gBAAQ,GAAGuT,KAAX;AACAA,aAAK,GAAG,EAAR;AACH;;AAED,UAAG,CAACvT,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK6V,0BAAxB,EAAoDpV,OAApD,EAA6DgV,KAA7D,EAAoEC,MAApE,CAAP;AAEJjV,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,aAAO,KAAKmV,sBAAL,CAA4BnV,OAA5B,EAAqC,MAArC,EAA6CgV,KAA7C,EAAoDC,MAApD,EAA4DxT,QAA5D,CAAP;AACH;;;;;;;;;;;;;;;;;;;AAE4BzB,uB,2DAAU,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,G;AAAKsW,yB,2DAAY,K;AAAOL,qB,2DAAQ,E;AAAIC,sB,2DAAS,C;AAAGxT,wB,2DAAW,K;;AAC1H,oBAAG,6CAAK,CAACuF,UAAN,CAAiBiO,MAAjB,CAAH,EAA6B;AACzBxT,0BAAQ,GAAGwT,MAAX;AACAA,wBAAM,GAAG,CAAT;AACH;;AAED,oBAAG,6CAAK,CAACjO,UAAN,CAAiBgO,KAAjB,CAAH,EAA4B;AACxBvT,0BAAQ,GAAGuT,KAAX;AACAA,uBAAK,GAAG,EAAR;AACH;;AAED,oBAAG,6CAAK,CAAChO,UAAN,CAAiBqO,SAAjB,CAAH,EAAgC;AAC5B5T,0BAAQ,GAAG4T,SAAX;AACAA,2BAAS,GAAG,KAAZ;AACH;;AAED,oBAAG,6CAAK,CAACrO,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,0BAAQ,GAAGzB,OAAX;AACAA,yBAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;oBAEG0C,Q;;;;;iDACO,KAAKlC,aAAL,CAAmB,KAAK4V,sBAAxB,EAAgDnV,OAAhD,EAAyDqV,SAAzD,EAAoEL,KAApE,EAA2EC,MAA3E,C;;;oBAEP,CAAE,IAAF,EAAQ,MAAR,EAAgB,KAAhB,EAAwBvV,QAAxB,CAAiC2V,SAAjC,C;;;;;iDACO5T,QAAQ,CAAC,4DAAD,C;;;sBAEhB4T,SAAS,IAAI,K;;;;;;;uBAEW,KAAKF,sBAAL,CAA4BnV,OAA5B,EAAqC,MAArC,EAA6CgV,KAA7C,EAAoDC,MAApD,C;;;AAAb5R,oB;;uBACW,KAAK8R,sBAAL,CAA4BnV,OAA5B,EAAqC,IAArC,EAA2CgV,KAA3C,EAAkDC,MAAlD,C;;;AAAXtH,kB;iDAEClM,QAAQ,CAAC,IAAD,EAAO,gFACf4B,IAAI,CAACvB,GAAL,CAAS,UAAAwT,EAAE;AAAA,yBAAKA,EAAE,CAACD,SAAH,GAAe,MAAf,EAAuBC,EAA5B;AAAA,iBAAX,CADe,yFAEf3H,EAAE,CAAC7L,GAAH,CAAO,UAAAwT,EAAE;AAAA,yBAAKA,EAAE,CAACD,SAAH,GAAe,IAAf,EAAqBC,EAA1B;AAAA,iBAAT,CAFe,GAGpBnP,IAHoB,CAGf,UAACC,CAAD,EAAIC,CAAJ;AAAA,yBAAUA,CAAC,CAACkP,QAAF,CAAWC,SAAX,GAAuBpP,CAAC,CAACmP,QAAF,CAAWC,SAA5C;AAAA,iBAHe,CAAP,C;;;;;iDAKR/T,QAAQ,a;;;oBAInB,KAAK+D,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,C;;;;;iDACOyB,QAAQ,CAAC,0BAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgBqV,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,C;;;;;iDACnDvT,QAAQ,CAAC,wBAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgBsV,MAAhB,CAAD,IAA4BA,MAAM,GAAG,C;;;;;iDAC7BxT,QAAQ,CAAC,yBAAD,C;;;AAEnBzB,uBAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,qBAAKwF,OAAL,CAAatH,YAAb,CAA0B4C,OAA1B,0CAAoEuU,SAApE,WAAqF;AACjFrQ,yBAAO,EAAE;AACLhF,2BAAO,EAAPA;AADK,mBADwE;AAIjFiV,wBAAM,EAANA,MAJiF;AAKjFD,uBAAK,EAALA;AALiF,iBAArF,EAMG,MANH,EAMWjU,IANX,CAMgB,iBAAqB;AAAA,sBAAlB6H,WAAkB,SAAlBA,WAAkB;AACjCnH,0BAAQ,CAAC,IAAD,EAAOmH,WAAP,CAAR;AACH,iBARD,EAQG5H,KARH,CAQS,UAAAiB,GAAG;AAAA,yBAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,iBARZ;;;;;;;;;;;;;;;;iCAWoE;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACpE,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKkW,UAAxB,EAAoCzV,OAApC,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,WAAKwF,OAAL,CAAatH,YAAb,CAA0B4C,OAA1B,CAAkC,2BAAlC,EAA+D;AAC3Dd,eAAO,EAAPA;AAD2D,OAA/D,EAEG,MAFH,EAEWe,IAFX,CAEgB,UAAAiE,OAAO,EAAI;AACvBvD,gBAAQ,CAAC,IAAD,EAAOuD,OAAP,CAAR;AACH,OAJD,EAIGhE,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;;;iCAEuE;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACpE,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKmW,UAAxB,EAAoC1V,OAApC,CAAP;AAEJ,WAAKyV,UAAL,CAAgBzV,OAAhB,EAAyBe,IAAzB,CAA8B,iBAAqB;AAAA,kCAAlB4U,OAAkB;AAAA,YAAlBA,OAAkB,8BAAR,CAAQ;AAC/ClU,gBAAQ,CAAC,IAAD,EAAOkU,OAAP,CAAR;AACH,OAFD,EAEG3U,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;;;4CAEkF;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC/E,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKqW,qBAAxB,EAA+C5V,OAA/C,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,WAAKwF,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,mBAA9B,EAAmD;AAC/Cd,eAAO,EAAPA;AAD+C,OAAnD,EAEG,MAFH,EAEWe,IAFX,CAEgB,UAAAiE,OAAO,EAAI;AACvBvD,gBAAQ,CAAC,IAAD,EAAOuD,OAAP,CAAR;AACH,OAJD,EAIGhE,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;;;4CAEkF;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAC/E,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKsW,qBAAxB,EAA+C7V,OAA/C,CAAP;AAEJ,WAAK4V,qBAAL,CAA2B5V,OAA3B,EAAoCe,IAApC,CAAyC,iBAAqB;AAAA,kCAAlB4U,OAAkB;AAAA,YAAlBA,OAAkB,8BAAR,CAAQ;AAC1DlU,gBAAQ,CAAC,IAAD,EAAOkU,OAAP,CAAR;AACH,OAFD,EAEG3U,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;;;mCAEyE;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AACtE,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKuW,YAAxB,EAAsC9V,OAAtC,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,WAAKwF,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDd,eAAO,EAAPA;AADkD,OAAtD,EAEG,MAFH,EAEWe,IAFX,CAEgB,iBAAsE;AAAA,sCAAnEgV,WAAmE;AAAA,YAAnEA,WAAmE,kCAArD,CAAqD;AAAA,uCAAlDC,YAAkD;AAAA,YAAlDA,YAAkD,mCAAnC,CAAmC;AAAA,kCAAhCC,OAAgC;AAAA,YAAhCA,OAAgC,8BAAtB,CAAsB;AAAA,mCAAnBC,QAAmB;AAAA,YAAnBA,QAAmB,+BAAR,CAAQ;AAClFzU,gBAAQ,CAAC,IAAD,EAAQuU,YAAY,GAAGD,WAAhB,IAAgCG,QAAQ,GAAGD,OAA3C,CAAP,CAAR;AACH,OAJD,EAIGjV,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;;;+CAEqF;AAAA;;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;;AAClF,UAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,gBAAQ,GAAGzB,OAAX;AACAA,eAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAtC;AACH;;AAED,UAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK4W,wBAAxB,EAAkDnW,OAAlD,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,aAAO,GAAG,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B,CAAV;AAEA,WAAKwF,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,+BAA9B,EAA+D;AAC3Dd,eAAO,EAAPA;AAD2D,OAA/D,EAEG,MAFH,EAEWe,IAFX,CAEgB,iBAA4B;AAAA,qCAAzBqV,UAAyB;AAAA,YAAzBA,UAAyB,iCAAZ,KAAY;AACxC,YAAG,CAACA,UAAJ,EACI,OAAO3U,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAf;AAEJ,YAAM4U,MAAM,GAAGD,UAAU,CAACtU,GAAX,CAAe,UAAAuS,KAAK,EAAI;AACnC,iBAAO,KAAI,CAACiC,UAAL,CAAgBjC,KAAhB,CAAP;AACH,SAFc,EAEZkC,MAFY,CAEL,UAACF,MAAD,EAAShC,KAAT,EAAmB;AACzB,iBAAOgC,MAAM,CAAChC,KAAK,CAACpM,IAAP,CAAN,GAAqBoM,KAArB,EAA4BgC,MAAnC;AACH,SAJc,EAIZ,EAJY,CAAf;AAMA5U,gBAAQ,CAAC,IAAD,EAAO4U,MAAP,CAAR;AACH,OAbD,EAaGrV,KAbH,CAaS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAbZ;AAcH;;;qCAEiD;AAAA;;AAAA,UAAnC8L,OAAmC,uEAAzB,KAAyB;AAAA,UAAlBtM,QAAkB,uEAAP,KAAO;AAC9C,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKiX,cAAxB,EAAwCzI,OAAxC,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAAC1P,QAAN,CAAe0P,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACrK,MAAxC,EACI,OAAOjC,QAAQ,CAAC,2BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,4BAA9B,EAA4D;AACxDqD,aAAK,EAAE,KAAKqB,OAAL,CAAa5C,QAAb,CAAsBmL,OAAtB;AADiD,OAA5D,EAEG,MAFH,EAEWhN,IAFX,CAEgB,UAAAsT,KAAK,EAAI;AACrB,YAAG,CAACA,KAAK,CAACpM,IAAV,EACI,OAAOxG,QAAQ,CAAC,sBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAO,MAAI,CAAC6U,UAAL,CAAgBjC,KAAhB,CAAP,CAAR;AACH,OAPD,EAOGrT,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;gCAE2B;AAAA;;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AACxB,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKkX,SAAxB,CAAP;AAEJ,WAAKjR,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,kBAA9B,EAAkDC,IAAlD,CAAuD,iBAAoB;AAAA,gCAAjB2V,KAAiB;AAAA,YAAjBA,KAAiB,4BAAT,EAAS;AACvEjV,gBAAQ,CAAC,IAAD,EAAOiV,KAAK,CAAC5U,GAAN,CAAU;AAAA,oCAAG9B,OAAH;AAAA,cAAc0M,IAAd,iBAAcA,IAAd;AAAA,cAAoBiK,IAApB,iBAAoBA,IAApB;AAAA,2BAClB,MAAI,CAACnR,OAAL,CAAasG,MAAb,CAAoBY,IAApB,CADkB,cACWiK,IADX;AAAA,SAAV,CAAP,CAAR;AAGH,OAJD,EAIG3V,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;;;oCAEoD;AAAA,UAAvCqH,KAAuC,uEAA/B,CAA+B;AAAA,UAA5BsN,GAA4B,uEAAtB,EAAsB;AAAA,UAAlBnV,QAAkB,uEAAP,KAAO;;AACjD,UAAG,6CAAK,CAACuF,UAAN,CAAiB4P,GAAjB,CAAH,EAA0B;AACtBnV,gBAAQ,GAAGmV,GAAX;AACAA,WAAG,GAAG,EAAN;AACH;;AAED,UAAG,6CAAK,CAAC5P,UAAN,CAAiBsC,KAAjB,CAAH,EAA4B;AACxB7H,gBAAQ,GAAG6H,KAAX;AACAA,aAAK,GAAG,CAAR;AACH;;AAED,UAAG,CAAC7H,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKsX,aAAxB,EAAuCvN,KAAvC,EAA8CsN,GAA9C,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAACjX,SAAN,CAAgB2J,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAtC,EACI,OAAO7H,QAAQ,CAAC,iCAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBiX,GAAhB,CAAD,IAAyBA,GAAG,IAAItN,KAAnC,EACI,OAAO7H,QAAQ,CAAC,+BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,4BAA9B,EAA4D;AACxDgW,gBAAQ,EAAEjT,QAAQ,CAACyF,KAAD,CADsC;AAExDyN,cAAM,EAAElT,QAAQ,CAAC+S,GAAD,CAAR,GAAgB;AAFgC,OAA5D,EAGG,MAHH,EAGW7V,IAHX,CAGgB,kBAAoB;AAAA,kCAAjBuF,KAAiB;AAAA,YAAjBA,KAAiB,6BAAT,EAAS;AAChC7E,gBAAQ,CAAC,IAAD,EAAO6E,KAAP,CAAR;AACH,OALD,EAKGtF,KALH,CAKS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OALZ;AAMH;;;+CAE0C;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AACvC,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKyX,wBAAxB,CAAP;AAEJ,WAAKxR,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsDC,IAAtD,CAA2D,kBAAwB;AAAA,sCAArBkW,SAAqB;AAAA,YAArBA,SAAqB,iCAAT,EAAS;AAC/ExV,gBAAQ,CAAC,IAAD,EAAOwV,SAAP,CAAR;AACH,OAFD,EAEGjW,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;;;iCAEmD;AAAA;;AAAA,UAAzC+S,KAAyC,uEAAjC,CAAiC;AAAA,UAA9BC,MAA8B,uEAArB,CAAqB;AAAA,UAAlBxT,QAAkB,uEAAP,KAAO;;AAChD,UAAG,6CAAK,CAACuF,UAAN,CAAiBiO,MAAjB,CAAH,EAA6B;AACzBxT,gBAAQ,GAAGwT,MAAX;AACAA,cAAM,GAAG,CAAT;AACH;;AAED,UAAG,6CAAK,CAACjO,UAAN,CAAiBgO,KAAjB,CAAH,EAA4B;AACxBvT,gBAAQ,GAAGuT,KAAX;AACAA,aAAK,GAAG,CAAR;AACH;;AAED,UAAG,CAACvT,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK2X,UAAxB,EAAoClC,KAApC,EAA2CC,MAA3C,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAACtV,SAAN,CAAgBqV,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,CAA9D,EACI,OAAOvT,QAAQ,CAAC,wBAAD,CAAf;AAEJ,UAAG,CAAC,6CAAK,CAAC9B,SAAN,CAAgBsV,MAAhB,CAAD,IAA4BA,MAAM,GAAG,CAAxC,EACI,OAAOxT,QAAQ,CAAC,yBAAD,CAAf;;AAEJ,UAAG,CAACuT,KAAJ,EAAW;AACP,eAAO,KAAKxP,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,0BAA9B,EAA0DC,IAA1D,CAA+D,kBAAyB;AAAA,yCAAtBqV,UAAsB;AAAA,cAAtBA,UAAsB,kCAAT,EAAS;AAC3F3U,kBAAQ,CAAC,IAAD,EAAO2U,UAAU,CAACtU,GAAX,CAAe,UAAAuS,KAAK;AAAA,mBAAI,MAAI,CAACiC,UAAL,CAAgBjC,KAAhB,CAAJ;AAAA,WAApB,CAAP,CAAR;AACH,SAFM,EAEJrT,KAFI,CAEE,UAAAiB,GAAG;AAAA,iBAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,SAFL,CAAP;AAGH;;AAED,WAAKuD,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,mCAA9B,EAAmE;AAC/DmU,cAAM,EAAEpR,QAAQ,CAACoR,MAAD,CAD+C;AAE/DD,aAAK,EAAEnR,QAAQ,CAACmR,KAAD;AAFgD,OAAnE,EAGG,MAHH,EAGWjU,IAHX,CAGgB,kBAAyB;AAAA,uCAAtBqV,UAAsB;AAAA,YAAtBA,UAAsB,kCAAT,EAAS;AACrC3U,gBAAQ,CAAC,IAAD,EAAO2U,UAAU,CAACtU,GAAX,CAAe,UAAAuS,KAAK;AAAA,iBAAI,MAAI,CAACiC,UAAL,CAAgBjC,KAAhB,CAAJ;AAAA,SAApB,CAAP,CAAR;AACH,OALD,EAKGrT,KALH,CAKS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OALZ;AAMH;;;6CAEwC;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AACrC,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK4X,sBAAxB,CAAP;AAEJ,WAAK3R,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,+BAA9B,EAA+DC,IAA/D,CAAoE,kBAAkB;AAAA,gCAAfsQ,GAAe;AAAA,YAAfA,GAAe,2BAAT,CAAC,CAAQ;AAClF,YAAGA,GAAG,IAAI,CAAC,CAAX,EACI,OAAO5P,QAAQ,CAAC,0CAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAO5B,IAAI,CAACuX,KAAL,CAAW/F,GAAG,GAAG,IAAjB,CAAP,CAAR;AACH,OALD,EAKGrQ,KALH,CAKS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OALZ;AAMH;;;gCAEWZ,e,EAAmC;AAAA,UAAlBI,QAAkB,uEAAP,KAAO;AAC3C,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK4J,WAAxB,EAAqC9H,eAArC,CAAP;AAEJ,UAAG,CAAC,KAAKmE,OAAL,CAAarF,SAAb,CAAuBkB,eAAvB,CAAJ,EACI,OAAOI,QAAQ,CAAC,mCAAD,CAAf;AAEJJ,qBAAe,GAAG,KAAKmE,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BiB,eAA3B,CAAlB;AAEA,WAAKmE,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,oBAA9B,EAAoD;AAChDqD,aAAK,EAAE9C;AADyC,OAApD,EAEGN,IAFH,CAEQ,UAAAiI,QAAQ,EAAI;AAChB,YAAGA,QAAQ,CAACpJ,KAAZ,EACI,OAAO6B,QAAQ,CAAC,yBAAD,CAAf;AAEJA,gBAAQ,CAAC,IAAD,EAAOuH,QAAP,CAAR;AACH,OAPD,EAOGhI,KAPH,CAOS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAPZ;AAQH;;;;;;;;;;;;;;;;;;;;;;AAEmBmO,uB,8DAAU,K;AAAOjI,yB,8DAAY,K;AAAOnI,uB,8DAAU,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BE,M;AAAQqY,6B,8DAAgB,I;AAAM5V,wB,8DAAW,K;;AACnI,oBAAG,6CAAK,CAACuF,UAAN,CAAiBhH,OAAjB,CAAH,EAA8B;AAC1ByB,0BAAQ,GAAGzB,OAAX;AACAA,yBAAO,GAAG,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BE,MAAtC;AACAqY,+BAAa,GAAG,IAAhB;AACH;;AAED,oBAAG,6CAAK,CAACrQ,UAAN,CAAiBqQ,aAAjB,CAAH,EAAoC;AAChC5V,0BAAQ,GAAG4V,aAAX;AACAA,+BAAa,GAAG,IAAhB;AACH;;oBAEG5V,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAK+X,aAAxB,EAAuClH,OAAvC,EAAgDjI,SAAhD,EAA2DnI,OAA3D,EAAoEqX,aAApE,C;;;oBAEP,6CAAK,CAACnU,KAAN,CAAYkN,OAAZ,C;;;;;kDACO3O,QAAQ,CAAC,4BAAD,C;;;AAEnB,oBAAG2O,OAAO,CAACtM,MAAR,CAAe,CAAf,EAAkB,CAAlB,KAAwB,IAA3B,EACIsM,OAAO,GAAGA,OAAO,CAACzM,SAAR,CAAkB,CAAlB,CAAV;AAEJ,oBAAGwE,SAAS,CAACrE,MAAV,CAAiB,CAAjB,EAAoB,CAApB,KAA0B,IAA7B,EACIqE,SAAS,GAAGA,SAAS,CAACrE,MAAV,CAAiB,CAAjB,CAAZ;AAEEyT,4B,mFACC,6CAAaC,WAAb,CAAyBH,aAAa,GAAGnD,kBAAH,GAAwBC,kBAA9D,C,yFACA,6CAAK,CAACvQ,IAAN,CAAWkB,gBAAX,CAA4BsL,OAA5B,C;AAGDqH,6B,GAAgB,6CAAaC,SAAb,CAAuBH,YAAvB,C;AAChBI,yB,GAAY,6CAAaC,cAAb,CAA4BH,aAA5B,EAA2C;AACzDI,+BAAa,EAAE1P,SAAS,CAACxE,SAAV,CAAoB,GAApB,EAAyB,GAAzB,KAAiC,IAAjC,GAAwC,CAAxC,GAA4C,CADF;AAEzDmU,mBAAC,EAAE,OAAO3P,SAAS,CAACxE,SAAV,CAAoB,CAApB,EAAuB,EAAvB,CAF+C;AAGzDoU,mBAAC,EAAE,OAAO5P,SAAS,CAACxE,SAAV,CAAoB,EAApB,EAAwB,GAAxB;AAH+C,iBAA3C,C;AAMZqU,2B,GAAc,OAAOL,SAAS,CAAC7T,MAAV,CAAiB,CAAjB,C;AACrBmU,6B,GAAgB,KAAKzS,OAAL,CAAaxF,OAAb,CAAqBK,OAArB,CAA6B2X,WAA7B,C;;sBAEnBC,aAAa,IAAI,KAAKzS,OAAL,CAAaxF,OAAb,CAAqBK,OAArB,CAA6BL,OAA7B,C;;;;;kDACTyB,QAAQ,CAAC,IAAD,EAAO,IAAP,C;;;AAEnBA,wBAAQ,CAAC,0BAAD,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGOmH,2B,8DAAc,K;AAAOxK,0B,8DAAa,KAAKoH,OAAL,CAAa3G,iB;AAAmBwY,6B,8DAAgB,I;AAAM5V,wB,8DAAW,K;;AAC1G,oBAAG,6CAAK,CAACuF,UAAN,CAAiB5I,UAAjB,CAAH,EAAiC;AAC7BqD,0BAAQ,GAAGrD,UAAX;AACAA,4BAAU,GAAG,KAAKoH,OAAL,CAAa3G,iBAA1B;AACAwY,+BAAa,GAAG,IAAhB;AACH;;AAED,oBAAG,6CAAK,CAACrQ,UAAN,CAAiBqQ,aAAjB,CAAH,EAAoC;AAChC5V,0BAAQ,GAAG4V,aAAX;AACAA,+BAAa,GAAG,IAAhB;AACH;;oBAEG5V,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKsJ,IAAxB,EAA8BD,WAA9B,EAA2CxK,UAA3C,EAAuDiZ,aAAvD,C;;;qBAGR,6CAAK,CAAChZ,QAAN,CAAeuK,WAAf,C;;;;;AACC,oBAAGA,WAAW,CAACjF,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,KAA+B,IAAlC,EACIiF,WAAW,GAAGA,WAAW,CAACjF,SAAZ,CAAsB,CAAtB,CAAd;;oBAEA,6CAAK,CAACT,KAAN,CAAY0F,WAAZ,C;;;;;kDACOnH,QAAQ,CAAC,4BAAD,C;;;;AAGTyW,0B,GAAa,IAAI,6CAAaC,UAAjB,CAA4B/Z,UAA5B,C;AACbmZ,4B,mFACC,6CAAaC,WAAb,CAAyBH,aAAa,GAAGnD,kBAAH,GAAwBC,kBAA9D,C,yFACA,6CAAK,CAACvQ,IAAN,CAAWkB,gBAAX,CAA4B8D,WAA5B,C;AAGD6O,6B,GAAgB,6CAAaC,SAAb,CAAuBH,YAAvB,C;AAChBpP,yB,GAAY+P,UAAU,CAACE,UAAX,CAAsBX,aAAtB,C;AAEZY,4B,GAAe,CACjB,IADiB,EAEjBlQ,SAAS,CAAC2P,CAAV,CAAYnU,SAAZ,CAAsB,CAAtB,CAFiB,EAGjBwE,SAAS,CAAC4P,CAAV,CAAYpU,SAAZ,CAAsB,CAAtB,CAHiB,EAIjB2U,MAAM,CAACnQ,SAAS,CAACoQ,CAAX,CAAN,CAAoBjV,QAApB,CAA6B,EAA7B,CAJiB,EAKnBzB,IALmB,CAKd,EALc,C;kDAOdJ,QAAQ,CAAC,IAAD,EAAO4W,YAAP,C;;;;;AAEf5W,wBAAQ,cAAR;;;oBAIJ,6CAAK,CAACyL,QAAN,CAAetE,WAAf,C;;;;;kDACOnH,QAAQ,CAAC,8BAAD,C;;;qBAEhBmH,WAAW,CAACT,S;;;;;kDACJ1G,QAAQ,CAAC,+BAAD,C;;;;AAGTzB,uB,GAAU,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CACZ,KAAKoF,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoC7B,UAApC,CADY,EAEd+G,WAFc,E;;sBAIbnF,OAAO,KAAK4I,WAAW,CAAC2M,QAAZ,CAAqBvM,QAArB,CAA8B,CAA9B,EAAiCkH,SAAjC,CAA2C/L,KAA3C,CAAiD2J,aAAjD,CAA+D3I,WAA/D,E;;;;;kDACJ1D,QAAQ,CAAC,mDAAD,C;;;kDAEZA,QAAQ,CAAC,IAAD,EACX,6CAAK,CAACmD,MAAN,CAAa4T,eAAb,CAA6Bpa,UAA7B,EAAyCwK,WAAzC,CADW,C;;;;;AAIfnH,wBAAQ,cAAR;;;;;;;;;;;;;;;;yCAIwD;AAAA,UAA7CqH,iBAA6C,uEAAzB,KAAyB;AAAA,UAAlBrH,QAAkB,uEAAP,KAAO;AAC5D,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKwJ,kBAAxB,EAA4CD,iBAA5C,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAACoE,QAAN,CAAepE,iBAAf,CAAJ,EACI,OAAOrH,QAAQ,CAAC,8BAAD,CAAf;AAEJ,UAAG,CAACqH,iBAAiB,CAACX,SAAnB,IAAgC,CAAC,6CAAK,CAAChH,OAAN,CAAc2H,iBAAiB,CAACX,SAAhC,CAApC,EACI,OAAO1G,QAAQ,CAAC,2BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CACI,6BADJ,EAEIgI,iBAFJ,EAGI,MAHJ,EAIE/H,IAJF,CAIO,UAAAkC,MAAM,EAAI;AACbxB,gBAAQ,CAAC,IAAD,EAAOwB,MAAP,CAAR;AACH,OAND,EAMGjC,KANH,CAMS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OANZ;AAOH;;;;;;;;;;;;;;;;;;;;AAEqB0L,kB,8DAAK,K;AAAOhJ,sB,8DAAS,K;AAAOsB,uB,8DAAU,E;AAAIxE,wB,8DAAW,K;;AACvE,oBAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,OAAOA,OAAP,KAAmB,QAAtB,EACIA,OAAO,GAAG;AAAE7H,4BAAU,EAAE6H;AAAd,iBAAV;;oBAEAxE,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKkZ,eAAxB,EAAyC9K,EAAzC,EAA6ChJ,MAA7C,EAAqDsB,OAArD,C;;;oBAEP,KAAKT,OAAL,CAAarF,SAAb,CAAuBwN,EAAvB,C;;;;;kDACOlM,QAAQ,CAAC,4BAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,C;;;;;kDAC9BlD,QAAQ,CAAC,yBAAD,C;;;AAEnBwE,uBAAO,GAAG;AACN7H,4BAAU,EAAE,KAAKoH,OAAL,CAAa3G,iBADtB;AAEHmB,yBAAO,EAAE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC;AAFlC,mBAGAkH,OAHA,CAAP;;sBAMG,CAACA,OAAO,CAAC7H,UAAT,IAAuB,CAAC6H,OAAO,CAACjG,O;;;;;kDACxByB,QAAQ,CAAC,6DAAD,C;;;;AAGTzB,uB,GAAUiG,OAAO,CAAC7H,UAAR,GAAqB,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoCgG,OAAO,CAAC7H,UAA5C,CAArB,GAA+E6H,OAAO,CAACjG,O;;uBAC7E,KAAKwF,OAAL,CAAapG,kBAAb,CAAgCwO,OAAhC,CAAwCD,EAAxC,EAA4ChJ,MAA5C,EAAoD3E,OAApD,C;;;AAApB4I,2B;;uBAC0B,KAAKC,IAAL,CAAUD,WAAV,EAAuB3C,OAAO,CAAC7H,UAAR,IAAsBsa,SAA7C,C;;;AAA1B5P,iC;;uBACe,KAAKC,kBAAL,CAAwBD,iBAAxB,C;;;AAAf7F,sB;kDAECxB,QAAQ,CAAC,IAAD,EAAOwB,MAAP,C;;;;;kDAERxB,QAAQ,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIPkM,kB,8DAAK,K;AAAOhJ,sB,8DAAS,K;AAAOoJ,uB,8DAAU,K;AAAO9H,uB,8DAAU,E;AAAIxE,wB,8DAAW,K;;AAClF,oBAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,OAAOA,OAAP,KAAmB,QAAtB,EACIA,OAAO,GAAG;AAAE7H,4BAAU,EAAE6H;AAAd,iBAAV;;oBAEAxE,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKyO,SAAxB,EAAmCL,EAAnC,EAAuChJ,MAAvC,EAA+CoJ,OAA/C,EAAwD9H,OAAxD,C;;;oBAEP,KAAKT,OAAL,CAAarF,SAAb,CAAuBwN,EAAvB,C;;;;;kDACOlM,QAAQ,CAAC,4BAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,C;;;;;kDAC9BlD,QAAQ,CAAC,yBAAD,C;;;oBAEf,6CAAK,CAACpD,QAAN,CAAe0P,OAAf,C;;;;;kDACOtM,QAAQ,CAAC,2BAAD,C;;;AAEnBwE,uBAAO,GAAG;AACN7H,4BAAU,EAAE,KAAKoH,OAAL,CAAa3G,iBADtB;AAEHmB,yBAAO,EAAE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC;AAFlC,mBAGAkH,OAHA,CAAP;;sBAMG,CAACA,OAAO,CAAC7H,UAAT,IAAuB,CAAC6H,OAAO,CAACjG,O;;;;;kDACxByB,QAAQ,CAAC,6DAAD,C;;;;AAGTzB,uB,GAAUiG,OAAO,CAAC7H,UAAR,GAAqB,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoCgG,OAAO,CAAC7H,UAA5C,CAArB,GAA+E6H,OAAO,CAACjG,O;;uBAC7E,KAAKwF,OAAL,CAAapG,kBAAb,CAAgC4O,SAAhC,CAA0CL,EAA1C,EAA8ChJ,MAA9C,EAAsDoJ,OAAtD,EAA+D/N,OAA/D,C;;;AAApB4I,2B;;uBAC0B,KAAKC,IAAL,CAAUD,WAAV,EAAuB3C,OAAO,CAAC7H,UAAR,IAAsBsa,SAA7C,C;;;AAA1B5P,iC;;uBACe,KAAKC,kBAAL,CAAwBD,iBAAxB,C;;;AAAf7F,sB;kDAECxB,QAAQ,CAAC,IAAD,EAAOwB,MAAP,C;;;;;kDAERxB,QAAQ,c;;;;;;;;;;;;;;AAI3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWwBkD,sB,8DAAS,C;AAAG0J,wB,8DAAW,C;AAAGC,wB,8DAAW,W;AAAarI,uB,8DAAU,E;AAAIxE,wB,8DAAW,K;;AAE3F,oBAAG,6CAAK,CAACuF,UAAN,CAAiBqH,QAAjB,CAAH,EAA+B;AAC3B5M,0BAAQ,GAAG4M,QAAX;AACAA,0BAAQ,GAAG,CAAX;AACH;;AAED,oBAAG,6CAAK,CAACrH,UAAN,CAAiBsH,QAAjB,CAAH,EAA+B;AAC3B7M,0BAAQ,GAAG6M,QAAX;AACAA,0BAAQ,GAAG,WAAX;AACH;;AAED,oBAAG,6CAAK,CAACtH,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,OAAOA,OAAP,KAAmB,QAAtB,EACIA,OAAO,GAAG;AAAE7H,4BAAU,EAAE6H;AAAd,iBAAV;;oBAEAxE,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKgP,aAAxB,EAAuC5J,MAAvC,EAA+C0J,QAA/C,EAAyDC,QAAzD,EAAmErI,OAAnE,C;;;oBAEP,CAAE,WAAF,EAAe,QAAf,EAA0BvG,QAA1B,CAAmC4O,QAAnC,C;;;;;kDACO7M,QAAQ,CAAC,6DAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgBgF,MAAhB,CAAD,IAA4BA,MAAM,IAAI,C;;;;;kDAC9BlD,QAAQ,CAAC,yBAAD,C;;;sBAEhB,CAAC,6CAAK,CAAC9B,SAAN,CAAgB0O,QAAhB,CAAD,IAA8BA,QAAQ,GAAG,C;;;;;kDACjC5M,QAAQ,CAAC,8CAAD,C;;;AAEnBwE,uBAAO,GAAG;AACN7H,4BAAU,EAAE,KAAKoH,OAAL,CAAa3G,iBADtB;AAEHmB,yBAAO,EAAE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC;AAFlC,mBAGAkH,OAHA,CAAP;;sBAMG,CAACA,OAAO,CAAC7H,UAAT,IAAuB,CAAC6H,OAAO,CAACjG,O;;;;;kDACxByB,QAAQ,CAAC,6DAAD,C;;;;AAGTzB,uB,GAAUiG,OAAO,CAAC7H,UAAR,GAAqB,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoCgG,OAAO,CAAC7H,UAA5C,CAArB,GAA+E6H,OAAO,CAACjG,O;;uBAC3E,KAAKwF,OAAL,CAAapG,kBAAb,CAAgCmP,aAAhC,CAA8C5J,MAA9C,EAAsD0J,QAAtD,EAAgEC,QAAhE,EAA0EtO,OAA1E,C;;;AAAtBuO,6B;;uBAC0B,KAAK1F,IAAL,CAAU0F,aAAV,EAAyBtI,OAAO,CAAC7H,UAAR,IAAsBsa,SAA/C,C;;;AAA1B5P,iC;;uBACe,KAAKC,kBAAL,CAAwBD,iBAAxB,C;;;AAAf7F,sB;kDAECxB,QAAQ,CAAC,IAAD,EAAOwB,MAAP,C;;;;;kDAERxB,QAAQ,c;;;;;;;;;;;;;;AAIvB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQsB6M,wB,8DAAW,W;AAAarI,uB,8DAAU,E;AAAIxE,wB,8DAAW,K;;AAEnE,oBAAG,6CAAK,CAACuF,UAAN,CAAiBsH,QAAjB,CAAH,EAA+B;AAC3B7M,0BAAQ,GAAG6M,QAAX;AACAA,0BAAQ,GAAG,WAAX;AACH;;AAED,oBAAG,6CAAK,CAACtH,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,OAAOA,OAAP,KAAmB,QAAtB,EACIA,OAAO,GAAG;AAAE7H,4BAAU,EAAE6H;AAAd,iBAAV;;oBAEAxE,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKmP,eAAxB,EAAyCJ,QAAzC,EAAmDrI,OAAnD,C;;;oBAEP,CAAE,WAAF,EAAe,QAAf,EAA0BvG,QAA1B,CAAmC4O,QAAnC,C;;;;;kDACO7M,QAAQ,CAAC,6DAAD,C;;;AAEnBwE,uBAAO,GAAG;AACN7H,4BAAU,EAAE,KAAKoH,OAAL,CAAa3G,iBADtB;AAEHmB,yBAAO,EAAE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC;AAFlC,mBAGAkH,OAHA,CAAP;;sBAMG,CAACA,OAAO,CAAC7H,UAAT,IAAuB,CAAC6H,OAAO,CAACjG,O;;;;;kDACxByB,QAAQ,CAAC,6DAAD,C;;;;AAGTzB,uB,GAAUiG,OAAO,CAAC7H,UAAR,GAAqB,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoCgG,OAAO,CAAC7H,UAA5C,CAArB,GAA+E6H,OAAO,CAACjG,O;;uBACzE,KAAKwF,OAAL,CAAapG,kBAAb,CAAgCsP,eAAhC,CAAgDJ,QAAhD,EAA0DtO,OAA1D,C;;;AAAxB0O,+B;;uBAC0B,KAAK7F,IAAL,CAAU6F,eAAV,EAA2BzI,OAAO,CAAC7H,UAAR,IAAsBsa,SAAjD,C;;;AAA1B5P,iC;;uBACe,KAAKC,kBAAL,CAAwBD,iBAAxB,C;;;AAAf7F,sB;kDAECxB,QAAQ,CAAC,IAAD,EAAOwB,MAAP,C;;;;;kDAERxB,QAAQ,c;;;;;;;;;;;;;;AAIvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUoBoQ,2B,8DAAc,K;AAAO5L,uB,8DAAU,E;AAAKxE,wB,8DAAW,K;;AAE/D,oBAAG,6CAAK,CAACuF,UAAN,CAAiBf,OAAjB,CAAH,EAA8B;AAC1BxE,0BAAQ,GAAGwE,OAAX;AACAA,yBAAO,GAAG,EAAV;AACH;;AAED,oBAAG,OAAOA,OAAP,KAAmB,QAAtB,EACIA,OAAO,GAAG;AAAE7H,4BAAU,EAAE6H;AAAd,iBAAV;;oBAEAxE,Q;;;;;kDACO,KAAKlC,aAAL,CAAmB,KAAKuS,aAAxB,EAAuCD,WAAvC,EAAoD5L,OAApD,C;;;sBAGP,CAAC,6CAAK,CAAC5H,QAAN,CAAewT,WAAf,CAAD,IAAgC,CAACA,WAAW,CAACnO,M;;;;;kDACtCjC,QAAQ,CAAC,uBAAD,C;;;AAGnBwE,uBAAO,GAAG;AACN7H,4BAAU,EAAE,KAAKoH,OAAL,CAAa3G,iBADtB;AAEHmB,yBAAO,EAAE,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC;AAFlC,mBAGAkH,OAHA,CAAP;;sBAMG,CAACA,OAAO,CAAC7H,UAAT,IAAuB,CAAC6H,OAAO,CAACjG,O;;;;;kDACxByB,QAAQ,CAAC,6DAAD,C;;;;AAGTzB,uB,GAAUiG,OAAO,CAAC7H,UAAR,GAAqB,KAAKoH,OAAL,CAAaxF,OAAb,CAAqBC,cAArB,CAAoCgG,OAAO,CAAC7H,UAA5C,CAArB,GAA+E6H,OAAO,CAACjG,O;;uBAC3E,KAAKwF,OAAL,CAAapG,kBAAb,CAAgC0S,aAAhC,CAA8CD,WAA9C,EAA2D7R,OAA3D,C;;;AAAtB8R,6B;;uBAC0B,KAAKjJ,IAAL,CAAUiJ,aAAV,EAAyB7L,OAAO,CAAC7H,UAAR,IAAsBsa,SAA/C,C;;;AAA1B5P,iC;;uBACe,KAAKC,kBAAL,CAAwBD,iBAAxB,C;;;AAAf7F,sB;kDAECxB,QAAQ,CAAC,IAAD,EAAOwB,MAAP,C;;;;;kDAERxB,QAAQ,c;;;;;;;;;;;;;;;;kCAIF;AACjB,aAAO,KAAKoH,IAAL,uBAAP;AACH;;;gCAEkB;AACf,aAAO,KAAKmF,SAAL,uBAAP;AACH;;;2BAEa;AACV,aAAO,KAAKyK,eAAL,uBAAP;AACH;;;8BAEgB;AACb,aAAO,KAAKA,eAAL,uBAAP;AACH;;;gCAEkB;AACf,aAAO,KAAK1P,kBAAL,uBAAP;AACH;;;sCAEwB;AACrB,aAAO,KAAKF,IAAL,uBAAP;AACH;AAED;;;;;;kCAGkD;AAAA,UAAtCuJ,UAAsC,uEAAzB,KAAyB;AAAA,UAAlB3Q,QAAkB,uEAAP,KAAO;AAC9C,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKoZ,WAAxB,EAAqCvG,UAArC,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAACzS,SAAN,CAAgByS,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO3Q,QAAQ,CAAC,6BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,wBAA9B,EAAwD;AACpD8X,UAAE,EAAE/U,QAAQ,CAACuO,UAAD;AADwC,OAAxD,EAEG,MAFH,EAEWrR,IAFX,CAEgB,UAAA8X,QAAQ,EAAI;AACxBpX,gBAAQ,CAAC,IAAD,EAAOoX,QAAP,CAAR;AACH,OAJD,EAIG7X,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;AAED;;;;;;oCAGgC;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AAC5B,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKuZ,aAAxB,CAAP;AAEJ,WAAKtT,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD,EAAtD,EAA0D,MAA1D,EAAkEC,IAAlE,CAAuE,kBAAwB;AAAA,sCAArBgY,SAAqB;AAAA,YAArBA,SAAqB,iCAAT,EAAS;AAC3FtX,gBAAQ,CAAC,IAAD,EAAOsX,SAAP,CAAR;AACH,OAFD,EAEG/X,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;AAED;;;;;;yCAGqC;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AACjC,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAKyZ,kBAAxB,CAAP;AAEJ,WAAKxT,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,2BAA9B,EAA2D,EAA3D,EAA+D,MAA/D,EAAuEC,IAAvE,CAA4E,kBAA6B;AAAA,2CAA1BkY,cAA0B;AAAA,YAA1BA,cAA0B,sCAAT,EAAS;AACrGxX,gBAAQ,CAAC,IAAD,EAAOwX,cAAP,CAAR;AACH,OAFD,EAEGjY,KAFH,CAES,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFZ;AAGH;AAED;;;;;;0CAGiF;AAAA,UAA7DjC,OAA6D,uEAAnD,KAAKwF,OAAL,CAAa1G,cAAb,CAA4BC,GAAuB;AAAA,UAAlB0C,QAAkB,uEAAP,KAAO;AAC7E,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK2Z,mBAAxB,EAA6ClZ,OAA7C,CAAP;AAEJ,UAAG,CAAC,KAAKwF,OAAL,CAAarF,SAAb,CAAuBH,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDd,eAAO,EAAE,KAAKwF,OAAL,CAAaxF,OAAb,CAAqBI,KAArB,CAA2BJ,OAA3B;AAD8C,OAA3D,EAEG,MAFH,EAEWe,IAFX,CAEgB,UAAAsS,SAAS,EAAI;AACzB5R,gBAAQ,CAAC,IAAD,EAAO4R,SAAP,CAAR;AACH,OAJD,EAIGrS,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;AAED;;;;;;sCAGsD;AAAA,UAAtCqR,UAAsC,uEAAzB,KAAyB;AAAA,UAAlB7R,QAAkB,uEAAP,KAAO;AAClD,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK4Z,eAAxB,EAAyC7F,UAAzC,CAAP;AAEJ,UAAG,CAAC,6CAAK,CAAC3T,SAAN,CAAgB2T,UAAhB,CAAD,IAAgCA,UAAU,GAAG,CAAhD,EACI,OAAO7R,QAAQ,CAAC,6BAAD,CAAf;AAEJ,WAAK+D,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDqD,aAAK,EAAEmP;AAD6C,OAAxD,EAEG,MAFH,EAEWvS,IAFX,CAEgB,UAAAqY,QAAQ,EAAI;AACxB3X,gBAAQ,CAAC,IAAD,EAAO2X,QAAP,CAAR;AACH,OAJD,EAIGpY,KAJH,CAIS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAJZ;AAKH;AAED;;;;;;oCAGgC;AAAA,UAAlBR,QAAkB,uEAAP,KAAO;AAC5B,UAAG,CAACA,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK8Z,aAAxB,CAAP;AAEJ,WAAK7T,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,sBAA9B,EAAsD,EAAtD,EAA0D,MAA1D,EAAkEC,IAAlE,CAAuE,kBAAwB;AAAA,sCAArBuY,SAAqB;AAAA,YAArBA,SAAqB,iCAAT,EAAS;AAC3F7X,gBAAQ,CAAC,IAAD,EAAO6X,SAAP,CAAR;AACH,OAFD,EAEG,MAFH,EAEWtY,KAFX,CAEiB,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OAFpB;AAGH;AAED;;;;;;6CAGiE;AAAA,UAA1C+S,KAA0C,uEAAlC,EAAkC;AAAA,UAA9BC,MAA8B,uEAArB,CAAqB;AAAA,UAAlBxT,QAAkB,uEAAP,KAAO;;AAC7D,UAAG,6CAAK,CAACuF,UAAN,CAAiBiO,MAAjB,CAAH,EAA6B;AACzBxT,gBAAQ,GAAGwT,MAAX;AACAA,cAAM,GAAG,CAAT;AACH;;AACD,UAAG,6CAAK,CAACjO,UAAN,CAAiBgO,KAAjB,CAAH,EAA4B;AACxBvT,gBAAQ,GAAGuT,KAAX;AACAA,aAAK,GAAG,EAAR;AACH;;AACD,UAAG,CAACvT,QAAJ,EACI,OAAO,KAAKlC,aAAL,CAAmB,KAAK8Z,aAAxB,CAAP;AAEJ,WAAK7T,OAAL,CAAavH,QAAb,CAAsB6C,OAAtB,CAA8B,+BAA9B,EAA+D;AAC3DkU,aAAK,EAALA,KAD2D;AAE3DC,cAAM,EAANA;AAF2D,OAA/D,EAGG,MAHH,EAGWlU,IAHX,CAGgB,kBAAwB;AAAA,sCAArBuY,SAAqB;AAAA,YAArBA,SAAqB,iCAAT,EAAS;AACpC7X,gBAAQ,CAAC,IAAD,EAAO6X,SAAP,CAAR;AACH,OALD,EAKGtY,KALH,CAKS,UAAAiB,GAAG;AAAA,eAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,OALZ;AAMH;;;;;;;AACJ,C;;;;;;;;;;;;;;;;;;;;;ACrgCD;AACA;AAEA,IAAM2N,QAAQ,GAAG,IAAI,6CAAaC,QAAjB,EAAjB;AAEO,SAAS3F,YAAT,CAAsBF,KAAtB,EAA6BC,KAA7B,EAAoCF,MAApC,EAA4CwP,gBAA5C,EAA8D;AAEjE,MAAI,CAACxP,MAAD,IAAW,OAAOA,MAAP,KAAkB,SAAjC,EAA4C;AACxCwP,oBAAgB,GAAGxP,MAAnB;AACAA,UAAM,GAAGE,KAAT;AACAA,SAAK,GAAGD,KAAR;AACAA,SAAK,GAAG,EAAR;AACH;;AAED,MAAIuP,gBAAgB,IAAIxP,MAAM,CAAC5G,OAAP,CAAe,KAAf,EAAqB,EAArB,EAAyBO,MAAzB,GAAkC,EAAlC,KAAyC,CAAjE,EACIqG,MAAM,GAAG,OAAOA,MAAM,CAAC5G,OAAP,CAAe,KAAf,EAAqB,EAArB,EAAyBQ,SAAzB,CAAmC,CAAnC,CAAhB;AAEJ,MAAIoG,MAAM,CAAC5G,OAAP,CAAe,KAAf,EAAqB,EAArB,EAAyBO,MAAzB,GAAkC,EAAtC,EACI,MAAM,IAAI9D,KAAJ,CAAU,uEAAV,CAAN;AAEJ,SAAOgQ,QAAQ,CAAC4J,MAAT,CAAgBvP,KAAhB,EAAuBF,MAAvB,EAA+BwM,MAA/B,CAAsC,UAACkD,GAAD,EAAM9O,GAAN,EAAWjE,KAAX,EAAqB;AAC9D,QAAGuD,KAAK,CAACvD,KAAD,CAAL,IAAgB,SAAnB,EACIiE,GAAG,GAAG,OAAOA,GAAG,CAAC7G,MAAJ,CAAW,CAAX,EAAcqB,WAAd,EAAb;AAEJ,QAAG6E,KAAK,CAACtG,MAAT,EACI+V,GAAG,CAACzP,KAAK,CAACtD,KAAD,CAAN,CAAH,GAAoBiE,GAApB,CADJ,KAEK8O,GAAG,CAAC7X,IAAJ,CAAS+I,GAAT;AAEL,WAAO8O,GAAP;AACH,GATM,EASJzP,KAAK,CAACtG,MAAN,GAAe,EAAf,GAAoB,EAThB,CAAP;AAUH;AAEM,SAASgW,YAAT,CAAsBzP,KAAtB,EAA6BzJ,MAA7B,EAAqC;AAExC,OAAK,IAAIgD,CAAC,GAAE,CAAZ,EAAcA,CAAC,GAACyG,KAAK,CAACvG,MAAtB,EAA6BF,CAAC,EAA9B,EAAkC;AAC9B,QAAIyG,KAAK,CAACzG,CAAD,CAAL,KAAa,SAAjB,EAA4B;AACxBhD,YAAM,CAACgD,CAAD,CAAN,GAAa,6CAAO,CAACxD,OAAR,CAAgBI,KAAhB,CAAsBI,MAAM,CAACgD,CAAD,CAA5B,EAAiCL,OAAjC,CAAyC,KAAzC,EAAgD,IAAhD,CAAb;AACH;AACJ;;AAED,SAAOyM,QAAQ,CAACE,MAAT,CAAgB7F,KAAhB,EAAuBzJ,MAAvB,CAAP;AACH,C;;;;;;;;;;;;;;;;;;;ACzCD;AACA;AAOO,SAAS0E,eAAT,GAA2B;AAC9B,MAAMyU,WAAW,GAAG,yDAAS,EAA7B;AACA,MAAMC,WAAW,GAAG,mEAAmB,CAACD,WAAD,CAAvC;AACA,MAAME,YAAY,GAAG,oEAAoB,CAACF,WAAD,CAAzC;AAEA,MAAMvb,UAAU,GAAG,+DAAgB,CAACub,WAAD,CAAnC;AACA,MAAMG,SAAS,GAAG,+DAAgB,CAACF,WAAD,CAAlC;AAEA,SAAO;AACHxb,cAAU,EAAVA,UADG;AAEH0b,aAAS,EAATA,SAFG;AAGH9Z,WAAO,EAAE;AACLhB,YAAM,EAAE,qEAAqB,CAAC6a,YAAD,CADxB;AAEL9a,SAAG,EAAE,+DAAgB,CAAC8a,YAAD;AAFhB;AAHN,GAAP;AAQH,C;;;;;;;;;;;;;;;;;;;ACxBM,IAAME,YAAY,GAAG,EAArB;AACA,IAAMC,cAAc,GAAG,IAAvB;AACA,IAAMC,mBAAmB,GAAG,IAA5B,C;;;;;;;;;;;;;;;;;;ACFP,IAAMC,QAAQ,GAAG,4DAAjB;AACA,IAAMC,YAAY,GAAG,EAArB;;AAEA,KAAK,IAAI3W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0W,QAAQ,CAACxW,MAA7B,EAAqCF,CAAC,EAAtC;AACI2W,cAAY,CAACD,QAAQ,CAACE,MAAT,CAAgB5W,CAAhB,CAAD,CAAZ,GAAmCA,CAAnC;AADJ;;AAGA,IAAM6W,IAAI,GAAG,EAAb;AAEO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAAC7W,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIF,CAAJ;AACA,MAAIgX,CAAJ;AAEA,MAAMC,MAAM,GAAG,CAAC,CAAD,CAAf;;AAEA,OAAKjX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+W,MAAM,CAAC7W,MAAvB,EAA+BF,CAAC,EAAhC,EAAoC;AAChC,SAAKgX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC/W,MAAvB,EAA+B8W,CAAC,EAAhC;AACIC,YAAM,CAACD,CAAD,CAAN,KAAc,CAAd;AADJ;;AAGAC,UAAM,CAAC,CAAD,CAAN,IAAaF,MAAM,CAAC/W,CAAD,CAAnB;AACA,QAAIkX,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC/W,MAAvB,EAA+B,EAAE8W,CAAjC,EAAoC;AAChCC,YAAM,CAACD,CAAD,CAAN,IAAaE,KAAb;AACAA,WAAK,GAAID,MAAM,CAACD,CAAD,CAAN,GAAYH,IAAb,GAAqB,CAA7B;AACAI,YAAM,CAACD,CAAD,CAAN,IAAaH,IAAb;AACH;;AAED,WAAOK,KAAP,EAAc;AACVD,YAAM,CAAC7Y,IAAP,CAAY8Y,KAAK,GAAGL,IAApB;AACAK,WAAK,GAAIA,KAAK,GAAGL,IAAT,GAAiB,CAAzB;AACH;AACJ;;AAED,OAAK7W,CAAC,GAAG,CAAT,EAAY+W,MAAM,CAAC/W,CAAD,CAAN,KAAc,CAAd,IAAmBA,CAAC,GAAG+W,MAAM,CAAC7W,MAAP,GAAgB,CAAnD,EAAsDF,CAAC,EAAvD;AACIiX,UAAM,CAAC7Y,IAAP,CAAY,CAAZ;AADJ;;AAGA,SAAO6Y,MAAM,CAACE,OAAP,GAAiB7Y,GAAjB,CAAqB,UAAA8Y,KAAK;AAAA,WAAIV,QAAQ,CAACU,KAAD,CAAZ;AAAA,GAA1B,EAA+C/Y,IAA/C,CAAoD,EAApD,CAAP;AACH;AAEM,SAASgZ,QAAT,CAAkBvY,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAACoB,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIF,CAAJ;AACA,MAAIgX,CAAJ;AAEA,MAAMM,KAAK,GAAG,CAAC,CAAD,CAAd;;AAEA,OAAKtX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlB,MAAM,CAACoB,MAAvB,EAA+BF,CAAC,EAAhC,EAAoC;AAChC,QAAMuX,CAAC,GAAGzY,MAAM,CAACkB,CAAD,CAAhB;AAEA,QAAI,EAAEuX,CAAC,IAAIZ,YAAP,CAAJ,EACI,MAAM,IAAIva,KAAJ,CAAU,sBAAV,CAAN;;AAEJ,SAAK4a,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,KAAK,CAACpX,MAAtB,EAA8B8W,CAAC,EAA/B;AACIM,WAAK,CAACN,CAAD,CAAL,IAAYH,IAAZ;AADJ;;AAGAS,SAAK,CAAC,CAAD,CAAL,IAAYX,YAAY,CAACY,CAAD,CAAxB;AACA,QAAIL,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,KAAK,CAACpX,MAAtB,EAA8B,EAAE8W,CAAhC,EAAmC;AAC/BM,WAAK,CAACN,CAAD,CAAL,IAAYE,KAAZ;AACAA,WAAK,GAAGI,KAAK,CAACN,CAAD,CAAL,IAAY,CAApB;AACAM,WAAK,CAACN,CAAD,CAAL,IAAY,IAAZ;AACH;;AAED,WAAOE,KAAP,EAAc;AACVI,WAAK,CAAClZ,IAAN,CAAW8Y,KAAK,GAAG,IAAnB;AACAA,WAAK,KAAK,CAAV;AACH;AACJ;;AAED,OAAKlX,CAAC,GAAG,CAAT,EAAYlB,MAAM,CAACkB,CAAD,CAAN,KAAc,GAAd,IAAqBA,CAAC,GAAGlB,MAAM,CAACoB,MAAP,GAAgB,CAArD,EAAwDF,CAAC,EAAzD;AACIsX,SAAK,CAAClZ,IAAN,CAAW,CAAX;AADJ;;AAGA,SAAOkZ,KAAK,CAACH,OAAN,EAAP;AACH,C;;;;;;;;;;;;;;;;;AC/EM,SAASK,MAAT,GAAkB;AAAA;;AACrB,OAAKC,OAAL,GAAe,mEAAf;;AAEA,OAAKnL,MAAL,GAAc,UAAAoL,KAAK,EAAI;AACnB,QAAInR,MAAM,GAAG,EAAb;AACA,QAAIoR,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIjY,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAG0X,KAAK,CAACxX,MAAjB,EAAyB;AACrByX,UAAI,GAAGD,KAAK,CAACQ,UAAN,CAAiBlY,CAAC,EAAlB,CAAP;AACA4X,UAAI,GAAGF,KAAK,CAACQ,UAAN,CAAiBlY,CAAC,EAAlB,CAAP;AACA6X,UAAI,GAAGH,KAAK,CAACQ,UAAN,CAAiBlY,CAAC,EAAlB,CAAP;AAEA8X,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAIpO,KAAK,CAACmO,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIxO,KAAK,CAACoO,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJ1R,YAAM,GAAGA,MAAM,GACX,KAAI,CAACkR,OAAL,CAAab,MAAb,CAAoBkB,IAApB,CADK,GACuB,KAAI,CAACL,OAAL,CAAab,MAAb,CAAoBmB,IAApB,CADvB,GAEL,KAAI,CAACN,OAAL,CAAab,MAAb,CAAoBoB,IAApB,CAFK,GAEuB,KAAI,CAACP,OAAL,CAAab,MAAb,CAAoBqB,IAApB,CAFhC;AAGH;;AAED,WAAO1R,MAAP;AACH,GAhCD;;AAkCA,OAAK4R,gBAAL,GAAwB,UAAAC,UAAU,EAAI;AAClC,QAAI7R,MAAM,GAAG,EAAb;AACA,QAAIoR,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIjY,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGoY,UAAU,CAAClY,MAAtB,EAA8B;AAC1ByX,UAAI,GAAGS,UAAU,CAACpY,CAAC,EAAF,CAAjB;AACA4X,UAAI,GAAGQ,UAAU,CAACpY,CAAC,EAAF,CAAjB;AACA6X,UAAI,GAAGO,UAAU,CAACpY,CAAC,EAAF,CAAjB;AAEA8X,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAIpO,KAAK,CAACmO,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIxO,KAAK,CAACoO,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJ1R,YAAM,GAAGA,MAAM,GACX,KAAI,CAACkR,OAAL,CAAab,MAAb,CAAoBkB,IAApB,CADK,GACuB,KAAI,CAACL,OAAL,CAAab,MAAb,CAAoBmB,IAApB,CADvB,GAEL,KAAI,CAACN,OAAL,CAAab,MAAb,CAAoBoB,IAApB,CAFK,GAEuB,KAAI,CAACP,OAAL,CAAab,MAAb,CAAoBqB,IAApB,CAFhC;AAGH;;AAED,WAAO1R,MAAP;AACH,GAhCD;;AAkCA,OAAKyP,MAAL,GAAc,UAAA0B,KAAK,EAAI;AACnB,QAAInR,MAAM,GAAG,EAAb;AACA,QAAIoR,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIjY,CAAC,GAAG,CAAR;AAEA0X,SAAK,GAAGA,KAAK,CAAC/X,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOK,CAAC,GAAG0X,KAAK,CAACxX,MAAjB,EAAyB;AACrB4X,UAAI,GAAG,KAAI,CAACL,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACA+X,UAAI,GAAG,KAAI,CAACN,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACAgY,UAAI,GAAG,KAAI,CAACP,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACAiY,UAAI,GAAG,KAAI,CAACR,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AAEA2X,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEA1R,YAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBmX,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACIzR,MAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBoX,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACI1R,MAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBqX,IAApB,CAAlB;AACP;;AAED,WAAO,KAAI,CAACS,YAAL,CAAkB/R,MAAlB,CAAP;AACH,GAjCD;;AAmCA,OAAKgS,iBAAL,GAAyB,UAAAb,KAAK,EAAI;AAC9B,QAAInR,MAAM,GAAG,EAAb;AACA,QAAIoR,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIjY,CAAC,GAAG,CAAR;AAEA0X,SAAK,GAAGA,KAAK,CAAC/X,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOK,CAAC,GAAG0X,KAAK,CAACxX,MAAjB,EAAyB;AACrB4X,UAAI,GAAG,KAAI,CAACL,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACA+X,UAAI,GAAG,KAAI,CAACN,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACAgY,UAAI,GAAG,KAAI,CAACP,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AACAiY,UAAI,GAAG,KAAI,CAACR,OAAL,CAAaY,OAAb,CAAqBX,KAAK,CAACd,MAAN,CAAa5W,CAAC,EAAd,CAArB,CAAP;AAEA2X,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEA1R,YAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBmX,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACIzR,MAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBoX,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACI1R,MAAM,GAAGA,MAAM,GAAGhG,MAAM,CAACC,YAAP,CAAoBqX,IAApB,CAAlB;AACP;;AAED,WAAO,KAAI,CAACW,cAAL,CAAoBjS,MAApB,CAAP;AACH,GAjCD;;AAmCA,OAAKiS,cAAL,GAAsB,UAAAC,OAAO,EAAI;AAC7B,QAAMC,SAAS,GAAG,IAAIhb,KAAJ,CAAU+a,OAAO,CAACvY,MAAlB,CAAlB;AAEA,QAAIF,CAAC,GAAG,CAAR;AACA,QAAIuX,CAAC,GAAG,CAAR;;AAEA,WAAOvX,CAAC,GAAGyY,OAAO,CAACvY,MAAnB,EAA2B;AACvBqX,OAAC,GAAGkB,OAAO,CAACP,UAAR,CAAmBlY,CAAnB,CAAJ;AACA0Y,eAAS,CAAC1Y,CAAD,CAAT,GAAeuX,CAAf;AACAvX,OAAC;AACJ;;AAED,WAAO0Y,SAAP;AACH,GAbD;;AAeA,OAAKC,YAAL,GAAoB,UAAA7Z,MAAM,EAAI;AAC1BA,UAAM,GAAGA,MAAM,CAACa,OAAP,CAAe,OAAf,EAAwB,IAAxB,CAAT;AACA,QAAI8Y,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9Z,MAAM,CAACoB,MAA3B,EAAmC0Y,CAAC,EAApC,EAAwC;AACpC,UAAMrB,CAAC,GAAGzY,MAAM,CAACoZ,UAAP,CAAkBU,CAAlB,CAAV;;AAEA,UAAIrB,CAAC,GAAG,GAAR,EAAa;AACTkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAoB+W,CAApB,CAAX;AACH,OAFD,MAEO,IAAKA,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,IAAtB,EAA6B;AAChCkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAqB+W,CAAC,IAAI,CAAN,GAAW,GAA/B,CAAX;AACAkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAqB+W,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH,OAHM,MAGA;AACHkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAqB+W,CAAC,IAAI,EAAN,GAAY,GAAhC,CAAX;AACAkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAsB+W,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAAtC,CAAX;AACAkB,eAAO,IAAIlY,MAAM,CAACC,YAAP,CAAqB+W,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH;AACJ;;AAED,WAAOkB,OAAP;AACH,GApBD;;AAsBA,OAAKH,YAAL,GAAoB,UAAAG,OAAO,EAAI;AAC3B,QAAI3Z,MAAM,GAAG,EAAb;AACA,QAAIkB,CAAC,GAAG,CAAR;AACA,QAAIuX,CAAC,GAAG,CAAR;AACA,QAAIsB,EAAE,GAAG,CAAT;AACA,QAAIC,EAAE,GAAG,CAAT;;AAEA,WAAO9Y,CAAC,GAAGyY,OAAO,CAACvY,MAAnB,EAA2B;AACvBqX,OAAC,GAAGkB,OAAO,CAACP,UAAR,CAAmBlY,CAAnB,CAAJ;;AAEA,UAAIuX,CAAC,GAAG,GAAR,EAAa;AACTzY,cAAM,IAAIyB,MAAM,CAACC,YAAP,CAAoB+W,CAApB,CAAV;AACAvX,SAAC;AACJ,OAHD,MAGO,IAAKuX,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,GAAtB,EAA4B;AAC/BsB,UAAE,GAAGJ,OAAO,CAACP,UAAR,CAAmBlY,CAAC,GAAG,CAAvB,CAAL;AACAlB,cAAM,IAAIyB,MAAM,CAACC,YAAP,CAAqB,CAAC+W,CAAC,GAAG,EAAL,KAAY,CAAb,GAAmBsB,EAAE,GAAG,EAA5C,CAAV;AACA7Y,SAAC,IAAI,CAAL;AACH,OAJM,MAIA;AACH6Y,UAAE,GAAGJ,OAAO,CAACP,UAAR,CAAmBlY,CAAC,GAAG,CAAvB,CAAL;AACA8Y,UAAE,GAAGL,OAAO,CAACP,UAAR,CAAmBlY,CAAC,GAAG,CAAvB,CAAL;AAEAlB,cAAM,IAAIyB,MAAM,CAACC,YAAP,CAAqB,CAAC+W,CAAC,GAAG,EAAL,KAAY,EAAb,GAAoB,CAACsB,EAAE,GAAG,EAAN,KAAa,CAAjC,GAAuCC,EAAE,GAAG,EAAhE,CAAV;AAEA9Y,SAAC,IAAI,CAAL;AACH;AACJ;;AAED,WAAOlB,MAAP;AACH,GA5BD;AA6BH,C;;;;;;;;;;;;;;;;;;;;;;;AC/MD;AAEO,SAASia,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,MAAI,OAAOA,IAAP,KAAgB,QAApB,EACI,MAAM,IAAI5c,KAAJ,CAAU,wBAAV,CAAN;AAEJ,MAAI4c,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,GAAvB,EACI,MAAM,IAAI5c,KAAJ,CAAU,sBAAV,CAAN;AAEJ,MAAM6c,UAAU,GAAG,kBAAnB;AAEA,MAAIlZ,GAAG,GAAG,EAAV;AACAA,KAAG,IAAIkZ,UAAU,CAACrC,MAAX,CAAkBoC,IAAI,IAAI,CAA1B,CAAP;AACAjZ,KAAG,IAAIkZ,UAAU,CAACrC,MAAX,CAAkBoC,IAAI,GAAG,IAAzB,CAAP;AAEA,SAAOjZ,GAAP;AACH;AAEM,SAASmZ,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAOA,GAAP;AAEJ,MAAIpZ,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmZ,GAAG,CAACjZ,MAAxB,EAAgCF,CAAC,EAAjC,EAAqC;AACjC,QAAMoZ,GAAG,GAAGD,GAAG,CAACnZ,CAAD,CAAH,CAAOF,QAAP,CAAgB,CAAhB,CAAZ;AACA,QAAMiV,CAAC,GAAGqE,GAAG,CAACC,KAAJ,CAAU,WAAV,CAAV;;AAEA,QAAItE,CAAC,IAAIqE,GAAG,CAAClZ,MAAJ,KAAe,CAAxB,EAA2B;AACvB,UAAMoZ,WAAW,GAAGvE,CAAC,CAAC,CAAD,CAAD,CAAK7U,MAAzB;AACA,UAAIqZ,KAAK,GAAGJ,GAAG,CAACnZ,CAAD,CAAH,CAAOF,QAAP,CAAgB,CAAhB,EAAmBwD,KAAnB,CAAyB,IAAIgW,WAA7B,CAAZ;;AAEA,WAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,WAAtB,EAAmCE,EAAE,EAArC;AACID,aAAK,IAAIJ,GAAG,CAACK,EAAE,GAAGxZ,CAAN,CAAH,CAAYF,QAAZ,CAAqB,CAArB,EAAwBwD,KAAxB,CAA8B,CAA9B,CAAT;AADJ;;AAGAvD,SAAG,IAAIQ,MAAM,CAACC,YAAP,CAAoBH,QAAQ,CAACkZ,KAAD,EAAQ,CAAR,CAA5B,CAAP;AACAvZ,OAAC,IAAIsZ,WAAW,GAAG,CAAnB;AACH,KATD,MASO;AACHvZ,SAAG,IAAIQ,MAAM,CAACC,YAAP,CAAoB2Y,GAAG,CAACnZ,CAAD,CAAvB,CAAP;AACH;AACJ;;AAED,SAAOD,GAAP;AACH;AAEM,SAAS0Z,WAAT,CAAqBle,GAArB,EAA0B;AAC7B,MAAM4d,GAAG,GAAG5d,GAAG,CAACoE,OAAJ,CAAY,KAAZ,EAAkB,EAAlB,EAAsB+Z,KAAtB,CAA4B,EAA5B,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI3Z,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmZ,GAAG,CAACjZ,MAAJ,GAAa,CAAjC,EAAoCF,CAAC,EAArC,EAAyC;AACrC,QAAI4Z,GAAG,eAAST,GAAG,CAACnZ,CAAC,GAAG,CAAL,CAAZ,SAAwBmZ,GAAG,CAACnZ,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAA3B,CAAP;AACA2Z,OAAG,IAAIpZ,MAAM,CAACC,YAAP,CAAoBoZ,GAApB,CAAP;AACH;;AAED,SAAOD,GAAP;AACH;AAEM,SAAS/X,gBAAT,CAA0B8W,SAA1B,EAAqC;AACxC,MAAI3Y,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAI0Y,SAAS,CAACxY,MAA/B,EAAwCF,CAAC,EAAzC;AACID,OAAG,IAAIgZ,WAAW,CAACL,SAAS,CAAC1Y,CAAD,CAAV,CAAlB;AADJ;;AAGA,SAAOD,GAAP;AACH;AAEM,SAAS8Z,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,SAAO,IAAI,8CAAJ,GAAavB,iBAAb,CAA+BuB,QAA/B,CAAP;AACH;AAEM,SAASC,oBAAT,CAA8BzC,KAA9B,EAAqC;AACxC,MAAMzU,CAAC,GAAG,IAAI,8CAAJ,EAAV;AACA,MAAMiX,QAAQ,GAAGjX,CAAC,CAACsV,gBAAF,CAAmBb,KAAnB,CAAjB;AAEA,SAAOwC,QAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ED;AAEO,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAC9B;AACA,SAAO,4DAAa,CAACA,KAAD,CAApB;AACH;AAEM,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6C;AAChD,MAAIF,MAAM,CAACja,MAAP,IAAiBka,MAAM,CAACla,MAA5B,EACI,OAAO,KAAP;AAEJ,MAAIF,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGma,MAAM,CAACja,MAAvB,EAA+BF,CAAC,EAAhC,EAAoC;AAChC,QAAIqa,MAAJ,EAAY;AACR,UAAIF,MAAM,CAACna,CAAD,CAAN,IAAaoa,MAAM,CAACpa,CAAD,CAAvB,EACI,OAAO,KAAP;AACP,KAHD,MAGO,IAAIX,IAAI,CAACC,SAAL,CAAe6a,MAAM,CAACna,CAAD,CAArB,KAA6BX,IAAI,CAACC,SAAL,CAAe8a,MAAM,CAACpa,CAAD,CAArB,CAAjC,EACH,OAAO,KAAP;AACP;;AAED,SAAO,IAAP;AACH;AAEM,SAASsa,aAAT,CAAuBva,GAAvB,EAA4B;AAE/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,MAAM,IAAI3D,KAAJ,CAAU,mCAAV,CAAN;AAEJ,MAAMkb,KAAK,GAAG,IAAI5Z,KAAJ,EAAd;AACA,MAAI6c,GAAJ;AACA,MAAIhD,CAAJ;AAEAgD,KAAG,GAAGxa,GAAG,CAACG,MAAV;;AAEA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGua,GAApB,EAAyBva,CAAC,EAA1B,EAA8B;AAC1BuX,KAAC,GAAGxX,GAAG,CAACmY,UAAJ,CAAelY,CAAf,CAAJ;;AAEA,QAAIuX,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AAChCD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAClZ,IAAN,CAAYmZ,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KALD,MAKO,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAClZ,IAAN,CAAYmZ,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAJM,MAIA,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAAClZ,IAAN,CAAamZ,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAClZ,IAAN,CAAYmZ,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAHM,MAGAD,KAAK,CAAClZ,IAAN,CAAWmZ,CAAC,GAAG,IAAf;AACV;;AAED,SAAOD,KAAP;AACH;AAED;AAEO,SAASkD,YAAT,CAAsBjD,CAAtB,EAAyB;AAC5B,MAAIkD,CAAJ;AAEA,MAAIlD,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACIkD,CAAC,GAAGlD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADJ,KAEK,IAAIX,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDkD,CAAC,GAAGlD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADC,KAEA,IAAIX,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDkD,CAAC,GAAGlD,CAAC,CAACW,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAtB;AAEJ,MAAI,OAAOuC,CAAP,KAAa,QAAjB,EACI,OAAOA,CAAP,CADJ,KAGI,MAAM,IAAIre,KAAJ,CAAU,6CAAV,CAAN;AACP;AAEM,SAASse,SAAT,CAAmBnD,CAAnB,EAAsB;AACzB,MAAKA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAlB,IACCA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GADlB,IAECA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAFtB,EAE4B;AACxB,WAAO,CAAP;AACH;;AAED,SAAO,CAAP;AACH;AAEM,SAASjW,gBAAT,CAA0BvB,GAA1B,EAA+B;AAClC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,MAAM,IAAI3D,KAAJ,CAAU,mCAAV,CAAN;AAEJ,MAAMsc,SAAS,GAAGhb,KAAK,EAAvB;AACA,MAAI+c,CAAC,GAAG,CAAR;AACA,MAAIzD,CAAC,GAAG,CAAR;AACA,MAAI2D,CAAC,GAAG,CAAR;;AAEA,OAAK,IAAI3a,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACG,MAAxB,EAAgCF,CAAC,EAAjC,EAAqC;AACjC,QAAMuX,CAAC,GAAGxX,GAAG,CAAC6W,MAAJ,CAAW5W,CAAX,CAAV;;AAEA,QAAI0a,SAAS,CAACnD,CAAD,CAAb,EAAkB;AACdkD,OAAC,KAAK,CAAN;AACAA,OAAC,IAAID,YAAY,CAACjD,CAAD,CAAjB;AACAP,OAAC;;AAED,UAAI,MAAOA,CAAC,GAAG,CAAf,EAAmB;AACf0B,iBAAS,CAACiC,CAAC,EAAF,CAAT,GAAiBF,CAAjB;AACAA,SAAC,GAAG,CAAJ;AACH;AACJ,KATD,MAUI,MAAM,IAAIre,KAAJ,CAAU,+CAAV,CAAN;AACP;;AAED,SAAOsc,SAAP;AACH,C,CAED;;AACO,SAASkC,SAAT,CAAmB7a,GAAnB,EAAwB;AAE3B,MAAI,CAAC,0CAA0CR,IAA1C,CAA+CQ,GAA/C,CAAL,EACI,MAAM,IAAI3D,KAAJ,CAAU,qCAAV,CAAN;AAEJ,MAAMye,QAAQ,GAAG9a,GAAG,CAAC2Z,KAAJ,CAAU,GAAV,CAAjB;AACA,MAAMoB,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYnB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,MAAMqB,IAAI,GAAG1a,QAAQ,CAACya,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAArB;AACA,MAAME,KAAK,GAAG3a,QAAQ,CAACya,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,GAA4B,CAA1C;AACA,MAAMG,GAAG,GAAG5a,QAAQ,CAACya,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAApB;;AAEA,MAAID,QAAQ,CAAC3a,MAAT,GAAkB,CAAtB,EAAyB;AACrB,QAAMgb,QAAQ,GAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYnB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,QAAMyB,IAAI,GAAG9a,QAAQ,CAAC6a,QAAQ,CAAC,CAAD,CAAT,EAAe,EAAf,CAArB;AACA,QAAME,MAAM,GAAG/a,QAAQ,CAAC6a,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAvB;AACA,QAAMG,MAAM,GAAGhb,QAAQ,CAAC6a,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAvB;AAEA,WAAO,IAAIvS,IAAJ,CAASoS,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BE,IAA3B,EAAiCC,MAAjC,EAAyCC,MAAzC,CAAP;AACH;;AAED,SAAO,IAAI1S,IAAJ,CAASoS,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,CAAP;AACH;AAEM,SAASK,QAAT,CAAkB/D,CAAlB,EAAqB;AACxB,MAAIA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACI,OAAO,CAAP;AAEJ,SAAO,CAAP;AACH,C,CAED;AACA;AACA;AACA;;AACO,SAASgE,aAAT,CAAuBxb,GAAvB,EAA4B;AAC/B,MAAI,QAAQA,GAAZ,EACI,OAAO,CAAC,CAAR;AAEJ,MAAI,OAAQA,GAAR,IAAgB,QAApB,EACI,OAAO,CAAC,CAAR;AAEJ,MAAIA,GAAG,CAACG,MAAJ,IAAc,CAAd,IAAmBH,GAAG,IAAI,EAA9B,EACI,OAAO,CAAC,CAAR;AAEJ,MAAIC,CAAC,GAAG,CAAR,CAV+B,CAY/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAID,GAAG,CAACG,MAAJ,IAAc,EAAlB,EAAsB;AAClB,WAAOF,CAAC,GAAG,EAAX,EAAeA,CAAC,EAAhB,EAAoB;AAChB,UAAIuX,CAAC,GAAGxX,GAAG,CAAC6W,MAAJ,CAAW5W,CAAX,CAAR;AAEA,UAAI,CAAC0a,SAAS,CAACnD,CAAD,CAAd,EACI;AACP;AACJ;;AAED,MAAIvX,CAAC,IAAI,EAAT,EACI,OAAO,CAAP,CA/B2B,CA+BjB;;AAEd,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,GAAG,CAACG,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7B,QAAIuX,CAAC,GAAGxX,GAAG,CAAC6W,MAAJ,CAAW5W,CAAX,CAAR;AAEA,QAAI,CAACsb,QAAQ,CAAC/D,CAAD,CAAb,EACI;AACP;;AAED,MAAIvX,CAAC,IAAID,GAAG,CAACG,MAAb,EACI,OAAO,CAAP,CAzC2B,CAyCjB;;AAEd,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,GAAG,CAACG,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7B,QAAIuX,CAAC,GAAGxX,GAAG,CAAC6W,MAAJ,CAAW5W,CAAX,CAAR;AAEA,QAAIuX,CAAC,GAAG,GAAR,EACI,OAAO,CAAP,CAJyB,CAIf;AACjB;;AAED,SAAO,CAAC,CAAR;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvMD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAASlW,qBAAT,CAA+BgV,YAA/B,EAA6C;AAChD,MAAMmF,KAAK,GAAGC,MAAM,CAACpF,YAAD,CAApB;AACA,MAAMqF,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AAEA,MAAIG,QAAQ,GAAGD,KAAK,CAACpY,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAf;AACAqY,UAAQ,GAAGtF,YAAY,CAACuF,MAAb,CAAoBD,QAApB,CAAX;AAEA,SAAO,wDAAQ,CAACA,QAAD,CAAf;AACH;AAEM,SAAS9Z,mBAAT,CAA6Bga,WAA7B,EAA0C;AAC7C,MAAI,OAAQA,WAAR,IAAwB,QAA5B,EACI,OAAO,KAAP;AAEJ,MAAIA,WAAW,CAAC3b,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,MAAI1D,OAAO,GAAG,wDAAQ,CAACqf,WAAD,CAAtB;AAEA,MAAIA,WAAW,CAAC3b,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,MAAMqa,GAAG,GAAG/d,OAAO,CAAC0D,MAApB;AACA,MAAMuR,MAAM,GAAG8I,GAAG,GAAG,CAArB;AACA,MAAMoB,QAAQ,GAAGnf,OAAO,CAAC8G,KAAR,CAAcmO,MAAd,CAAjB;AAEAjV,SAAO,GAAGA,OAAO,CAAC8G,KAAR,CAAc,CAAd,EAAiBmO,MAAjB,CAAV;AAEA,MAAM+J,KAAK,GAAGC,MAAM,CAACjf,OAAD,CAApB;AACA,MAAMkf,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,MAAMM,SAAS,GAAGJ,KAAK,CAACpY,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAIqY,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAOtf,OAAP;AACH;;AAED,QAAM,IAAIJ,KAAJ,CAAU,0BAAV,CAAN;AACH;AAEM,SAAS4Y,eAAT,CAAyBmB,WAAzB,EAAsC/Q,WAAtC,EAAmD;AACtD,MAAI,OAAO+Q,WAAP,KAAuB,QAA3B,EACIA,WAAW,GAAG,8DAAgB,CAACA,WAAD,CAA9B;AAEJ,MAAMlO,IAAI,GAAG7C,WAAW,CAAC6C,IAAzB;AACA,MAAMtD,SAAS,GAAGoX,SAAS,CAAC,8DAAgB,CAAC9T,IAAD,CAAjB,EAAyBkO,WAAzB,CAA3B;AAEA/Q,aAAW,CAACT,SAAZ,GAAwB,CAAEA,SAAF,CAAxB;AACA,SAAOS,WAAP;AACH;AAEM,SAAS4W,mBAAT,CAA6BpZ,CAA7B,EAAgC;AACnC,SAAOqZ,IAAI,CAAC1b,MAAM,CAACC,YAAP,OAAAD,MAAM,kFAAiBqC,CAAjB,EAAP,CAAX;AACH;AAEM,SAASsZ,SAAT,CAAmBthB,UAAnB,EAA+BuhB,QAA/B,EAAyC;AAC5C,MAAI,OAAOvhB,UAAP,KAAsB,QAA1B,EACIA,UAAU,GAAG,8DAAgB,CAACA,UAAD,CAA7B;AAEJ,MAAMwhB,SAAS,GAAGX,MAAM,CAACU,QAAD,CAAxB;AACA,MAAMD,SAAS,GAAGH,SAAS,CAACK,SAAD,EAAYxhB,UAAZ,CAA3B;AAEA,SAAOshB,SAAP;AACH;AAEM,SAASG,gCAAT,CAA0CC,UAA1C,EAAsD;AACzD,MAAMC,WAAW,GAAG,oEAAsB,CAACD,UAAD,CAA1C;AACA,MAAMlX,WAAW,GAAGoX,KAAK,CAACC,QAAN,CAAeC,WAAf,CAA2BC,iBAA3B,CAA6CJ,WAA7C,CAApB;AACA,MAAMK,GAAG,GAAGxX,WAAW,CAACyX,UAAZ,EAAZ;AAEA,SAAOD,GAAG,CAACE,eAAJ,EAAP;AACH;AAEM,SAASC,SAAT,GAAqB;AACxB,MAAMC,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,MAAMthB,GAAG,GAAGshB,EAAE,CAACC,UAAH,EAAZ;AACA,MAAMC,MAAM,GAAGxhB,GAAG,CAACyhB,UAAJ,EAAf;AAEA,MAAIC,SAAS,GAAGF,MAAM,CAACpd,QAAP,CAAgB,KAAhB,CAAhB;;AAEA,SAAOsd,SAAS,CAACld,MAAV,GAAmB,EAA1B,EAA8B;AAC1Bkd,aAAS,cAAOA,SAAP,CAAT;AACH;;AAED,SAAO,8DAAgB,CAACA,SAAD,CAAvB;AACH;AAEM,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,MAAIA,QAAQ,CAACpd,MAAT,KAAoB,EAAxB,EACIod,QAAQ,GAAGA,QAAQ,CAACha,KAAT,CAAe,CAAf,CAAX;AAEJ,MAAMia,IAAI,GAAG,yDAAS,CAACD,QAAD,CAAT,CAAoBxd,QAApB,EAAb;AACA,MAAM0d,UAAU,GAAG,uDAAc,GAAGD,IAAI,CAACpd,SAAL,CAAe,EAAf,CAApC;AAEA,SAAO,8DAAgB,CAACqd,UAAD,CAAvB;AACH;AAEM,SAASC,oBAAT,CAA8BtH,WAA9B,EAA2C;AAC9C,MAAImH,QAAQ,GAAGI,mBAAmB,CAACvH,WAAD,CAAlC;AACA,SAAOkH,cAAc,CAACC,QAAD,CAArB;AACH;AAEM,SAASK,aAAT,CAAuBC,UAAvB,EAAmC;AACtC,MAAMC,WAAW,GAAG,wDAAQ,CAACD,UAAD,CAA5B;AAEA,MAAIC,WAAW,CAAC3d,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,MAAM4d,UAAU,GAAGD,WAAW,CAACva,KAAZ,CAAkB,CAAlB,EAAqBua,WAAW,CAAC3d,MAAZ,GAAqB,CAA1C,CAAnB;AACA,MAAMsb,KAAK,GAAGC,MAAM,CAACqC,UAAD,CAApB;AACA,MAAMpC,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;;AAEA,MAAIE,KAAK,CAAC,CAAD,CAAL,KAAamC,WAAW,CAACC,UAAU,CAAC5d,MAAZ,CAAxB,IACAwb,KAAK,CAAC,CAAD,CAAL,KAAamC,WAAW,CAACC,UAAU,CAAC5d,MAAX,GAAoB,CAArB,CADxB,IAEAwb,KAAK,CAAC,CAAD,CAAL,KAAamC,WAAW,CAACC,UAAU,CAAC5d,MAAX,GAAoB,CAArB,CAFxB,IAGAwb,KAAK,CAAC,CAAD,CAAL,KAAamC,WAAW,CAACC,UAAU,CAAC5d,MAAX,GAAoB,CAArB,CAH5B,EAGqD;AACjD,WAAO4d,UAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASvc,cAAT,CAAwBwc,SAAxB,EAAmC;AACtC,MAAI,OAAQA,SAAR,KAAuB,QAA3B,EACI,OAAO,KAAP;AAEJ,MAAIA,SAAS,CAAC7d,MAAV,KAAqB,qDAAzB,EACI,OAAO,KAAP;AAEJ,MAAI1D,OAAO,GAAG,wDAAQ,CAACuhB,SAAD,CAAtB;AAEA,MAAIvhB,OAAO,CAAC0D,MAAR,KAAmB,EAAvB,EACI,OAAO,KAAP;AAEJ,MAAI1D,OAAO,CAAC,CAAD,CAAP,KAAe,4DAAnB,EACI,OAAO,KAAP;AAEJ,MAAMmf,QAAQ,GAAGnf,OAAO,CAAC8G,KAAR,CAAc,EAAd,CAAjB;AACA9G,SAAO,GAAGA,OAAO,CAAC8G,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAV;AAEA,MAAMkY,KAAK,GAAGC,MAAM,CAACjf,OAAD,CAApB;AACA,MAAMkf,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,MAAMM,SAAS,GAAGJ,KAAK,CAACpY,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAIqY,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASkC,2CAAT,CAAqDC,kBAArD,EAAyE;AAC5E,MAAM9H,WAAW,GAAG,oEAAsB,CAAC8H,kBAAD,CAA1C;AACA,MAAMX,QAAQ,GAAGI,mBAAmB,CAACvH,WAAD,CAApC;AACA,MAAME,YAAY,GAAGgH,cAAc,CAACC,QAAD,CAAnC;AAEA,SAAOjc,qBAAqB,CAACgV,YAAD,CAA5B;AACH;AAEM,SAAS6H,sCAAT,CAAgDD,kBAAhD,EAAoE;AACvE,MAAM9H,WAAW,GAAG,oEAAsB,CAAC8H,kBAAD,CAA1C;AACA,MAAMX,QAAQ,GAAGI,mBAAmB,CAACvH,WAAD,CAApC;AACA,MAAME,YAAY,GAAGgH,cAAc,CAACC,QAAD,CAAnC;AACA,MAAME,UAAU,GAAG,+DAAgB,CAACnH,YAAD,CAAnC;AAEA,SAAOmH,UAAP;AACH;AAEM,SAASW,gCAAT,CAA0CF,kBAA1C,EAA8D;AACjE,MAAM9H,WAAW,GAAG,oEAAsB,CAAC8H,kBAAD,CAA1C;AACA,MAAMX,QAAQ,GAAGI,mBAAmB,CAACvH,WAAD,CAApC;AACA,MAAME,YAAY,GAAGgH,cAAc,CAACC,QAAD,CAAnC;AACA,MAAMc,aAAa,GAAG,kEAAoB,CAAC/H,YAAD,CAA1C;AAEA,SAAO+H,aAAP;AACH;AAEM,SAASV,mBAAT,CAA6BvH,WAA7B,EAA0C;AAC7C,MAAM6G,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,MAAMthB,GAAG,GAAGshB,EAAE,CAACqB,cAAH,CAAkBlI,WAAlB,EAA+B,OAA/B,CAAZ;AACA,MAAMmI,MAAM,GAAG5iB,GAAG,CAAC6iB,SAAJ,EAAf;AACA,MAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AACA,MAAMC,CAAC,GAAGH,MAAM,CAACG,CAAjB;AAEA,MAAIC,IAAI,GAAGF,CAAC,CAAC1e,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAO4e,IAAI,CAACxe,MAAL,GAAc,EAArB,EAAyB;AACrBwe,QAAI,cAAOA,IAAP,CAAJ;AACH;;AAED,MAAIC,IAAI,GAAGF,CAAC,CAAC3e,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAO6e,IAAI,CAACze,MAAL,GAAc,EAArB,EAAyB;AACrBye,QAAI,cAAOA,IAAP,CAAJ;AACH;;AAED,MAAMC,SAAS,eAAQF,IAAR,SAAeC,IAAf,CAAf;AACA,MAAME,WAAW,GAAG,8DAAgB,CAACD,SAAD,CAApC;AAEA,SAAOC,WAAP;AACH;AAEM,SAAS9C,SAAT,CAAmBK,SAAnB,EAA8BjG,WAA9B,EAA2C;AAC9C,MAAM6G,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,MAAMthB,GAAG,GAAGshB,EAAE,CAACqB,cAAH,CAAkBlI,WAAlB,EAA+B,OAA/B,CAAZ;AACA,MAAMxR,SAAS,GAAGjJ,GAAG,CAAC2J,IAAJ,CAAS+W,SAAT,CAAlB;AACA,MAAM9H,CAAC,GAAG3P,SAAS,CAAC2P,CAApB;AACA,MAAMC,CAAC,GAAG5P,SAAS,CAAC4P,CAApB;AACA,MAAMa,EAAE,GAAGzQ,SAAS,CAAC0P,aAArB;AAEA,MAAIyK,IAAI,GAAGxK,CAAC,CAACxU,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOgf,IAAI,CAAC5e,MAAL,GAAc,EAArB,EAAyB;AACrB4e,QAAI,cAAOA,IAAP,CAAJ;AACH;;AAED,MAAIC,IAAI,GAAGxK,CAAC,CAACzU,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOif,IAAI,CAAC7e,MAAL,GAAc,EAArB,EAAyB;AACrB6e,QAAI,cAAOA,IAAP,CAAJ;AACH;;AAED,MAAMC,KAAK,GAAG,0DAAW,CAAC5J,EAAD,CAAzB;AACA,MAAM6J,OAAO,GAAGH,IAAI,GAAGC,IAAP,GAAcC,KAA9B;AAEA,SAAOC,OAAP;AACH;AAEM,SAASxD,MAAT,CAAgByD,QAAhB,EAA0B;AAC7B,MAAMC,MAAM,GAAG,IAAI,4CAAJ,CAAU,SAAV,EAAqB,KAArB,CAAf;AACA,MAAMC,MAAM,GAAG,+DAAgB,CAACF,QAAD,CAA/B;AAEAC,QAAM,CAACE,MAAP,CAAcD,MAAd;AACA,MAAME,OAAO,GAAGH,MAAM,CAACI,OAAP,CAAe,KAAf,CAAhB;AAEA,SAAO,8DAAgB,CAACD,OAAD,CAAvB;AACH;AAEM,SAASE,iBAAT,CAA2BnW,QAA3B,EAAqC;AACxC,MAAMoW,eAAe,GAAG,oEAAsB,CAACpW,QAAD,CAA9C;AACA,MAAMqW,gBAAgB,GAAGjC,oBAAoB,CAACgC,eAAD,CAA7C;AAEA,SAAOpe,qBAAqB,CAACqe,gBAAD,CAA5B;AACH;AAEM,SAAS5d,WAAT,CAAqBlH,UAArB,EAAiC;AACpC,MAAM6kB,eAAe,GAAG,8DAAgB,CAAC7kB,UAAD,CAAxC;AACA,MAAM8kB,gBAAgB,GAAGjC,oBAAoB,CAACgC,eAAD,CAA7C;AAEA,SAAOpe,qBAAqB,CAACqe,gBAAD,CAA5B;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvQD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,IAAM5jB,KAAK,GAAG;AACV0N,YADU,sBACCQ,GADD,EACM;AACZ,QAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAO,KAAP;AACJ,WAAO,gDAAS,CAAC2V,KAAV,CAAgB3V,GAAG,CAAClK,QAAJ,EAAhB,EAAgC;AACnC8f,eAAS,EAAE,CAAE,MAAF,EAAU,OAAV;AADwB,KAAhC,CAAP;AAGH,GAPS;AASVlW,UATU,oBASDuM,GATC,EASI;AACV,WAAOA,GAAG,KAAKlZ,MAAM,CAACkZ,GAAD,CAAd,IAAuBlZ,MAAM,CAAC8iB,SAAP,CAAiB/f,QAAjB,CAA0BsH,IAA1B,CAA+B6O,GAA/B,MAAwC,gBAAtE;AACH,GAXS;AAaVtY,SAbU,mBAaFsc,KAbE,EAaK;AACX,WAAOvc,KAAK,CAACC,OAAN,CAAcsc,KAAd,CAAP;AACH,GAfS;AAiBV6F,QAjBU,kBAiBHhhB,MAjBG,EAiBK;AACX,QAAI;AACA,aAAO,CAAC,CAACO,IAAI,CAAC0M,KAAL,CAAWjN,MAAX,CAAT;AACH,KAFD,CAEE,OAAOiJ,EAAP,EAAW;AACT,aAAO,KAAP;AACH;AACJ,GAvBS;AAyBV9I,WAzBU,qBAyBA8gB,IAzBA,EAyBM;AACZ,WAAO,OAAOA,IAAP,KAAgB,SAAvB;AACH,GA3BS;AA6BV5gB,aA7BU,uBA6BE2B,MA7BF,EA6BU;AAChB,WAAOA,MAAM,KAAKA,MAAM,YAAY,mDAAlB,IAAgCA,MAAM,CAACkf,WAAP,IAAsBlf,MAAM,CAACkf,WAAP,CAAmBvb,IAAnB,KAA4B,WAAvF,CAAb;AACH,GA/BS;AAiCV5J,UAjCU,oBAiCDiE,MAjCC,EAiCO;AACb,WAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA+BA,MAAM,IAAIA,MAAM,CAACkhB,WAAjB,IAAgClhB,MAAM,CAACkhB,WAAP,CAAmBvb,IAAnB,KAA4B,QAAlG;AACH,GAnCS;AAqCVjB,YArCU,sBAqCCyS,GArCD,EAqCM;AACZ,WAAO,OAAOA,GAAP,KAAe,UAAtB;AACH,GAvCS;AAyCVvW,OAzCU,iBAyCJZ,MAzCI,EAyCI;AACV,WAAQ,OAAOA,MAAP,KAAkB,QAAlB,IACD,CAAC2K,KAAK,CAACpJ,QAAQ,CAACvB,MAAD,EAAS,EAAT,CAAT,CADL,IAED,sBAAsBS,IAAtB,CAA2BT,MAA3B,CAFP;AAGH,GA7CS;AA+CV3C,WA/CU,qBA+CA2E,MA/CA,EA+CQ;AACd,WAAOgU,MAAM,CAAC3Y,SAAP,CACH2Y,MAAM,CAAChU,MAAD,CADH,CAAP;AAGH,GAnDS;AAqDV8D,aArDU,uBAqDEqR,GArDF,EAqDOlS,QArDP,EAqDiB;AACvB,WAAOhH,MAAM,CAAC8iB,SAAP,CAAiB7b,cAAjB,CAAgCoD,IAAhC,CAAqC6O,GAArC,EAA0ClS,QAA1C,CAAP;AACH,GAvDS;AAyDVgG,eAzDU,yBAyDIkM,GAzDJ,EAyDwB;AAAA;;AAAA,sCAAZgK,UAAY;AAAZA,gBAAY;AAAA;;AAC9B,WAAOA,UAAU,CAAC/f,MAAX,IAAqB,CAAC+f,UAAU,CAAC3hB,GAAX,CAAe,UAAAyF,QAAQ,EAAI;AACpD,aAAO,KAAI,CAACa,WAAL,CAAiBqR,GAAjB,EAAsBlS,QAAtB,CAAP;AACH,KAF4B,EAE1B7H,QAF0B,CAEjB,KAFiB,CAA7B;AAGH,GA7DS;AA+DVH,eA/DU,yBA+DIoI,IA/DJ,EA+DmB;AAAA,uCAAN+C,IAAM;AAANA,UAAM;AAAA;;AACzB,WAAO,IAAI4B,OAAJ,CAAY,UAACoX,OAAD,EAAUnX,MAAV,EAAqB;AACpC5E,UAAI,MAAJ,SAAQ+C,IAAR,SAAc,UAACzI,GAAD,EAAM0hB,GAAN,EAAc;AACxB,YAAG1hB,GAAH,EACIsK,MAAM,CAACtK,GAAD,CAAN,CADJ,KAEKyhB,OAAO,CAACC,GAAD,CAAP;AACR,OAJD;AAKH,KANM,CAAP;AAOH,GAvES;AAyEVnkB,iBAzEU,2BAyEMokB,KAzEN,EAyEa;AAAA;;AACnB,WAAO,UAACjc,IAAD,EAAmB;AAAA,yCAAT+C,IAAS;AAATA,YAAS;AAAA;;AACtB,aAAO,MAAI,CAACnL,aAAL,aAAI,GAAeoI,IAAI,CAACK,IAAL,CAAU4b,KAAV,CAAf,SAAoClZ,IAApC,EAAX;AACH,KAFD;AAGH,GA7ES;AA+EV1I,UA/EU,oBA+EDD,KA/EC,EA+EM;AACZ,WAAO;AACHuE,WAAK,EAAEvE,KAAK,CAAC8hB,YADV;AAEHrO,eAAS,EAAEzT,KAAK,CAAC+hB,eAFd;AAGH9a,cAAQ,EAAEjH,KAAK,CAACmH,gBAHb;AAIHjB,UAAI,EAAElG,KAAK,CAACgiB,UAJT;AAKHnb,iBAAW,EAAE7G,KAAK,CAACiiB,cALhB;AAMH/gB,YAAM,EAAElB,KAAK,CAACkB,MANX;AAOH0D,kBAAY,EAAE5E,KAAK,CAACkiB;AAPjB,KAAP;AASH,GAzFS;AA2FVxX,YA3FU,sBA2FC1K,KA3FD,QA2FyB;AAAA,QAAPM,GAAO,QAAfwH,MAAe;AAC/B,QAAG,CAAC9H,KAAK,CAACkB,MAAV,EACI,OAAOlB,KAAP;;AAEJ,QAAI,KAAKmL,QAAL,CAAcnL,KAAK,CAACkB,MAApB,CAAJ,EAAiC;AAC7B,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,GAAG,CAACqB,MAAxB,EAAgCF,CAAC,EAAjC,EAAqC;AACjC,YAAIiW,GAAG,GAAGpX,GAAG,CAACmB,CAAD,CAAb;AACA,YAAIiW,GAAG,CAAC7R,IAAJ,IAAY,SAAZ,IAAyB6R,GAAG,CAACxR,IAAJ,IAAYlG,KAAK,CAACkB,MAA/C,EACIlB,KAAK,CAACkB,MAAN,CAAawW,GAAG,CAACxR,IAAjB,IAAyB,OAAOlG,KAAK,CAACkB,MAAN,CAAawW,GAAG,CAACxR,IAAjB,EAAuBnE,MAAvB,CAA8B,CAA9B,EAAiCqB,WAAjC,EAAhC;AACP;AACJ,KAND,MAMO,IAAI,KAAKhE,OAAL,CAAaY,KAAK,CAACkB,MAAnB,CAAJ,EAAgC;AACnClB,WAAK,CAACkB,MAAN,GAAelB,KAAK,CAACkB,MAAN,CAAasT,MAAb,CAAoB,UAACkD,GAAD,EAAMxW,MAAN,EAAcyD,KAAd,EAAwB;AAAA,yBAInDrE,GAAG,CAACqE,KAAD,CAJgD;AAAA,YAEnDuB,IAFmD,cAEnDA,IAFmD;AAAA,YAGnDL,IAHmD,cAGnDA,IAHmD;AAMvD,YAAGA,IAAI,IAAI,SAAX,EACI3E,MAAM,GAAG,OAAOA,MAAM,CAACa,MAAP,CAAc,CAAd,EAAiBqB,WAAjB,EAAhB;AAEJsU,WAAG,CAACxR,IAAD,CAAH,GAAYhF,MAAZ;AAEA,eAAOwW,GAAP;AACH,OAZc,EAYZ,EAZY,CAAf;AAaH;;AAED,WAAO1X,KAAP;AACH,GAtHS;AAwHVmiB,SAxHU,mBAwHFhJ,KAxHE,EAwHKjX,OAxHL,EAwHcU,MAxHd,EAwHsB;AAC5B,QAAIgf,GAAG,GAAGzI,KAAK,CAAC5X,QAAN,EAAV;;AAEA,WAAMqgB,GAAG,CAACjgB,MAAJ,GAAaiB,MAAnB;AACIgf,SAAG,GAAG1f,OAAO,GAAG0f,GAAhB;AADJ;;AAGA,WAAOA,GAAP;AACH;AA/HS,CAAd;AAkIe,8IACRrkB,KADP;AAEIsE,MAAI,EAAJ,kCAFJ;AAGIqB,UAAQ,EAAR,sCAHJ;AAIIjG,QAAM,EAAN,oCAJJ;AAKI8b,OAAK,EAAL,mCALJ;AAMIlW,QAAM,EAAN,oCANJ;AAOIvC,KAAG,EAAH,iCAAGA;AAPP,I;;;;;;;;;;;AC5IA,yE;;;;;;;;;;;ACAA,oE;;;;;;;;;;;ACAA,kE;;;;;;;;;;;ACAA,+D;;;;;;;;;;;ACAA,kE;;;;;;;;;;;ACAA,kE;;;;;;;;;;;ACAA,4D;;;;;;;;;;;ACAA,gE;;;;;;;;;;;ACAA,6E;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,0D;;;;;;;;;;;ACAA,uD;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,sC","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\n\nimport { keccak256 } from 'js-sha3';\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        super();\n\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if(utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress', \n            'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.utils = utils;\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if([ false, 'latest', 'earliest', 0 ].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if(this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n           this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(!eventServer)\n            return this.eventServer = false;\n\n        if(utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n            \n        if(!this.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.eventServer = eventServer;\n        this.eventServer.isConnected = () => this.eventServer.request('healthcheck').then(() => true).catch(() => (\n            this.eventServer.request('events?size=1').then(data => (\n                Array.isArray(data)\n            ))\n        )).catch(() => false);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(contractAddress = false, sinceTimestamp = 0, eventName = false, blockNumber = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, sinceTimestamp, eventName, blockNumber);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        const routeParams = [];\n\n        if(!this.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n        \n        if(blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if(contractAddress)\n            routeParams.push(this.address.fromHex(contractAddress));\n\n        if(eventName)\n            routeParams.push(eventName);\n\n        if(blockNumber)\n            routeParams.push(blockNumber);\n\n        return this.eventServer.request(`event/contract/${routeParams.join('/')}?since=${sinceTimestamp}`).then((data = false) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err)); \n    }\n\n    getEventByTransactionID(transactionID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransactionID, transactionID);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        return this.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/,'41');\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if (utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i+=2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch(err) {\n                return false;\n            }\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if(this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.getEventResult(this.address);\n        const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if (options.resourceNode && !RegExp(options.resourceNode, 'i').test(event.resourceNode))\n                return false;\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if(duplicate)\n                return false;\n\n            if(!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if(latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(this.eventListener)\n            clearInterval(this.eventListener);\n\n        if(!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if(!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if(!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            if (func.type.toLowerCase() === 'constructor')\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if(!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if(!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if(!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!contract.result)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            return this.at(signedTransaction.contract_address, callback);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if(!contract.contract_address)\n                callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi.entrys);\n\n            callback(null, this);\n        } catch(ex) {\n            if(ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if(!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import utils from 'utils';\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({ type }) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    const names = abi.map(({ name }) => name).filter(name => !!name);\n    const types = abi.map(({ type }) => type);\n\n    return utils.abi.decodeParams(names, types, output);\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.defaultOptions = {\n            feeLimit: 1000000000,\n            callValue: 0,\n            from: this.tronWeb.defaultAddress.hex, // Only used for send()\n            shouldPollResponse: false // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if (types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(/^(41)/, '0x')\n\n            if (types[index] == 'address[]') {\n                args[index] = args[index].map(address => {\n                    return this.tronWeb.address.toHex(address).replace(/^(41)/, '0x')\n                })\n            }\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, ...methodArgs),\n            send: (...methodArgs) => this._send(types, args, ...methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if (types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = { ...this.defaultOptions, ...options };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options.feeLimit,\n            options.callValue,\n            parameters,\n            this.tronWeb.address.toHex(options.from),\n            (err, transaction) => {\n                if (err)\n                    return callback(err);\n\n                if (!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n                    let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n\n                    if (output.length === 1)\n                        output = output[0];\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if (types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {...this.defaultOptions, ...options};\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options.feeLimit,\n                options.callValue,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if (!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n                \n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (!broadcast.result)\n                return callback('Unknown error: ' + JSON.stringify(broadcast, null, 2));\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (this.abi.type.toLowerCase() !== 'event')\n            return callback('Invalid method type for event watching');\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        const sinceTimestamp = new Date().getTime();\n\n        const getEvents = async () => {\n            try {\n                const events = await this.tronWeb.getEventResult(this.contract.address, sinceTimestamp, this.name);\n                const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if (options.resourceNode && !RegExp(options.resourceNode, 'i').test(event.resourceNode))\n                        return false;\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate)\n                        return false;\n\n                    if (!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if (latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener(),\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/,'');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport * as Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, callback = false)\n    {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address);\n\n        if(![ 'BANDWIDTH', 'ENERGY' ].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n            resource: resource\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, callback = false)\n    {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address);\n\n        if(![ 'BANDWIDTH', 'ENERGY' ].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            resource: resource\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 1_000_000_000,\n            callValue = 0,\n            userFeePercentage = 0,\n            parameters = [],\n            name = \"\",\n        } = options;\n        \n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(userFeePercentage) || userFeePercentage < 0 || userFeePercentage > 100)\n            return callback('Invalid options.userFeePercentage provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        var constructorParams = abi.find(\n            (it) => {\n                return it.type === 'constructor';\n            }\n        );\n\n        if(typeof constructorParams !== 'undefined' && constructorParams) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n            constructorParams = constructorParams.inputs;\n\n            if(parameters.length != constructorParams.length)\n                return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n            for(let i = 0; i < parameters.length; i++) {\n                let type = constructorParams[i].type;\n                let value = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit = 1_000_000_000,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n        }\n\n        if(utils.isFunction(feeLimit)) {\n            callback = feeLimit;\n            feeLimit = 1_000_000_000;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, callback = false)\n    {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        if(!this.tronWeb.isAddress(address)) {\n            return callback('Invalid origin address provided');\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateaccount', {\n            account_name: this.tronWeb.fromUtf8(accountName),\n            owner_address: this.tronWeb.address.toHex(address),\n        }, 'post').then(transaction => {\n\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!parameters)\n            return callback('Invalid proposal parameters provided');\n\n        if(!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        if(!utils.isObject(parameters))\n            return callback('Invalid parameters provided');\n\n        this.tronWeb.fullNode.request('wallet/proposalcreate', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            parameters: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/proposaldelete', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, hasApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.voteProposal, proposalID, hasApproval, voterAddress);\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voterAddress address provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        if(!utils.isBoolean(hasApproval))\n            return callback('Invalid hasApproval provided');\n\n        this.tronWeb.fullNode.request('wallet/proposalapprove', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval.toString()\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string. \n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress);\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid address provided');\n\n        if (!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if (!utils.isInteger(tokenBalance) || tokenBalance <= 0\n            || !utils.isInteger(trxBalance) || trxBalance <= 0)\n            return callback('Invalid amount provided');\n\n        console.log({\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            first_token_id: this.tronWeb.fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        })\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            first_token_id: this.tronWeb.fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangeinject', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromUtf8(tokenName),\n            quant:parseInt(tokenAmount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromUtf8(tokenName),\n            quant:parseInt(tokenAmount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     */\n    tradeExchangeTokens(exchangeID = false, \n        tokenName = false, \n        tokenAmountSold = 0, \n        tokenAmountExpected = 0, \n        ownerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmountSold) || tokenAmountSold < 1)\n            return callback('Invalid tokenAmountSold provided');\n\n        if(!utils.isInteger(tokenAmountExpected) || tokenAmountExpected < 1)\n            return callback('Invalid tokenAmountExpected provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant:parseInt(tokenAmountSold),\n            expected:parseInt(tokenAmountExpected)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport * as Ethers from 'ethers';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index = 0, callback = false) {\n        if(utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n        \n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        if(!utils.isInteger(index) || index < 0)\n            return callback('Invalid transaction index provided');\n\n        this.getBlock(block).then(({ transactions = false }) => {\n            if(!transactions || transactions.length < index)\n                return callback('Transaction not found in block');\n\n            callback(null, transactions[index]);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n                \n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionInfo, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if(utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if(!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if(message.substr(0, 2) == '0x')\n            message = message.substring(2);\n\n        if(signature.substr(0, 2) == '0x')\n            signature = signature.substr(2);\n\n        const messageBytes = [\n            ...Ethers.utils.toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = Ethers.utils.keccak256(messageBytes);\n        const recovered = Ethers.utils.recoverAddress(messageDigest, {\n            recoveryParam: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128)\n        });\n\n        const tronAddress = '41' + recovered.substr(2);\n        const base58Address = this.tronWeb.address.fromHex(tronAddress);\n\n        if(base58Address == this.tronWeb.address.fromHex(address))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n        }\n\n        if(utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader);\n\n        // Message signing\n        if(utils.isString(transaction)) {\n            if(transaction.substring(0, 2) == '0x')\n                transaction = transaction.substring(2);\n\n            if(!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signingKey = new Ethers.utils.SigningKey(privateKey);\n                const messageBytes = [\n                    ...Ethers.utils.toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n                    ...utils.code.hexStr2byteArray(transaction)\n                ];\n\n                const messageDigest = Ethers.utils.keccak256(messageBytes);\n                const signature = signingKey.signDigest(messageDigest);\n\n                const signatureHex = [\n                    '0x',\n                    signature.r.substring(2),\n                    signature.s.substring(2),\n                    Number(signature.v).toString(16)\n                ].join('');\n\n                return callback(null, signatureHex);\n            } catch(ex) {\n                callback(ex);\n            }\n        }\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction', \n            signedTransaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if(typeof options === 'string')\n            options = { privateKey: options };\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if(typeof options === 'string')\n            options = { privateKey: options };\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n/**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, callback = false)\n    {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if(typeof options === 'string')\n            options = { privateKey: options };\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options);\n\n        if(![ 'BANDWIDTH', 'ENERGY' ].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, callback = false)\n    {\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if(typeof options === 'string')\n            options = { privateKey: options };\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options);\n\n        if(![ 'BANDWIDTH', 'ENERGY' ].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {},  callback = false)\n    {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if(typeof options === 'string')\n            options = { privateKey: options };\n\n        if(!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', { \n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({ proposals = [] }) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({ chainParameter = [] }) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', { \n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            value: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({ exchanges = [] }) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n        if(!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchangespaginated', {\n            limit,\n            offset\n        }, 'post').then(({ exchanges = [] }) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n};\n","import * as Ethers from 'ethers';\nimport TronWeb from 'index';\n\nconst abiCoder = new Ethers.utils.AbiCoder();\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n\n    if (!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if (ignoreMethodHash && output.replace(/^0x/,'').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/,'').substring(8);\n\n    if (output.replace(/^0x/,'').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if(types[index] == 'address')\n            arg = '41' + arg.substr(2).toLowerCase();\n\n        if(names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for (let i =0;i<types.length;i++) {\n        if (types[i] === 'address') {\n            values[i] =  TronWeb.address.toHex(values[i]).replace(/^41/, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/,'').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","\nimport { byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString } from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport { byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString }\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0] , 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        if (typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node\n        };\n    },\n\n    parseEvent(event, { inputs: abi }) {\n        if(!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = '41' + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if(type == 'address')\n                    result = '41' + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while(res.length < amount)\n            res = padding + res;\n\n        return res;\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi\n};\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}