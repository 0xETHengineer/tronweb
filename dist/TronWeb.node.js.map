{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/contract/index.js","webpack:///./src/lib/contract/method.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/utils/abi.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"eventemitter3\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","utils","injectPromise","promiseInjector","blockID","includes","isInteger","Error","Math","abs","setAddress","address","fromPrivateKey","emit","isAddress","toHex","fromHex","provider","Object","values","some","knownProvider","isValidProvider","setStatusPage","isConnected","request","then","catch","data","Array","isArray","currentProviders","contractAddress","sinceTimestamp","eventName","blockNumber","size","page","callback","isFunction","getEventResult","routeParams","console","warn","push","join","map","event","mapEvent","err","response","transactionID","getEventByTransactionID","abi","string","prefix","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","test","isFinite","result","isHex","replace","Buffer","from","toString","str","i","l","length","substring","code","parseInt","substr","String","fromCharCode","padding","padEnd","value","toBigNumber","toNumber","number","isLessThan","sun","div","times","amount","crypto","getBase58CheckAddress","hexStr2byteArray","isAddressValid","account","accounts","generateAccount","toLowerCase","byteArray2hexStr","decodeBase58Address","pkToAddress","Contract","tronWeb","eventListener","bytecode","deployed","lastBlock","methods","methodInstances","props","loadAbi","options","events","sort","a","b","block","latestEvent","newEvents","filter","index","resourceNode","RegExp","duplicate","slice","priorEvent","clearInterval","eventCallback","_getEvents","setInterval","error","property","hasOwnProperty","__proto__","prop","func","type","method","methodCall","onMethod","bind","name","functionSelector","signature","hasProperty","methodName","inputData","methodInstance","params","decodeInput","new","createSmartContract","transaction","sign","signedTransaction","sendRawTransaction","contract","at","contract_address","getContract","entrys","self","start","startCallback","_startEventListener","stop","_stopEventListener","getFunctionSelector","getParamTypes","inputs","decodeOutput","output","names","types","decodeParams","Method","outputs","sha3","defaultOptions","feeLimit","callValue","userFeePercentage","shouldPollResponse","args","arg","call","methodArgs","_call","send","_send","watch","_watch","stateMutability","parameters","triggerSmartContract","len","constant_result","msg","msg2","chunk","toUtf8","ex","broadcast","txID","checkResult","getTransactionInfo","keys","setTimeout","resMessage","decoded","contractResult","listener","Date","getTime","getEvents","Promise","reject","bindListener","parseEvent","host","timeout","user","password","headers","statusPage","isValidURL","isNaN","isObject","instance","create","baseURL","auth","hasProperties","url","payload","transactionResultManager","message","TransactionBuilder","to","sendTrx","to_address","owner_address","tokenID","sendToken","asset_name","issuerAddress","buyer","purchaseToken","duration","resource","receiverAddress","undefined","freezeBalance","isNotNullOrUndefined","frozen_balance","frozen_duration","receiver_address","unfreezeBalance","withdrawBlockRewards","applyForSR","votes","voterAddress","vote","invalid","entries","srAddress","voteCount","vote_address","vote_count","originEnergyLimit","tokenValue","tokenId","token_id","parse","payable","constructorParams","find","it","abiCoder","AbiCoder","encode","fee_limit","call_value","consume_user_resource_percent","origin_energy_limit","parameter","call_token_value","splice","_triggerSmartContract","function_selector","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","voteScore","precision","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","vote_score","accountName","updateAccount","account_name","updateToken","new_limit","new_public_limit","createProposal","proposalID","deleteProposal","proposal_id","isApproval","voteProposal","is_add_approval","tokenName","tokenBalance","trxBalance","ownerAddress","createTRXExchange","first_token_id","first_token_balance","second_token_id","second_token_balance","resources","firstTokenName","firstTokenBalance","secondTokenName","secondTokenBalance","exchangeID","tokenAmount","injectExchangeTokens","exchange_id","quant","withdrawExchangeTokens","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","expected","updateSetting","updateEnergyLimit","TRX_MESSAGE_HEADER","ETH_MESSAGE_HEADER","Trx","token","getCurrentBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransactionFromBlock","getTransaction","getConfirmedTransaction","limit","offset","getTransactionsToAddress","getTransactionsRelated","getTransactionsFromAddress","direction","all","tx","raw_data","timestamp","getAccount","getBalance","balance","getUnconfirmedAccount","getUnconfirmedBalance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","parseToken","reduce","getTokenFromID","listNodes","nodes","port","end","getBlockRange","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","floor","useTronHeader","verifyMessage","messageBytes","toUtf8Bytes","messageDigest","keccak256","recovered","recoverAddress","recoveryParam","r","s","tronAddress","base58Address","signingKey","SigningKey","signDigest","signatureHex","Number","v","signTransaction","sendTransaction","getProposal","id","proposal","listProposals","proposals","getChainParameters","chainParameter","getAccountResources","getExchangeByID","exchange","listExchanges","exchanges","getNodeInfo","info","getTokenListByName","getTokenByID","ignoreMethodHash","decode","obj","encodeParams","priKeyBytes","pubKeyBytes","addressBytes","publicKey","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","charAt","BASE","encode58","buffer","j","digits","carry","reverse","digit","decode58","bytes","c","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","indexOf","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","_utf8_encode","n","c2","c3","byte2hexStr","byte","hexByteMap","bytesToString","arr","one","match","bytesLength","store","st","hextoString","split","out","tmp","base64DecodeFromString","string64","base64EncodeToString","bin2String","array","arrayEquals","array1","array2","strict","stringToBytes","hexChar2byte","d","isHexChar","k","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","prototype","isJson","bool","constructor","properties","resolve","res","scope","block_number","block_timestamp","event_name","transaction_id","resource_Node","padLeft"],"mappings":"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","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\n\nimport {keccak256} from 'js-sha3';\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n\n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        super();\n\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if(utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n\n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.utils = utils;\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if(this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', {hex, base58});\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(!eventServer)\n            return this.eventServer = false;\n\n        if(utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        if(!this.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.eventServer = eventServer;\n        this.eventServer.isConnected = () => this.eventServer.request('healthcheck').then(() => true).catch(() => (\n            this.eventServer.request('events?size=1').then(data => (\n                Array.isArray(data)\n            ))\n        )).catch(() => false);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(contractAddress = false, sinceTimestamp = 0, eventName = false, blockNumber = false, size = 20, page = 1, callback = false) {\n\n        if(utils.isFunction(page)) {\n            callback = page;\n            page = 1;\n        }\n\n        if(utils.isFunction(size)) {\n            callback = size;\n            size = 20;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, sinceTimestamp, eventName, blockNumber, size, page);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        const routeParams = [];\n\n        if(!this.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n\n        if(!utils.isInteger(sinceTimestamp))\n            return callback('Invalid sinceTimestamp provided');\n\n        if(!utils.isInteger(size))\n            return callback('Invalid size provided');\n\n        if(size > 200) {\n            console.warn('Defaulting to maximum accepted size: 200');\n            size = 200;\n        }\n\n        if(!utils.isInteger(page))\n            return callback('Invalid page provided');\n\n        if(blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if(contractAddress)\n            routeParams.push(this.address.fromHex(contractAddress));\n\n        if(eventName)\n            routeParams.push(eventName);\n\n        if(blockNumber)\n            routeParams.push(blockNumber);\n\n        return this.eventServer.request(`event/contract/${routeParams.join('/')}?since=${sinceTimestamp}&size=${size}&page=${page}`).then((data = false) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n    getEventByTransactionID(transactionID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransactionID, transactionID);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        return this.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, '41');\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(/^(-|)0x/.test(val))\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if(result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if(utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if(!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if(utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if(hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for(; i < l; i += 2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if(!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch (err) {\n                return false;\n            }\n        }\n        try {\n            return utils.crypto.isAddressValid(address);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if(this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.getEventResult(this.address);\n        const [latestEvent] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if(options.resourceNode && !RegExp(options.resourceNode, 'i').test(event.resourceNode))\n                return false;\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if(duplicate)\n                return false;\n\n            if(!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if(latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(this.eventListener)\n            clearInterval(this.eventListener);\n\n        if(!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if(!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if(!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            if(func.type.toLowerCase() === 'constructor')\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if(!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if(!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if(!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if(!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!contract.result)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            return this.at(signedTransaction.contract_address, callback);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if(!contract.contract_address)\n                callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi.entrys);\n\n            callback(null, this);\n        } catch (ex) {\n            if(ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if(!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import utils from 'utils';\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({type}) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    const names = abi.map(({name}) => name).filter(name => !!name);\n    const types = abi.map(({type}) => type);\n\n    return utils.abi.decodeParams(names, types, output);\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.defaultOptions = {\n            feeLimit: 1000000000,\n            callValue: 0,\n            userFeePercentage: 100,\n            from: this.tronWeb.defaultAddress.hex, // Only used for send()\n            shouldPollResponse: false // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if(types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(/^(41)/, '0x')\n\n            if(types[index] == 'address[]') {\n                args[index] = args[index].map(address => {\n                    return this.tronWeb.address.toHex(address).replace(/^(41)/, '0x')\n                })\n            }\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, ...methodArgs),\n            send: (...methodArgs) => this._send(types, args, ...methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if(types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if(!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = {...this.defaultOptions, ...options};\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options,\n            parameters,\n            this.tronWeb.address.toHex(options.from),\n            (err, transaction) => {\n                if(err)\n                    return callback(err);\n\n                if(!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n\n                    const len = transaction.constant_result[0].length\n                    if(len === 0 || len % 64 === 8) {\n                        let msg = 'The call has been reverted or has thrown an error.'\n                        if(len !== 0) {\n                            msg += ' Error message: '\n                            let msg2 = ''\n                            let chunk = transaction.constant_result[0].substring(8)\n                            for(let i = 0; i < len - 8; i += 64) {\n                                msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64))\n                            }\n                            msg += msg2.replace(/(\\u0000|\\u000b|\\f)+/g, ' ').replace(/ +/g, ' ').replace(/\\s+$/g, '');\n                        }\n                        return callback(msg)\n                    }\n\n                    let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n\n                    if(output.length === 1)\n                        output = output[0];\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if(types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if(['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if(!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {...this.defaultOptions, ...options};\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if(!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if(!signedTransaction.signature) {\n                if(!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!broadcast.result)\n                return callback('Unknown error: ' + JSON.stringify(broadcast, null, 2));\n\n            if(!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if(index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if(!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if(output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if(!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if(decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(this.abi.type.toLowerCase() !== 'event')\n            return callback('Invalid method type for event watching');\n\n        if(!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        const sinceTimestamp = new Date().getTime();\n\n        const getEvents = async () => {\n            try {\n                const events = await this.tronWeb.getEventResult(this.contract.address, sinceTimestamp, this.name);\n                const [latestEvent] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if(options.resourceNode && !RegExp(options.resourceNode, 'i').test(event.resourceNode))\n                        return false;\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if(duplicate)\n                        return false;\n\n                    if(!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if(latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n        };\n\n        const bindListener = () => {\n            if(listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener(),\n            stop: () => {\n                if(!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && Object.keys(payload).length ? payload : null,\n            params: method == 'get' && payload,\n            url,\n            method\n        }).then(({data}) => data);\n    }\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport * as Ethers from 'ethers';\n\n\nconst transactionResultManager = (transaction, callback) => {\n    if(transaction.Error)\n        return callback(transaction.Error);\n\n    if(transaction.result && transaction.result.message) {\n        return callback(\n            this.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n    callback(null, transaction);\n}\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, callback = false) {\n        if(utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address, receiverAddress);\n\n        if(!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(utils.isNotNullOrUndefined(receiverAddress) && !this.tronWeb.isAddress(receiverAddress))\n            return callback('Invalid receiver address provided');\n\n        const data = {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n            resource: resource\n        }\n\n        if(utils.isNotNullOrUndefined(receiverAddress)) {\n            data.receiver_address = this.tronWeb.address.toHex(receiverAddress)\n        }\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', data, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, callback = false) {\n        if(utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address, receiverAddress);\n\n        if(!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(utils.isNotNullOrUndefined(receiverAddress) && !this.tronWeb.isAddress(receiverAddress))\n            return callback('Invalid receiver address provided');\n\n        const data = {\n            owner_address: this.tronWeb.address.toHex(address),\n            resource: resource\n        }\n\n        if(utils.isNotNullOrUndefined(receiverAddress)) {\n            data.receiver_address = this.tronWeb.address.toHex(receiverAddress)\n        }\n\n        this.tronWeb.fullNode.request('wallet/unfreezebalance', data, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n\n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([srAddress, voteCount]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        const feeLimit = options.feeLimit || 1_000_000_000;\n        const userFeePercentage = options.userFeePercentage || 100;\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        const tokenId = options.tokenId || options.token_id;\n\n        let {\n            abi = false,\n            bytecode = false,\n            parameters = [],\n            name = \"\"\n        } = options;\n\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(userFeePercentage) || userFeePercentage < 0 || userFeePercentage > 100)\n            return callback('Invalid options.userFeePercentage provided');\n\n        if(!utils.isInteger(originEnergyLimit) || originEnergyLimit < 0 || originEnergyLimit > 10_000_000)\n            return callback('Invalid options.originEnergyLimit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        var constructorParams = abi.find(\n            (it) => {\n                return it.type === 'constructor';\n            }\n        );\n\n        if(utils.isNotNullOrUndefined(tokenValue) && (!utils.isInteger(tokenValue) || tokenValue < 0))\n            return callback('Invalid options.tokenValue provided');\n\n        if(utils.isNotNullOrUndefined(tokenId) && (!utils.isInteger(tokenId) || tokenId < 0))\n            return callback('Invalid options.tokenValue provided');\n\n        if(typeof constructorParams !== 'undefined' && constructorParams) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n            constructorParams = constructorParams.inputs;\n\n            if(parameters.length != constructorParams.length)\n                return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n            for(let i = 0; i < parameters.length; i++) {\n                let type = constructorParams[i].type;\n                let value = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n\n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        const args = {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        }\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if(utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if(utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', args, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    triggerSmartContract(...params) {\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3]\n            }\n            params.splice(3,1)\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    _triggerSmartContract(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this._triggerSmartContract,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let tokenValue = options.tokenValue;\n        let tokenId = options.tokenId;\n        let callValue = options.callValue || 0;\n        let feeLimit = options.feeLimit || 1_000_000_000;\n\n        if(utils.isNotNullOrUndefined(tokenValue) && (!utils.isInteger(tokenValue) || tokenValue < 0))\n            return callback('Invalid options.tokenValue provided');\n\n        if(utils.isNotNullOrUndefined(tokenId) && (!utils.isInteger(tokenId) || tokenId < 0))\n            return callback('Invalid options.tokenValue provided');\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            let types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let {type, value} = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n\n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n\n                types = types.map(type => {\n                    if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/,'string')\n                    }\n                    return type\n                })\n\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        const args = {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        };\n\n        if(utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if(utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', args, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(utils.isNotNullOrUndefined(voteScore) && (!utils.isInteger(voteScore) || voteScore <= 0))\n            return callback('voteScore must be a positive integer greater than 0');\n\n        if(utils.isNotNullOrUndefined(precision) && (!utils.isInteger(precision) || precision <= 0 || precision > 6))\n            return callback('precision must be a positive integer > 0 and <= 6');\n\n        const data = {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore)\n        }\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', data, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address);\n        }\n\n        if(!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        if(!this.tronWeb.isAddress(address)) {\n            return callback('Invalid origin address provided');\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateaccount', {\n            account_name: this.tronWeb.fromUtf8(accountName),\n            owner_address: this.tronWeb.address.toHex(address),\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        const invalid = 'Invalid proposal parameters provided';\n\n        if(!parameters)\n            return callback(invalid);\n\n        if(!utils.isArray(parameters))\n            parameters = [parameters];\n\n        for(let parameter of parameters) {\n            if(!utils.isObject(parameter))\n                return callback(invalid);\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposalcreate', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            parameters: parameters\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/proposaldelete', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, isApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.voteProposal, proposalID, isApproval, voterAddress);\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voterAddress address provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        if(!utils.isBoolean(isApproval))\n            return callback('Invalid hasApproval provided');\n\n        this.tronWeb.fullNode.request('wallet/proposalapprove', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid address provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenBalance) || tokenBalance <= 0\n            || !utils.isInteger(trxBalance) || trxBalance <= 0)\n            return callback('Invalid amount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            first_token_id: this.tronWeb.fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTokenExchange(firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createTRXExchange, firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid address provided');\n\n        if(!utils.isString(firstTokenName) || !firstTokenName.length)\n            return callback('Invalid firstTokenName provided');\n\n        if(!utils.isString(secondTokenName) || !secondTokenName.length)\n            return callback('Invalid secondTokenName provided');\n\n        if(!utils.isInteger(firstTokenBalance) || firstTokenBalance <= 0\n            || !utils.isInteger(secondTokenBalance) || secondTokenBalance <= 0)\n            return callback('Invalid amount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            first_token_id: this.tronWeb.fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: this.tronWeb.fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangeinject', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    tradeExchangeTokens(exchangeID = false,\n                        tokenName = false,\n                        tokenAmountSold = 0,\n                        tokenAmountExpected = 0,\n                        ownerAddress = this.tronWeb.defaultAddress.hex,\n                        callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmountSold) || tokenAmountSold < 1)\n            return callback('Invalid tokenAmountSold provided');\n\n        if(!utils.isInteger(tokenAmountExpected) || tokenAmountExpected < 1)\n            return callback('Invalid tokenAmountExpected provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangetransaction', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected)\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    updateSetting(contractAddress = false,\n                  userFeePercentage = false,\n                  ownerAddress = this.tronWeb.defaultAddress.hex,\n                  callback = false) {\n\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateSetting, contractAddress, userFeePercentage, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contractAddress provided');\n\n        if(!utils.isInteger(userFeePercentage) || userFeePercentage < 0 || userFeePercentage > 100)\n            return callback('Invalid options.userFeePercentage provided');\n\n        this.tronWeb.fullNode.request('wallet/updatesetting', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update energy limit.\n     */\n    updateEnergyLimit(contractAddress = false,\n                      originEnergyLimit = false,\n                      ownerAddress = this.tronWeb.defaultAddress.hex,\n                      callback = false) {\n\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateEnergyLimit, contractAddress, originEnergyLimit, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contractAddress provided');\n\n        if(!utils.isInteger(originEnergyLimit) || originEnergyLimit < 0 || originEnergyLimit > 10_000_000)\n            return callback('Invalid options.originEnergyLimit provided');\n\n        this.tronWeb.fullNode.request('wallet/updateenergylimit', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit\n        }, 'post').then(transaction => transactionResultManager(transaction, callback)).catch(err => callback(err));\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport * as Ethers from 'ethers';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', {\n            value: blockHash\n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', {\n            num: parseInt(blockID)\n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({transactions = []}) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index = 0, callback = false) {\n        if(utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        if(!utils.isInteger(index) || index < 0)\n            return callback('Invalid transaction index provided');\n\n        this.getBlock(block).then(({transactions = false}) => {\n            if(!transactions || transactions.length < index)\n                return callback('Transaction not found in block');\n\n            callback(null, transactions[index]);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionInfo, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(!['to', 'from', 'all'].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n\n        if(direction == 'all') {\n            try {\n                const [from, to] = await Promise.all([\n                    this.getTransactionsRelated(address, 'from', limit, offset),\n                    this.getTransactionsRelated(address, 'to', limit, offset)\n                ])\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch (ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({transaction}) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0}) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({assetIssue = false}) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({nodes = []}) => {\n            callback(null, nodes.map(({address: {host, port}}) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;\n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', {\n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({block = []}) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({witnesses = []}) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({assetIssue = []}) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({assetIssue = []}) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({num = -1}) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if(utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if(!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if(message.substr(0, 2) == '0x')\n            message = message.substring(2);\n\n        if(signature.substr(0, 2) == '0x')\n            signature = signature.substr(2);\n\n        const messageBytes = [\n            ...Ethers.utils.toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = Ethers.utils.keccak256(messageBytes);\n        const recovered = Ethers.utils.recoverAddress(messageDigest, {\n            recoveryParam: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128)\n        });\n\n        const tronAddress = '41' + recovered.substr(2);\n        const base58Address = this.tronWeb.address.fromHex(tronAddress);\n\n        if(base58Address == this.tronWeb.address.fromHex(address))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n        }\n\n        if(utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader);\n\n        // Message signing\n        if(utils.isString(transaction)) {\n            if(transaction.substring(0, 2) == '0x')\n                transaction = transaction.substring(2);\n\n            if(!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signingKey = new Ethers.utils.SigningKey(privateKey);\n                const messageBytes = [\n                    ...Ethers.utils.toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n                    ...utils.code.hexStr2byteArray(transaction)\n                ];\n\n                const messageDigest = Ethers.utils.keccak256(messageBytes);\n                const signature = signingKey.signDigest(messageDigest);\n\n                const signatureHex = [\n                    '0x',\n                    signature.r.substring(2),\n                    signature.s.substring(2),\n                    Number(signature.v).toString(16)\n                ].join('');\n\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction, options);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        ).then(result => {\n            if(result.result)\n                result.transaction = signedTransaction;\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(typeof options === 'string')\n            options = {privateKey: options};\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(typeof options === 'string')\n            options = {privateKey: options};\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if(utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(typeof options === 'string')\n            options = {privateKey: options};\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options, receiverAddress);\n\n        if(!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address, receiverAddress);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if(utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(typeof options === 'string')\n            options = {privateKey: options};\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options, receiverAddress);\n\n        if(!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address, receiverAddress);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {}, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if(typeof options === 'string')\n            options = {privateKey: options};\n\n        if(!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if(!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if(!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', {\n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({proposals = []}) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({chainParameter = []}) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', {\n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            id: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n        if(!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchangespaginated', {\n            limit,\n            offset\n        }, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get info about thre node\n     */\n    getNodeInfo(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getNodeInfo);\n\n        this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post').then(info => {\n            callback(null, info);\n        }, 'post').catch(err => callback(err));\n    }\n\n\n    getTokenListByName(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenListByName, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelistbyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    getTokenByID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenByID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyid', {\n            value: tokenID\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n};\n","import * as Ethers from 'ethers';\nimport TronWeb from 'index';\n\nconst abiCoder = new Ethers.utils.AbiCoder();\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n\n    if(!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if(ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if(output.replace(/^0x/, '').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if(types[index] == 'address')\n            arg = '41' + arg.substr(2).toLowerCase();\n\n        if(names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for(let i = 0; i < types.length; i++) {\n        if(types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(/^41/, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor(let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if(buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for(i = 0; i < buffer.length; i++) {\n        for(j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for(j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for(i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if(string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for(i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if(!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for(j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for(j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for(i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if(isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if(isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if(isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if(isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if(enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if(enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if(enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if(enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for(let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if(c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if(c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if(typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if(byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if(typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for(let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if(v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for(let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for(let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for(let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if(array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for(i = 0; i < array1.length; i++) {\n        if(strict) {\n            if(array1[i] != array2[i])\n                return false;\n        } else if(JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if(typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for(let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if(c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if(c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if(c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if(c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if(c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if(c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if(typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    if(typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for(let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if(isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if(0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if(!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if(tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if(c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if(null == str)\n        return -1;\n\n    if(typeof (str) != 'string')\n        return -1;\n\n    if(str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if(str.length == 40) {\n        for(; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if(!isHexChar(c))\n                break;\n        }\n    }\n\n    if(i == 40)\n        return 1; //40 Hex, Address\n\n    for(i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if(!isNumber(c))\n            break;\n    }\n\n    if(i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for(i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if(c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","import jsSHA from 'jssha';\n\nimport {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {keccak256} from 'js-sha3';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {ec as EC} from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if(typeof (base58Sting) != 'string')\n        return false;\n\n    if(base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if(base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if(checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if(typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [signature];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if(typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if(pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if(decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if(hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if(typeof (base58Str) !== 'string')\n        return false;\n\n    if(base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if(address.length !== 25)\n        return false;\n\n    if(address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if(checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        if(typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: ['http', 'https']\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if(number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node\n        };\n    },\n\n    parseEvent(event, {inputs: abi}) {\n        if(!event.result)\n            return event;\n\n        if(this.isObject(event.result)) {\n            for(var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if(obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = '41' + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if(this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if(type == 'address')\n                    result = '41' + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi\n};\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}