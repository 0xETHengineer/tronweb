{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","constructor","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","setDefaultBlock","blockID","isInteger","Error","setAddress","address","fromPrivateKey","isAddress","toHex","fromHex","isValidProvider","provider","Object","values","some","knownProvider","isEventServerConnected","get","then","data","hasProperty","catch","setStatusPage","isValidURL","currentProviders","currentProvider","getEventResult","contractAddress","eventName","blockNumber","callback","getEventByTransacionID","transactionID","isHex","crypto","getBase58CheckAddress","code","hexStr2byteArray","byteArray2hexStr","decodeBase58Address","pkToAddress","sha3","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","toUtf8","Buffer","from","toString","toAscii","fromAscii","padding","padEnd","toDecimal","value","toBigNumber","toNumber","number","result","lessThan","substr","fromSun","sun","div","toSun","times","amount","replace","length","isAddressValid","compile","solditySource","createAccount","account","accounts","generateAccount","isConnected","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","method","toLowerCase","params","TransactionBuilder","tronWeb","sendTrx","to","isFunction","to_address","owner_address","parseInt","transaction","err","sendToken","tokenID","asset_name","purchaseToken","issuerAddress","buyer","freezeBalance","duration","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","vote","votes","voterAddress","keys","invalid","entries","map","srAddress","voteCount","vote_address","vote_count","createSmartContract","options","abi","bytecode","feeLimit","callValue","bandwidthLimit","parse","isArray","payable","func","type","fee_limit","call_value","consume_user_resource_percent","triggerSmartContract","functionSelector","parameters","abiCoder","utils","AbiCoder","types","i","push","encode","ex","contract_address","function_selector","parameter","message","createToken","name","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","Date","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","updateToken","new_limit","new_public_limit","sendAsset","args","purchaseAsset","createAsset","updateAsset","Trx","parseToken","token","getCurrentBlock","block","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransaction","getTransactionsToAddress","limit","offset","getTransactionsRelated","getTransactionsFromAddress","direction","includes","tx","sort","a","b","raw_data","timestamp","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","reduce","getTokenFromID","listNodes","nodes","port","getBlockRange","start","end","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","getContract","contract","sign","signature","signTransaction","sendRawTransaction","signedTransaction","sendTransaction","send","broadcast","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","j","digits","carry","reverse","digit","join","decode58","bytes","c","Base64","_keyStr","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","decode","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","slice","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","txID","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","r","s","id","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","obj","prototype","call","isJson","bool","Number","property","hasOwnProperty","properties","Promise","resolve","reject","res","scope","bind"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEe,MAAMA,OAAN,CAAc;AAIzBC,aAAW,CAACC,QAAD,EAAWC,YAAX,EAAyBC,WAAW,GAAG,KAAvC,EAA8CC,UAAU,GAAG,KAA3D,EAAkE;AACzE,QAAG,6CAAK,CAACC,QAAN,CAAeJ,QAAf,CAAH,EACIA,QAAQ,GAAG,IAAI,qDAAS,CAACK,YAAd,CAA2BL,QAA3B,CAAX;AAEJ,QAAG,6CAAK,CAACI,QAAN,CAAeH,YAAf,CAAH,EACIA,YAAY,GAAG,IAAI,qDAAS,CAACI,YAAd,CAA2BJ,YAA3B,CAAf;AAEJ,SAAKK,WAAL,CAAiBN,QAAjB;AACA,SAAKO,eAAL,CAAqBN,YAArB;AACA,SAAKO,cAAL,CAAoBN,WAApB;AAEA,SAAKO,SAAL,GAAiB,qDAAjB;AACA,SAAKC,SAAL,GAAiB,mDAAjB;AAEA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,iBAAL,GAAyB,KAAzB;AACA,SAAKC,cAAL,GAAsB;AAClBC,SAAG,EAAE,KADa;AAElBC,YAAM,EAAE;AAFU,KAAtB;AAKA,KACI,MADJ,EACY,OADZ,EACqB,QADrB,EAC+B,UAD/B,EAEI,SAFJ,EAEe,WAFf,EAE4B,WAF5B,EAEyC,aAFzC,EAGI,OAHJ,EAGa,SAHb,EAGwB,aAHxB,EAGuC,WAHvC,EAII,SAJJ,EAIe,eAJf,EAIgC,SAJhC,EAKEC,OALF,CAKUC,GAAG,IAAI;AACb,WAAKA,GAAL,IAAYnB,OAAO,CAACmB,GAAD,CAAnB;AACH,KAPD;AASA,QAAGd,UAAH,EACI,KAAKe,aAAL,CAAmBf,UAAnB;AAEJ,SAAKgB,kBAAL,GAA0B,IAAI,8DAAJ,CAAuB,IAAvB,CAA1B;AACA,SAAKC,GAAL,GAAW,IAAI,+CAAJ,CAAQ,IAAR,CAAX;AACA,SAAKC,OAAL,GAAe,IAAI,mDAAJ,CAAY,IAAZ,CAAf;AAEA,SAAKC,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAEDC,iBAAe,CAACC,OAAO,GAAG,KAAX,EAAkB;AAC7B,QAAGA,OAAO,KAAK,KAAZ,IAAqBA,OAAO,IAAI,QAAhC,IAA4CA,OAAO,IAAI,UAA1D,EACI,OAAO,KAAKd,YAAL,GAAoBc,OAA3B;AAEJ,QAAG,CAAC,6CAAK,CAACC,SAAN,CAAgBD,OAAhB,CAAD,IAA6B,CAACA,OAAjC,EACI,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AAEJ,SAAKhB,YAAL,GAAoB,CAACc,OAArB;AACH;;AAEDP,eAAa,CAACf,UAAD,EAAa;AACtB;AACA,SAAKyB,UAAL,CACI,KAAKC,OAAL,CAAaC,cAAb,CAA4B3B,UAA5B,CADJ,EAFsB,CAMtB;;AACA,SAAKS,iBAAL,GAAyBT,UAAzB;AACH;;AAEDyB,YAAU,CAACC,OAAD,EAAU;AAChB,QAAG,CAAC,KAAKE,SAAL,CAAeF,OAAf,CAAJ,EACI,MAAM,IAAIF,KAAJ,CAAU,0BAAV,CAAN;AAEJ,SAAKf,iBAAL,GAAyB,KAAzB;AACA,SAAKC,cAAL,GAAsB;AAClBC,SAAG,EAAE,KAAKe,OAAL,CAAaG,KAAb,CAAmBH,OAAnB,CADa;AAElBd,YAAM,EAAE,KAAKc,OAAL,CAAaI,OAAb,CAAqBJ,OAArB;AAFU,KAAtB;AAIH;;AAEDK,iBAAe,CAACC,QAAD,EAAW;AACtB,WAAOC,MAAM,CAACC,MAAP,CAAc,qDAAd,EAAyBC,IAAzB,CAA8BC,aAAa,IAAIJ,QAAQ,YAAYI,aAAnE,CAAP;AACH;;AAEDC,wBAAsB,GAAG;AACrB,QAAG,CAAC,KAAKtC,WAAT,EACI,OAAO,KAAP;AAEJ,WAAO,4CAAK,CAACuC,GAAN,CAAU,KAAKvC,WAAf,EAA4BwC,IAA5B,CAAiC,CAAC;AAAEC;AAAF,KAAD,KAAc;AAClD,aAAO,6CAAK,CAACC,WAAN,CAAkBD,IAAlB,EAAwB,QAAxB,CAAP;AACH,KAFM,EAEJE,KAFI,CAEE,MAAM,KAFR,CAAP;AAGH;;AAEDvC,aAAW,CAACN,QAAD,EAAW;AAClB,QAAG,CAAC,KAAKkC,eAAL,CAAqBlC,QAArB,CAAJ,EACI,MAAM,IAAI2B,KAAJ,CAAU,4BAAV,CAAN;AAEJ,SAAK3B,QAAL,GAAgBA,QAAhB;AACA,SAAKA,QAAL,CAAc8C,aAAd,CAA4B,oBAA5B;AACH;;AAEDvC,iBAAe,CAACN,YAAD,EAAe;AAC1B,QAAG,CAAC,KAAKiC,eAAL,CAAqBjC,YAArB,CAAJ,EACI,MAAM,IAAI0B,KAAJ,CAAU,gCAAV,CAAN;AAEJ,SAAK1B,YAAL,GAAoBA,YAApB;AACA,SAAKA,YAAL,CAAkB6C,aAAlB,CAAgC,4BAAhC;AACH;;AAEDtC,gBAAc,CAACN,WAAW,GAAG,KAAf,EAAsB;AAChC,QAAGA,WAAW,KAAK,KAAhB,IAAyB,CAAC,6CAAK,CAAC6C,UAAN,CAAiB7C,WAAjB,CAA7B,EACI,MAAM,IAAIyB,KAAJ,CAAU,uCAAV,CAAN;AAEJ,SAAKzB,WAAL,GAAmBA,WAAnB;AACH;;AAED8C,kBAAgB,GAAG;AACf,WAAO;AACHhD,cAAQ,EAAE,KAAKA,QADZ;AAEHC,kBAAY,EAAE,KAAKA,YAFhB;AAGHC,iBAAW,EAAE,KAAKA;AAHf,KAAP;AAKH;;AAED+C,iBAAe,GAAG;AACd,WAAO,KAAKD,gBAAL,EAAP;AACH,GAzHwB,CA2HzB;;;AACAE,gBAAc,CAACC,eAAD,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,QAAQ,GAAG,KAArD,EAA4D;AACtE,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4B,cAAxB,EAAwCC,eAAxC,EAAyDC,SAAzD,EAAoEC,WAApE,CAAP;AACP,GA/HwB,CAiIzB;;;AACAE,wBAAsB,CAACC,aAAD,EAAgBF,QAAQ,GAAG,KAA3B,EAAkC;AACpD,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKiC,sBAAxB,EAAgDC,aAAhD,CAAP;AACP;;AAED,aAAW3B,OAAX,GAAqB;AACjB,WAAO;AACHI,aAAO,CAACJ,OAAD,EAAU;AACb,YAAG,CAAC,6CAAK,CAAC4B,KAAN,CAAY5B,OAAZ,CAAJ,EACI,OAAOA,OAAP;AAEJ,eAAO,6CAAK,CAAC6B,MAAN,CAAaC,qBAAb,CACH,6CAAK,CAACC,IAAN,CAAWC,gBAAX,CAA4BhC,OAA5B,CADG,CAAP;AAGH,OARE;;AASHG,WAAK,CAACH,OAAD,EAAU;AACX,YAAG,6CAAK,CAAC4B,KAAN,CAAY5B,OAAZ,CAAH,EACI,OAAOA,OAAP;AAEJ,eAAO,6CAAK,CAAC+B,IAAN,CAAWE,gBAAX,CACH,6CAAK,CAACJ,MAAN,CAAaK,mBAAb,CAAiClC,OAAjC,CADG,CAAP;AAGH,OAhBE;;AAiBHC,oBAAc,CAAC3B,UAAD,EAAa;AACvB,YAAI;AACA,iBAAO,6CAAK,CAACuD,MAAN,CAAaM,WAAb,CAAyB7D,UAAzB,CAAP;AACH,SAFD,CAEE,gBAAM;AAAE,iBAAO,KAAP;AAAe;AAC5B;;AArBE,KAAP;AAuBH;;AAED,SAAO8D,IAAP,CAAYC,MAAZ,EAAoB;AAChB,WAAO,wDAAQ,CAACA,MAAD,CAAf;AACH;;AAED,SAAOlC,KAAP,CAAamC,GAAb,EAAkB;AACd,QAAG,6CAAK,CAACC,SAAN,CAAgBD,GAAhB,CAAH,EACI,OAAOrE,OAAO,CAACuE,WAAR,CAAoB,CAACF,GAArB,CAAP;AAEJ,QAAG,6CAAK,CAACG,WAAN,CAAkBH,GAAlB,CAAH,EACI,OAAOrE,OAAO,CAACuE,WAAR,CAAoBF,GAApB,CAAP;AAEJ,QAAG,OAAOA,GAAP,KAAe,QAAlB,EACI,OAAOrE,OAAO,CAACyE,QAAR,CAAiBC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAAjB,CAAP;;AAEJ,QAAG,6CAAK,CAAC/D,QAAN,CAAe+D,GAAf,CAAH,EAAwB;AACpB,UAAGA,GAAG,CAACO,OAAJ,CAAY,KAAZ,MAAuB,CAA1B,EACI,OAAO5E,OAAO,CAACuE,WAAR,CAAoBF,GAApB,CAAP;AAEJ,UAAGA,GAAG,CAACO,OAAJ,CAAY,IAAZ,MAAsB,CAAzB,EACI,OAAOP,GAAP;AAEJ,UAAG,CAACQ,QAAQ,CAACR,GAAD,CAAZ,EACI,OAAOrE,OAAO,CAACyE,QAAR,CAAiBJ,GAAjB,CAAP;AACP;;AAED,WAAOrE,OAAO,CAACuE,WAAR,CAAoBF,GAApB,CAAP;AACH;;AAED,SAAOS,MAAP,CAAc9D,GAAd,EAAmB;AACf,WAAO+D,MAAM,CAACC,IAAP,CAAYhE,GAAZ,EAAiB,KAAjB,EAAwBiE,QAAxB,CAAiC,MAAjC,CAAP;AACH;;AAED,SAAOR,QAAP,CAAgBL,MAAhB,EAAwB;AACpB,WAAOW,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoB,MAApB,EAA4Ba,QAA5B,CAAqC,KAArC,CAAP;AACH;;AAED,SAAOC,OAAP,CAAelE,GAAf,EAAoB;AAChB,WAAO+D,MAAM,CAACC,IAAP,CAAYhE,GAAZ,EAAiB,KAAjB,EAAwBiE,QAAxB,CAAiC,OAAjC,CAAP;AACH;;AAED,SAAOE,SAAP,CAAiBf,MAAjB,EAAyBgB,OAAzB,EAAkC;AAC9B,WAAOL,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoB,OAApB,EAA6Ba,QAA7B,CAAsC,KAAtC,EAA6CI,MAA7C,CAAoDD,OAApD,EAA6D,GAA7D,CAAP;AACH;;AAED,SAAOE,SAAP,CAAiBC,KAAjB,EAAwB;AACpB,WAAOvF,OAAO,CAACwF,WAAR,CAAoBD,KAApB,EAA2BE,QAA3B,EAAP;AACH;;AAED,SAAOlB,WAAP,CAAmBgB,KAAnB,EAA0B;AACtB,UAAMG,MAAM,GAAG1F,OAAO,CAACwF,WAAR,CAAoBD,KAApB,CAAf;AACA,UAAMI,MAAM,GAAGD,MAAM,CAACT,QAAP,CAAgB,EAAhB,CAAf;AAEA,WAAOS,MAAM,CAACE,QAAP,CAAgB,CAAhB,IAAqB,QAAQD,MAAM,CAACE,MAAP,CAAc,CAAd,CAA7B,GAAgD,OAAOF,MAA9D;AACH;;AAED,SAAOG,OAAP,CAAeC,GAAf,EAAoB;AAChB,UAAMzE,GAAG,GAAGtB,OAAO,CAACwF,WAAR,CAAoBlE,GAApB,EAAyB0E,GAAzB,CAA6B,OAA7B,CAAZ;AACA,WAAO,6CAAK,CAACxB,WAAN,CAAkBuB,GAAlB,IAAyBzE,GAAzB,GAA+BA,GAAG,CAAC2D,QAAJ,CAAa,EAAb,CAAtC;AACH;;AAED,SAAOgB,KAAP,CAAa3E,GAAb,EAAkB;AACd,UAAMyE,GAAG,GAAG/F,OAAO,CAACwF,WAAR,CAAoBlE,GAApB,EAAyB4E,KAAzB,CAA+B,OAA/B,CAAZ;AACA,WAAO,6CAAK,CAAC1B,WAAN,CAAkBlD,GAAlB,IAAyByE,GAAzB,GAA+BA,GAAG,CAACd,QAAJ,CAAa,EAAb,CAAtC;AACH;;AAED,SAAOO,WAAP,CAAmBW,MAAM,GAAG,CAA5B,EAA+B;AAC3B,QAAG,6CAAK,CAAC3B,WAAN,CAAkB2B,MAAlB,CAAH,EACI,OAAOA,MAAP;AAEJ,QAAG,6CAAK,CAAC7F,QAAN,CAAe6F,MAAf,MAA2BA,MAAM,CAACvB,OAAP,CAAe,IAAf,MAAyB,CAAzB,IAA8BuB,MAAM,CAACvB,OAAP,CAAe,KAAf,MAA0B,CAAnF,CAAH,EACI,OAAO,IAAI,mDAAJ,CAAcuB,MAAM,CAACC,OAAP,CAAe,IAAf,EAAqB,EAArB,CAAd,EAAwC,EAAxC,CAAP;AAEJ,WAAO,IAAI,mDAAJ,CAAcD,MAAM,CAAClB,QAAP,CAAgB,EAAhB,CAAd,EAAmC,EAAnC,CAAP;AACH;;AAED,SAAOhD,SAAP,CAAiBF,OAAO,GAAG,KAA3B,EAAkC;AAC9B,QAAG,CAAC,6CAAK,CAACzB,QAAN,CAAeyB,OAAf,CAAJ,EACI,OAAO,KAAP,CAF0B,CAI9B;;AACA,QAAGA,OAAO,CAACsE,MAAR,KAAmB,EAAtB,EAA0B;AACtB,aAAOrG,OAAO,CAACiC,SAAR,CACH,6CAAK,CAAC2B,MAAN,CAAaC,qBAAb,CACI,6CAAK,CAACC,IAAN,CAAWC,gBAAX,CAA4BhC,OAA5B,CADJ,CADG,CAAP;AAKH;;AAED,WAAO,6CAAK,CAAC6B,MAAN,CAAa0C,cAAb,CAA4BvE,OAA5B,CAAP;AACH,GA1PwB,CA4PzB;;;AACA,SAAOwE,OAAP,CAAeC,aAAf,EAA8B,CAE7B;;AAED,eAAaC,aAAb,CAA2BjD,QAAQ,GAAG,KAAtC,EAA6C;AACzC,UAAMkD,OAAO,GAAG,6CAAK,CAACC,QAAN,CAAeC,eAAf,EAAhB;AAEA,QAAGpD,QAAH,EACIA,QAAQ,CAAC,IAAD,EAAOkD,OAAP,CAAR;AAEJ,WAAOA,OAAP;AACH;;AAED,QAAMG,WAAN,CAAkBrD,QAAQ,GAAG,KAA7B,EAAoC;AAChC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqF,WAAxB,CAAP;AAEJrD,YAAQ,CAAC,IAAD,EAAO;AACXtD,cAAQ,EAAE,MAAM,KAAKA,QAAL,CAAc2G,WAAd,EADL;AAEX1G,kBAAY,EAAE,MAAM,KAAKA,YAAL,CAAkB0G,WAAlB,EAFT;AAGXzG,iBAAW,EAAE,MAAM,KAAKsC,sBAAL;AAHR,KAAP,CAAR;AAKH;;AAnRwB;;gBAAR1C,O,eACE,qD;;gBADFA,O,eAEE,mD;;AAkRtB,C;;;;;;;;;;;;;;;;;;;;AC9RD;AACA;AAEe,MAAMO,YAAN,CAAmB;AAC9BN,aAAW,CAAC6G,IAAD,EAAOC,OAAO,GAAG,KAAjB,EAAwBC,IAAI,GAAG,KAA/B,EAAsCC,QAAQ,GAAG,KAAjD,EAAwDC,OAAO,GAAG,EAAlE,EAAsEC,UAAU,GAAG,GAAnF,EAAwF;AAC/F,QAAG,CAAC,6CAAK,CAAClE,UAAN,CAAiB6D,IAAjB,CAAJ,EACI,MAAM,IAAIjF,KAAJ,CAAU,sCAAV,CAAN;AAEJ,QAAGuF,KAAK,CAACL,OAAD,CAAL,IAAkBA,OAAO,GAAG,CAA/B,EACI,MAAM,IAAIlF,KAAJ,CAAU,mCAAV,CAAN;AAEJ,QAAG,CAAC,6CAAK,CAACwF,QAAN,CAAeH,OAAf,CAAJ,EACI,MAAM,IAAIrF,KAAJ,CAAU,iCAAV,CAAN;AAEJ,QAAGiF,IAAI,CAACQ,MAAL,CAAYR,IAAI,CAACT,MAAL,GAAc,CAA1B,MAAiC,GAApC,EACIS,IAAI,GAAGA,IAAI,CAACjB,MAAL,CAAY,CAAZ,EAAeiB,IAAI,CAACT,MAAL,GAAc,CAA7B,CAAP;AAEJ,SAAKS,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKI,QAAL,GAAgB,4CAAK,CAACC,MAAN,CAAa;AACzBC,aAAO,EAAEX,IADgB;AAEzBC,aAAO,EAAEA,OAFgB;AAGzBG,aAAO,EAAEA,OAHgB;AAIzBQ,UAAI,EAAE;AACFV,YADE;AAEFC;AAFE;AAJmB,KAAb,CAAhB;AASH;;AAEDjE,eAAa,CAACmE,UAAU,GAAG,GAAd,EAAmB;AAC5B,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AAED,QAAMN,WAAN,CAAkBM,UAAU,GAAG,KAAKA,UAApC,EAAgD;AAC5C,WAAO,KAAKQ,OAAL,CAAaR,UAAb,EAAyBvE,IAAzB,CAA8BC,IAAI,IAAI;AACzC,aAAO,6CAAK,CAAC+E,aAAN,CAAoB/E,IAApB,EAA0B,SAA1B,EAAqC,cAArC,CAAP;AACH,KAFM,EAEJE,KAFI,CAEE,MAAM,KAFR,CAAP;AAGH;;AAED4E,SAAO,CAACE,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoBC,MAAM,GAAG,KAA7B,EAAoC;AACvCA,UAAM,GAAGA,MAAM,CAACC,WAAP,EAAT;AAEA,WAAO,KAAKT,QAAL,CAAcI,OAAd,CAAsB;AACzB9E,UAAI,EAAEkF,MAAM,IAAI,MAAV,IAAoBD,OADD;AAEzBG,YAAM,EAAEF,MAAM,IAAG,KAAT,IAAkBD,OAFD;AAGzBD,SAHyB;AAIzBE;AAJyB,KAAtB,EAKJnF,IALI,CAKC,CAAC;AAAEC;AAAF,KAAD,KAAcA,IALf,CAAP;AAMH;;AAnD6B;AAoDjC,C;;;;;;;;;;;;;;;;;ACvDD;AAEe;AACXtC,EAAA,mEAAYA;AADD,CAAf,E;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEe,MAAM2H,kBAAN,CAAyB;AACpCjI,aAAW,CAACkI,OAAO,GAAG,KAAX,EAAkB;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAItG,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAKsG,OAAL,GAAeA,OAAf;AACA,SAAK3G,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAED2G,SAAO,CAACC,EAAE,GAAG,KAAN,EAAalC,MAAM,GAAG,CAAtB,EAAyBnB,IAAI,GAAG,KAAKmD,OAAL,CAAapH,cAAb,CAA4BC,GAA5D,EAAiEwC,QAAQ,GAAG,KAA5E,EAAmF;AACtF,QAAG,6CAAK,CAAC8E,UAAN,CAAiBtD,IAAjB,CAAH,EAA2B;AACvBxB,cAAQ,GAAGwB,IAAX;AACAA,UAAI,GAAG,KAAKmD,OAAL,CAAapH,cAAb,CAA4BC,GAAnC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4G,OAAxB,EAAiCC,EAAjC,EAAqClC,MAArC,EAA6CnB,IAA7C,CAAP;AAEJ,QAAG,CAAC,KAAKmD,OAAL,CAAalG,SAAb,CAAuBoG,EAAvB,CAAJ,EACI,OAAO7E,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+C,IAAvB,CAAJ,EACI,OAAOxB,QAAQ,CAAC,iCAAD,CAAf;AAEJ6E,MAAE,GAAG,KAAKF,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BmG,EAA3B,CAAL;AACArD,QAAI,GAAG,KAAKmD,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8C,IAA3B,CAAP;AAEA,QAAGqD,EAAE,KAAKrD,IAAV,EACI,OAAOxB,QAAQ,CAAC,yCAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,0BAA9B,EAA0D;AACtDY,gBAAU,EAAEF,EAD0C;AAEtDG,mBAAa,EAAExD,IAFuC;AAGtDmB,YAAM,EAAEsC,QAAQ,CAACtC,MAAD;AAHsC,KAA1D,EAIG,MAJH,EAIWvD,IAJX,CAIgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KATD,EASG3F,KATH,CASS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CATxB;AAUH;;AAEDC,WAAS,CAACP,EAAE,GAAG,KAAN,EAAalC,MAAM,GAAG,CAAtB,EAAyB0C,OAAO,GAAG,KAAnC,EAA0C7D,IAAI,GAAG,KAAKmD,OAAL,CAAapH,cAAb,CAA4BC,GAA7E,EAAkFwC,QAAQ,GAAG,KAA7F,EAAoG;AACzG,QAAG,6CAAK,CAAC8E,UAAN,CAAiBtD,IAAjB,CAAH,EAA2B;AACvBxB,cAAQ,GAAGwB,IAAX;AACAA,UAAI,GAAG,KAAKmD,OAAL,CAAapH,cAAb,CAA4BC,GAAnC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoH,SAAxB,EAAmCP,EAAnC,EAAuClC,MAAvC,EAA+C0C,OAA/C,EAAwD7D,IAAxD,CAAP;AAEJ,QAAG,CAAC,KAAKmD,OAAL,CAAalG,SAAb,CAAuBoG,EAAvB,CAAJ,EACI,OAAO7E,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeuI,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACxC,MAAxC,EACI,OAAO7C,QAAQ,CAAC,2BAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+C,IAAvB,CAAJ,EACI,OAAOxB,QAAQ,CAAC,iCAAD,CAAf;AAEJ6E,MAAE,GAAG,KAAKF,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BmG,EAA3B,CAAL;AACAQ,WAAO,GAAG,KAAKV,OAAL,CAAa1D,QAAb,CAAsBoE,OAAtB,CAAV;AACA7D,QAAI,GAAG,KAAKmD,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8C,IAA3B,CAAP;AAEA,QAAGqD,EAAE,KAAKrD,IAAV,EACI,OAAOxB,QAAQ,CAAC,4CAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDY,gBAAU,EAAEF,EADsC;AAElDG,mBAAa,EAAExD,IAFmC;AAGlD8D,gBAAU,EAAED,OAHsC;AAIlD1C,YAAM,EAAEsC,QAAQ,CAACtC,MAAD;AAJkC,KAAtD,EAKG,MALH,EAKWvD,IALX,CAKgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAVD,EAUG3F,KAVH,CAUS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAVxB;AAWH;;AAEDI,eAAa,CAACC,aAAa,GAAG,KAAjB,EAAwBH,OAAO,GAAG,KAAlC,EAAyC1C,MAAM,GAAG,CAAlD,EAAqD8C,KAAK,GAAG,KAAKd,OAAL,CAAapH,cAAb,CAA4BC,GAAzF,EAA8FwC,QAAQ,GAAG,KAAzG,EAAgH;AACzH,QAAG,6CAAK,CAAC8E,UAAN,CAAiBW,KAAjB,CAAH,EAA4B;AACxBzF,cAAQ,GAAGyF,KAAX;AACAA,WAAK,GAAG,KAAKd,OAAL,CAAapH,cAAb,CAA4BC,GAApC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKuH,aAAxB,EAAuCC,aAAvC,EAAsDH,OAAtD,EAA+D1C,MAA/D,EAAuE8C,KAAvE,CAAP;AAEJ,QAAG,CAAC,KAAKd,OAAL,CAAalG,SAAb,CAAuB+G,aAAvB,CAAJ,EACI,OAAOxF,QAAQ,CAAC,iCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeuI,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACxC,MAAxC,EACI,OAAO7C,QAAQ,CAAC,2BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuBgH,KAAvB,CAAJ,EACI,OAAOzF,QAAQ,CAAC,gCAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,8BAA9B,EAA8D;AAC1DY,gBAAU,EAAE,KAAKJ,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8G,aAA3B,CAD8C;AAE1DR,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B+G,KAA3B,CAF2C;AAG1DH,gBAAU,EAAE,KAAKX,OAAL,CAAa1D,QAAb,CAAsBoE,OAAtB,CAH8C;AAI1D1C,YAAM,EAAEsC,QAAQ,CAACtC,MAAD;AAJ0C,KAA9D,EAKG,MALH,EAKWvD,IALX,CAKgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAVD,EAUG3F,KAVH,CAUS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAVxB;AAWH;;AAEDO,eAAa,CAACnH,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CmF,MAAM,GAAG,CAArD,EAAwDgD,QAAQ,GAAG,CAAnE,EAAsE3F,QAAQ,GAAG,KAAjF,EAAwF;AACjG,QAAG,6CAAK,CAAC8E,UAAN,CAAiBa,QAAjB,CAAH,EAA+B;AAC3B3F,cAAQ,GAAG2F,QAAX;AACAA,cAAQ,GAAG,CAAX;AACH;;AAED,QAAG,CAAC3F,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0H,aAAxB,EAAuCnH,OAAvC,EAAgDoE,MAAhD,EAAwDgD,QAAxD,CAAP;AAEJ,QAAG,CAAC,KAAKhB,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuH,QAAhB,CAAD,IAA8BA,QAAQ,GAAG,CAA5C,EACI,OAAO3F,QAAQ,CAAC,8CAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CADmC;AAElDqH,oBAAc,EAAEX,QAAQ,CAACtC,MAAD,CAF0B;AAGlDkD,qBAAe,EAAEZ,QAAQ,CAACU,QAAD;AAHyB,KAAtD,EAIG,MAJH,EAIWvG,IAJX,CAIgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KATD,EASG3F,KATH,CASS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CATxB;AAUH;;AAEDW,iBAAe,CAACvH,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACzE,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK8H,eAAxB,EAAyCvH,OAAzC,CAAP;AAEJ,QAAG,CAAC,KAAKoG,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B;AADqC,KAAxD,EAEG,MAFH,EAEWa,IAFX,CAEgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAPD,EAOG3F,KAPH,CAOS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAPxB;AAQH;;AAEDY,sBAAoB,CAACxH,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AAC9E,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+H,oBAAxB,EAA8CxH,OAA9C,CAAP;AAEJ,QAAG,CAAC,KAAKoG,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,wBAA9B,EAAwD;AACpDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B;AADqC,KAAxD,EAEG,MAFH,EAEWa,IAFX,CAEgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAPD,EAOG3F,KAPH,CAOS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAPxB;AAQH;;AAEDa,YAAU,CAACzH,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4C6G,GAAG,GAAG,KAAlD,EAAyDrE,QAAQ,GAAG,KAApE,EAA2E;AACjF,QAAG,6CAAK,CAACP,UAAN,CAAiBlB,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGqE,GAAG,IAAI,KAAlB;AACAA,SAAG,GAAG9F,OAAN;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKgI,UAAxB,EAAoCzH,OAApC,EAA6C8F,GAA7C,CAAP;AAEJ,QAAG,CAAC,KAAKM,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAACP,UAAN,CAAiB4E,GAAjB,CAAJ,EACI,OAAOrE,QAAQ,CAAC,sBAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CADmC;AAElD8F,SAAG,EAAE,KAAKM,OAAL,CAAa1D,QAAb,CAAsBoD,GAAtB;AAF6C,KAAtD,EAGG,MAHH,EAGWjF,IAHX,CAGgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KARD,EAQG3F,KARH,CAQS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CARxB;AASH;;AAEDc,MAAI,CAACC,KAAK,GAAG,EAAT,EAAaC,YAAY,GAAG,KAAKxB,OAAL,CAAapH,cAAb,CAA4BC,GAAxD,EAA6DwC,QAAQ,GAAG,KAAxE,EAA+E;AAC/E,QAAG,6CAAK,CAAC8E,UAAN,CAAiBqB,YAAjB,CAAH,EAAmC;AAC/BnG,cAAQ,GAAGmG,YAAX;AACAA,kBAAY,GAAG,KAAKxB,OAAL,CAAapH,cAAb,CAA4BC,GAA3C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKiI,IAAxB,EAA8BC,KAA9B,EAAqCC,YAArC,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACtC,QAAN,CAAeqC,KAAf,CAAD,IAA0B,CAACpH,MAAM,CAACsH,IAAP,CAAYF,KAAZ,EAAmBrD,MAAjD,EACI,OAAO7C,QAAQ,CAAC,+BAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB0H,YAAvB,CAAJ,EACI,OAAOnG,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAIqG,OAAO,GAAG,KAAd;AAEAH,SAAK,GAAGpH,MAAM,CAACwH,OAAP,CAAeJ,KAAf,EAAsBK,GAAtB,CAA0B,CAAC,CAAEC,SAAF,EAAaC,SAAb,CAAD,KAA8B;AAC5D,UAAGJ,OAAH,EACI;;AAEJ,UAAG,CAAC,KAAK1B,OAAL,CAAalG,SAAb,CAAuB+H,SAAvB,CAAJ,EAAuC;AACnCxG,gBAAQ,CAAC,kCAAkCwG,SAAnC,CAAR;AACA,eAAOH,OAAO,GAAG,IAAjB;AACH;;AAED,UAAG,CAAC,6CAAK,CAACjI,SAAN,CAAgBqI,SAAhB,CAAD,IAA+BA,SAAS,IAAI,CAA/C,EAAkD;AAC9CzG,gBAAQ,CAAC,yCAAyCwG,SAA1C,CAAR;AACA,eAAOH,OAAO,GAAG,IAAjB;AACH;;AAED,aAAO;AACHK,oBAAY,EAAE,KAAK/B,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8H,SAA3B,CADX;AAEHG,kBAAU,EAAE1B,QAAQ,CAACwB,SAAD;AAFjB,OAAP;AAIH,KAlBO,CAAR;AAoBA,QAAGJ,OAAH,EACI;AAEJ,SAAK1B,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2ByH,YAA3B,CADwC;AAEvDD;AAFuD,KAA3D,EAGG,MAHH,EAGW9G,IAHX,CAGgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KARD,EAQG3F,KARH,CAQS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CARxB;AASH;;AAEDyB,qBAAmB,CAACC,OAAO,GAAG,EAAX,EAAerB,aAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACjG,QAAG,6CAAK,CAAC8E,UAAN,CAAiBU,aAAjB,CAAH,EAAoC;AAChCxF,cAAQ,GAAGwF,aAAX;AACAA,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4I,mBAAxB,EAA6CC,OAA7C,EAAsDrB,aAAtD,CAAP;AAEJ,QAAI;AACAsB,SAAG,GAAG,KADN;AAEAC,cAAQ,GAAG,KAFX;AAGAC,cAAQ,GAAG,CAHX;AAIAC,eAAS,GAAG,CAJZ;AAKAC,oBAAc,GAAG;AALjB,QAMAL,OANJ;;AAQA,QAAGC,GAAG,IAAI,6CAAK,CAAChK,QAAN,CAAegK,GAAf,CAAV,EAA+B;AAC3B,UAAI;AACAA,WAAG,GAAG5F,IAAI,CAACiG,KAAL,CAAWL,GAAX,CAAN;AACH,OAFD,CAEE,gBAAK;AACH,eAAO9G,QAAQ,CAAC,8BAAD,CAAf;AACH;AACJ;;AAED,QAAG,CAAC,6CAAK,CAACoH,OAAN,CAAcN,GAAd,CAAJ,EACI,OAAO9G,QAAQ,CAAC,8BAAD,CAAf;AAEJ,UAAMqH,OAAO,GAAGP,GAAG,CAAC9H,IAAJ,CAASsI,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,IAAL,IAAa,aAAb,IAA8BD,IAAI,CAACD,OAA1C;AACH,KAFe,CAAhB;AAIA,QAAG,CAAC,6CAAK,CAAClH,KAAN,CAAY4G,QAAZ,CAAJ,EACI,OAAO/G,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB4I,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAOhH,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6I,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAOjH,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAGqH,OAAO,IAAIJ,SAAS,IAAI,CAA3B,EACI,OAAOjH,QAAQ,CAAC,wEAAD,CAAf;AAEJ,QAAG,CAACqH,OAAD,IAAYJ,SAAS,GAAG,CAA3B,EACI,OAAOjH,QAAQ,CAAC,2DAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB8I,cAAhB,CAAD,IAAoCA,cAAc,GAAG,CAArD,IAA0DA,cAAc,GAAG,GAA9E,EACI,OAAOlH,QAAQ,CAAC,yCAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+G,aAAvB,CAAJ,EACI,OAAOxF,QAAQ,CAAC,iCAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,uBAA9B,EAAuD;AACnDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8G,aAA3B,CADoC;AAEnDgC,eAAS,EAAEvC,QAAQ,CAAC+B,QAAD,CAFgC;AAGnDS,gBAAU,EAAExC,QAAQ,CAACgC,SAAD,CAH+B;AAInDS,mCAA6B,EAAER,cAJoB;AAKnDJ,SAAG,EAAE5F,IAAI,CAACC,SAAL,CAAe2F,GAAf,CAL8C;AAMnDC;AANmD,KAAvD,EAOG,MAPH,EAOW3H,IAPX,CAOgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;AAEJ2B,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAZD,EAYG3F,KAZH,CAYS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAZxB;AAaH;;AAEDwC,sBAAoB,CAChB9H,eADgB,EAEhB+H,gBAFgB,EAGhBZ,QAHgB,EAIhBC,SAAS,GAAG,CAJI,EAKhBY,UAAU,GAAG,EALG,EAMhBrC,aAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAN5B,EAOhBwC,QAAQ,GAAG,KAPK,EAQlB;AACE,QAAG,6CAAK,CAAC8E,UAAN,CAAiBU,aAAjB,CAAH,EAAoC;AAChCxF,cAAQ,GAAGwF,aAAX;AACAA,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,6CAAK,CAACsH,UAAN,CAAiB+C,UAAjB,CAAH,EAAiC;AAC7B7H,cAAQ,GAAG6H,UAAX;AACAA,gBAAU,GAAG,EAAb;AACArC,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,6CAAK,CAACsH,UAAN,CAAiBmC,SAAjB,CAAH,EAAgC;AAC5BjH,cAAQ,GAAGiH,SAAX;AACAA,eAAS,GAAG,CAAZ;AACAY,gBAAU,GAAG,EAAb;AACArC,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EAAc;AACV,aAAO,KAAKhC,aAAL,CACH,KAAK2J,oBADF,EAEH9H,eAFG,EAGH+H,gBAHG,EAIHZ,QAJG,EAKHC,SALG,EAMHY,UANG,EAOHrC,aAPG,CAAP;AASH;;AAED,QAAG,CAAC,KAAKb,OAAL,CAAalG,SAAb,CAAuBoB,eAAvB,CAAJ,EACI,OAAOG,QAAQ,CAAC,mCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAe8K,gBAAf,CAAD,IAAqC,CAACA,gBAAgB,CAAC/E,MAA1D,EACI,OAAO7C,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6I,SAAhB,CAAD,IAA+BA,SAAS,GAAG,CAA9C,EACI,OAAOjH,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB4I,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA1C,IAA+CA,QAAQ,GAAG,UAA7D,EACI,OAAOhH,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAACoH,OAAN,CAAcS,UAAd,CAAJ,EACI,OAAO7H,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+G,aAAvB,CAAJ,EACI,OAAOxF,QAAQ,CAAC,iCAAD,CAAf;AAEJ4H,oBAAgB,GAAGA,gBAAgB,CAAChF,OAAjB,CAAyB,QAAzB,EAAmC,EAAnC,CAAnB;;AAEA,QAAGiF,UAAU,CAAChF,MAAd,EAAsB;AAClB,YAAMiF,QAAQ,GAAG,IAAI,6CAAM,CAACC,KAAP,CAAaC,QAAjB,EAAjB;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMlJ,MAAM,GAAG,EAAf;;AAEA,WAAI,IAAImJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,UAAU,CAAChF,MAA9B,EAAsCqF,CAAC,EAAvC,EAA2C;AACvC,YAAI;AAAEX,cAAF;AAAQxF;AAAR,YAAkB8F,UAAU,CAACK,CAAD,CAAhC;AAEA,YAAG,CAACX,IAAD,IAAS,CAAC,6CAAK,CAACzK,QAAN,CAAeyK,IAAf,CAAV,IAAkC,CAACA,IAAI,CAAC1E,MAA3C,EACI,OAAO7C,QAAQ,CAAC,sCAAsCuH,IAAvC,CAAf;AAEJ,YAAG,CAACxF,KAAJ,EACI,OAAO/B,QAAQ,CAAC,uCAAuC+B,KAAxC,CAAf;AAEJ,YAAGwF,IAAI,IAAI,SAAX,EACIxF,KAAK,GAAG,KAAK4C,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BqD,KAA3B,EAAkCa,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAR;AAEJqF,aAAK,CAACE,IAAN,CAAWZ,IAAX;AACAxI,cAAM,CAACoJ,IAAP,CAAYpG,KAAZ;AACH;;AAED,UAAI;AACA8F,kBAAU,GAAGC,QAAQ,CAACM,MAAT,CAAgBH,KAAhB,EAAuBlJ,MAAvB,EAA+B6D,OAA/B,CAAuC,OAAvC,EAAgD,EAAhD,CAAb;AACH,OAFD,CAEE,OAAOyF,EAAP,EAAW;AACT,eAAOrI,QAAQ,CAACqI,EAAD,CAAf;AACH;AACJ,KA1BD,MA0BOR,UAAU,GAAG,EAAb;;AAEP,SAAKlD,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,6BAA9B,EAA6D;AACzDmE,sBAAgB,EAAE,KAAK3D,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BmB,eAA3B,CADuC;AAEzDmF,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8G,aAA3B,CAF0C;AAGzD+C,uBAAiB,EAAEX,gBAHsC;AAIzDJ,eAAS,EAAEvC,QAAQ,CAAC+B,QAAD,CAJsC;AAKzDS,gBAAU,EAAExC,QAAQ,CAACgC,SAAD,CALqC;AAMzDuB,eAAS,EAAEX;AAN8C,KAA7D,EAOG,MAPH,EAOWzI,IAPX,CAOgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;;AAEJ,UAAG6G,WAAW,CAAC/C,MAAZ,IAAsB+C,WAAW,CAAC/C,MAAZ,CAAmBsG,OAA5C,EAAqD;AACjD,eAAOzI,QAAQ,CACX,KAAK2E,OAAL,CAAarD,MAAb,CAAoB4D,WAAW,CAAC/C,MAAZ,CAAmBsG,OAAvC,CADW,CAAf;AAGH;;AAED,UAAG,CAACvD,WAAW,CAAC/C,MAAZ,CAAmBA,MAAvB,EACI,OAAOnC,QAAQ,CAACkF,WAAD,CAAf;AAEJlF,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KArBD,EAqBG3F,KArBH,CAqBS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CArBxB;AAsBH;;AAEDuD,aAAW,CAAC7B,OAAO,GAAG,EAAX,EAAerB,aAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACzF,QAAG,6CAAK,CAAC8E,UAAN,CAAiBU,aAAjB,CAAH,EAAoC;AAChCxF,cAAQ,GAAGwF,aAAX;AACAA,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0K,WAAxB,EAAqC7B,OAArC,EAA8CrB,aAA9C,CAAP;AAEJ,UAAM;AACFmD,UAAI,GAAG,KADL;AAEFC,kBAAY,GAAG,KAFb;AAGFC,iBAAW,GAAG,KAHZ;AAIFxE,SAAG,GAAG,KAJJ;AAKFyE,iBAAW,GAAG,CALZ;AAMFC,cAAQ,GAAG,CANT;AAMY;AACdC,gBAAU,GAAG,CAPX;AAOc;AAChBC,eAAS,GAAGC,IAAI,CAACC,GAAL,EARV;AASFC,aAAO,GAAG,KATR;AAUFC,mBAAa,GAAG,CAVd;AAUiB;AACnBC,wBAAkB,GAAG,CAXnB;AAWsB;AACxBC,kBAAY,GAAG,CAZb;AAaFC,oBAAc,GAAG;AAbf,QAcF3C,OAdJ;AAgBA,QAAG,CAAC,6CAAK,CAAC/J,QAAN,CAAe6L,IAAf,CAAD,IAAyB,CAACA,IAAI,CAAC9F,MAAlC,EACI,OAAO7C,QAAQ,CAAC,6BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAe8L,YAAf,CAAD,IAAiC,CAACA,YAAY,CAAC/F,MAAlD,EACI,OAAO7C,QAAQ,CAAC,qCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB0K,WAAhB,CAAD,IAAiCA,WAAW,IAAI,CAAnD,EACI,OAAO9I,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB2K,QAAhB,CAAD,IAA8BA,QAAQ,IAAI,CAA7C,EACI,OAAO/I,QAAQ,CAAC,sCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB4K,UAAhB,CAAD,IAAgCA,UAAU,IAAI,CAAjD,EACI,OAAOhJ,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgB6K,SAAhB,CAAD,IAA+BA,SAAS,GAAGC,IAAI,CAACC,GAAL,EAA9C,EACI,OAAOnJ,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBgL,OAAhB,CAAD,IAA6BA,OAAO,IAAIH,SAA3C,EACI,OAAOjJ,QAAQ,CAAC,qCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAe+L,WAAf,CAAD,IAAgC,CAACA,WAAW,CAAChG,MAAhD,EACI,OAAO7C,QAAQ,CAAC,oCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeuH,GAAf,CAAD,IAAwB,CAACA,GAAG,CAACxB,MAA7B,IAAuC,CAAC,6CAAK,CAACpD,UAAN,CAAiB4E,GAAjB,CAA3C,EACI,OAAOrE,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBiL,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAOrJ,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkL,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAOtJ,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBmL,YAAhB,CAAD,IAAkCA,YAAY,GAAG,CAAjD,IAAuD,CAACC,cAAD,IAAmBD,YAA7E,EACI,OAAOvJ,QAAQ,CAAC,gCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBoL,cAAhB,CAAD,IAAoCA,cAAc,GAAG,CAArD,IAA2DA,cAAc,IAAI,CAACD,YAAjF,EACI,OAAOvJ,QAAQ,CAAC,kCAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+G,aAAvB,CAAJ,EACI,OAAOxF,QAAQ,CAAC,iCAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,yBAA9B,EAAyD;AACrDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8G,aAA3B,CADsC;AAErDmD,UAAI,EAAE,KAAKhE,OAAL,CAAa1D,QAAb,CAAsB0H,IAAtB,CAF+C;AAGrDc,UAAI,EAAE,KAAK9E,OAAL,CAAa1D,QAAb,CAAsB2H,YAAtB,CAH+C;AAIrDC,iBAAW,EAAE,KAAKlE,OAAL,CAAa1D,QAAb,CAAsB4H,WAAtB,CAJwC;AAKrDxE,SAAG,EAAE,KAAKM,OAAL,CAAa1D,QAAb,CAAsBoD,GAAtB,CALgD;AAMrDqF,kBAAY,EAAEzE,QAAQ,CAAC6D,WAAD,CAN+B;AAOrDa,aAAO,EAAE1E,QAAQ,CAAC8D,QAAD,CAPoC;AAQrDa,SAAG,EAAE3E,QAAQ,CAAC+D,UAAD,CARwC;AASrDa,gBAAU,EAAE5E,QAAQ,CAACgE,SAAD,CATiC;AAUrDa,cAAQ,EAAE7E,QAAQ,CAACmE,OAAD,CAVmC;AAWrDW,0BAAoB,EAAE9E,QAAQ,CAACoE,aAAD,CAXuB;AAYrDW,iCAA2B,EAAE/E,QAAQ,CAACqE,kBAAD,CAZgB;AAarDW,mBAAa,EAAE;AACXC,qBAAa,EAAEjF,QAAQ,CAACsE,YAAD,CADZ;AAEXY,mBAAW,EAAElF,QAAQ,CAACuE,cAAD;AAFV;AAbsC,KAAzD,EAiBG,MAjBH,EAiBWpK,IAjBX,CAiBgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;;AAEJ,UAAG6G,WAAW,CAAC/C,MAAZ,IAAsB+C,WAAW,CAAC/C,MAAZ,CAAmBsG,OAA5C,EAAqD;AACjD,eAAOzI,QAAQ,CACX,KAAK2E,OAAL,CAAarD,MAAb,CAAoB4D,WAAW,CAAC/C,MAAZ,CAAmBsG,OAAvC,CADW,CAAf;AAGH;;AAEDzI,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KA5BD,EA4BG3F,KA5BH,CA4BS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CA5BxB;AA6BH;;AAEDiF,aAAW,CAACvD,OAAO,GAAG,EAAX,EAAerB,aAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA3D,EAAgEwC,QAAQ,GAAG,KAA3E,EAAkF;AACzF,QAAG,6CAAK,CAAC8E,UAAN,CAAiBU,aAAjB,CAAH,EAAoC;AAChCxF,cAAQ,GAAGwF,aAAX;AACAA,mBAAa,GAAG,KAAKb,OAAL,CAAapH,cAAb,CAA4BC,GAA5C;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoM,WAAxB,EAAqCvD,OAArC,EAA8CrB,aAA9C,CAAP;AAEJ,UAAM;AACFqD,iBAAW,GAAG,KADZ;AAEFxE,SAAG,GAAG,KAFJ;AAGFgF,mBAAa,GAAG,CAHd;AAGiB;AACnBC,wBAAkB,GAAG,CAJnB,CAIqB;;AAJrB,QAKFzC,OALJ;AAOA,QAAG,CAAC,6CAAK,CAACzI,SAAN,CAAgBiL,aAAhB,CAAD,IAAmCA,aAAa,GAAG,CAAtD,EACI,OAAOrJ,QAAQ,CAAC,wCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBkL,kBAAhB,CAAD,IAAwCA,kBAAkB,GAAG,CAA7D,IAAmED,aAAa,IAAI,CAACC,kBAAxF,EACI,OAAOtJ,QAAQ,CAAC,uCAAD,CAAf;AAEJ,QAAG,CAAC,KAAK2E,OAAL,CAAalG,SAAb,CAAuB+G,aAAvB,CAAJ,EACI,OAAOxF,QAAQ,CAAC,iCAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,oBAA9B,EAAoD;AAChDa,mBAAa,EAAE,KAAKL,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2B8G,aAA3B,CADiC;AAEhDqD,iBAAW,EAAE,KAAKlE,OAAL,CAAa1D,QAAb,CAAsB4H,WAAtB,CAFmC;AAGhDxE,SAAG,EAAE,KAAKM,OAAL,CAAa1D,QAAb,CAAsBoD,GAAtB,CAH2C;AAIhDgG,eAAS,EAAEpF,QAAQ,CAACoE,aAAD,CAJ6B;AAKhDiB,sBAAgB,EAAErF,QAAQ,CAACqE,kBAAD;AALsB,KAApD,EAMG,MANH,EAMWlK,IANX,CAMgB8F,WAAW,IAAI;AAC3B,UAAGA,WAAW,CAAC7G,KAAf,EACI,OAAO2B,QAAQ,CAACkF,WAAW,CAAC7G,KAAb,CAAf;;AAEJ,UAAG6G,WAAW,CAAC/C,MAAZ,IAAsB+C,WAAW,CAAC/C,MAAZ,CAAmBsG,OAA5C,EAAqD;AACjD,eAAOzI,QAAQ,CACX,KAAK2E,OAAL,CAAarD,MAAb,CAAoB4D,WAAW,CAAC/C,MAAZ,CAAmBsG,OAAvC,CADW,CAAf;AAGH;;AAEDzI,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAjBD,EAiBG3F,KAjBH,CAiBS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAjBxB;AAkBH;;AAEDoF,WAAS,CAAC,GAAGC,IAAJ,EAAU;AACf,WAAO,KAAKpF,SAAL,CAAe,GAAGoF,IAAlB,CAAP;AACH;;AAEDC,eAAa,CAAC,GAAGD,IAAJ,EAAU;AACnB,WAAO,KAAKjF,aAAL,CAAmB,GAAGiF,IAAtB,CAAP;AACH;;AAEDE,aAAW,CAAC,GAAGF,IAAJ,EAAU;AACjB,WAAO,KAAK9B,WAAL,CAAiB,GAAG8B,IAApB,CAAP;AACH;;AAEDG,aAAW,CAAC,GAAGH,IAAJ,EAAU;AACjB,WAAO,KAAKJ,WAAL,CAAiB,GAAGI,IAApB,CAAP;AACH;;AAhmBmC,C;;;;;;;;;;;;;;;;;;;ACJxC;AACA;AAEe,MAAMI,GAAN,CAAU;AACrBnO,aAAW,CAACkI,OAAO,GAAG,KAAX,EAAkB;AACzB,QAAG,CAACA,OAAD,IAAY,CAACA,OAAD,YAAoB,6CAAnC,EACI,MAAM,IAAItG,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAKsG,OAAL,GAAeA,OAAf;AACA,SAAK3G,aAAL,GAAqB,6CAAK,CAACC,eAAN,CAAsB,IAAtB,CAArB;AACH;;AAED4M,YAAU,CAACC,KAAD,EAAQ;AACd,WAAO,EACH,GAAGA,KADA;AAEHnC,UAAI,EAAE,KAAKhE,OAAL,CAAarD,MAAb,CAAoBwJ,KAAK,CAACnC,IAA1B,CAFH;AAGHc,UAAI,EAAEqB,KAAK,CAACrB,IAAN,IAAc,KAAK9E,OAAL,CAAarD,MAAb,CAAoBwJ,KAAK,CAACrB,IAA1B,CAHjB;AAIHZ,iBAAW,EAAEiC,KAAK,CAACjC,WAAN,IAAqB,KAAKlE,OAAL,CAAarD,MAAb,CAAoBwJ,KAAK,CAACjC,WAA1B,CAJ/B;AAKHxE,SAAG,EAAEyG,KAAK,CAACzG,GAAN,IAAa,KAAKM,OAAL,CAAarD,MAAb,CAAoBwJ,KAAK,CAACzG,GAA1B;AALf,KAAP;AAOH;;AAED0G,iBAAe,CAAC/K,QAAQ,GAAG,KAAZ,EAAmB;AAC9B,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK+M,eAAxB,CAAP;AAEJ,SAAKpG,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,oBAA9B,EAAoD/E,IAApD,CAAyD4L,KAAK,IAAI;AAC9DhL,cAAQ,CAAC,IAAD,EAAOgL,KAAP,CAAR;AACH,KAFD,EAEGzL,KAFH,CAES4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAFxB;AAGH;;AAED8F,UAAQ,CAACD,KAAK,GAAG,KAAKrG,OAAL,CAAatH,YAAtB,EAAoC2C,QAAQ,GAAG,KAA/C,EAAsD;AAC1D,QAAG,6CAAK,CAAC8E,UAAN,CAAiBkG,KAAjB,CAAH,EAA4B;AACxBhL,cAAQ,GAAGgL,KAAX;AACAA,WAAK,GAAG,KAAKrG,OAAL,CAAatH,YAArB;AACH;;AAED,QAAG,CAAC2C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKiN,QAAxB,EAAkCD,KAAlC,CAAP;AAEJ,QAAGA,KAAK,KAAK,KAAb,EACI,OAAOhL,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAGgL,KAAK,IAAI,UAAZ,EACIA,KAAK,GAAG,CAAR;AAEJ,QAAGA,KAAK,IAAI,QAAZ,EACI,OAAO,KAAKD,eAAL,CAAqB/K,QAArB,CAAP;AAEJ,QAAG4D,KAAK,CAACoH,KAAD,CAAL,IAAgB,6CAAK,CAAC7K,KAAN,CAAY6K,KAAZ,CAAnB,EACI,OAAO,KAAKE,cAAL,CAAoBF,KAApB,EAA2BhL,QAA3B,CAAP;AAEJ,SAAKmL,gBAAL,CAAsBH,KAAtB,EAA6BhL,QAA7B;AACH;;AAEDkL,gBAAc,CAACE,SAAD,EAAYpL,QAAQ,GAAG,KAAvB,EAA8B;AACxC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKkN,cAAxB,EAAwCE,SAAxC,CAAP;AAEJ,SAAKzG,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,qBAA9B,EAAqD;AACjDpC,WAAK,EAAEqJ;AAD0C,KAArD,EAEG,MAFH,EAEWhM,IAFX,CAEgB4L,KAAK,IAAI;AACrBhL,cAAQ,CAAC,IAAD,EAAOgL,KAAP,CAAR;AACH,KAJD,EAIGzL,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAEDgG,kBAAgB,CAAChN,OAAD,EAAU6B,QAAQ,GAAG,KAArB,EAA4B;AACxC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKmN,gBAAxB,EAA0ChN,OAA1C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACC,SAAN,CAAgBD,OAAhB,CAAD,IAA6BA,OAAO,GAAG,CAA1C,EACI,OAAO6B,QAAQ,CAAC,+BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD;AAClDyF,SAAG,EAAE3E,QAAQ,CAAC9G,OAAD;AADqC,KAAtD,EAEG,MAFH,EAEWiB,IAFX,CAEgB4L,KAAK,IAAI;AACrBhL,cAAQ,CAAC,IAAD,EAAOgL,KAAP,CAAR;AACH,KAJD,EAIGzL,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAEDkG,0BAAwB,CAACL,KAAK,GAAG,KAAKrG,OAAL,CAAatH,YAAtB,EAAoC2C,QAAQ,GAAG,KAA/C,EAAsD;AAC1E,QAAG,6CAAK,CAAC8E,UAAN,CAAiBkG,KAAjB,CAAH,EAA4B;AACxBhL,cAAQ,GAAGgL,KAAX;AACAA,WAAK,GAAG,KAAKrG,OAAL,CAAatH,YAArB;AACH;;AAED,QAAG,CAAC2C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqN,wBAAxB,EAAkDL,KAAlD,CAAP;AAEJ,SAAKC,QAAL,CAAcD,KAAd,EAAqB5L,IAArB,CAA0B,CAAC;AAAEkM,kBAAY,GAAG;AAAjB,KAAD,KAA2B;AACjDtL,cAAQ,CAAC,IAAD,EAAOsL,YAAY,CAACzI,MAApB,CAAR;AACH,KAFD,EAEGtD,KAFH,CAES4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAFxB;AAGH;;AAEDoG,gBAAc,CAACrL,aAAD,EAAgBF,QAAQ,GAAG,KAA3B,EAAkC;AAC5C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKuN,cAAxB,EAAwCrL,aAAxC,CAAP;AAEJ,SAAKyE,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,2BAA9B,EAA2D;AACvDpC,WAAK,EAAE7B;AADgD,KAA3D,EAEG,MAFH,EAEWd,IAFX,CAEgB8F,WAAW,IAAI;AAC3BlF,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KAJD,EAIG3F,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAEDqG,0BAAwB,CAACjN,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CiO,KAAK,GAAG,EAApD,EAAwDC,MAAM,GAAG,CAAjE,EAAoE1L,QAAQ,GAAG,KAA/E,EAAsF;AAC1G,QAAG,6CAAK,CAAC8E,UAAN,CAAiB4G,MAAjB,CAAH,EAA6B;AACzB1L,cAAQ,GAAG0L,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC5G,UAAN,CAAiB2G,KAAjB,CAAH,EAA4B;AACxBzL,cAAQ,GAAGyL,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,CAACzL,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwN,wBAAxB,EAAkDjN,OAAlD,EAA2DkN,KAA3D,EAAkEC,MAAlE,CAAP;AAEJ,WAAO,KAAKC,sBAAL,CAA4BpN,OAA5B,EAAqC,IAArC,EAA2CkN,KAA3C,EAAkDC,MAAlD,EAA0D1L,QAA1D,CAAP;AACH;;AAED4L,4BAA0B,CAACrN,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CiO,KAAK,GAAG,EAApD,EAAwDC,MAAM,GAAG,CAAjE,EAAoE1L,QAAQ,GAAG,KAA/E,EAAsF;AAC5G,QAAG,6CAAK,CAAC8E,UAAN,CAAiB4G,MAAjB,CAAH,EAA6B;AACzB1L,cAAQ,GAAG0L,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC5G,UAAN,CAAiB2G,KAAjB,CAAH,EAA4B;AACxBzL,cAAQ,GAAGyL,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,CAACzL,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4N,0BAAxB,EAAoDrN,OAApD,EAA6DkN,KAA7D,EAAoEC,MAApE,CAAP;AAEJ,WAAO,KAAKC,sBAAL,CAA4BpN,OAA5B,EAAqC,MAArC,EAA6CkN,KAA7C,EAAoDC,MAApD,EAA4D1L,QAA5D,CAAP;AACH;;AAED,QAAM2L,sBAAN,CAA6BpN,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAnE,EAAwEqO,SAAS,GAAG,KAApF,EAA2FJ,KAAK,GAAG,EAAnG,EAAuGC,MAAM,GAAG,CAAhH,EAAmH1L,QAAQ,GAAG,KAA9H,EAAqI;AACjI,QAAG,6CAAK,CAAC8E,UAAN,CAAiB4G,MAAjB,CAAH,EAA6B;AACzB1L,cAAQ,GAAG0L,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC5G,UAAN,CAAiB2G,KAAjB,CAAH,EAA4B;AACxBzL,cAAQ,GAAGyL,KAAX;AACAA,WAAK,GAAG,EAAR;AACH;;AAED,QAAG,6CAAK,CAAC3G,UAAN,CAAiB+G,SAAjB,CAAH,EAAgC;AAC5B7L,cAAQ,GAAG6L,SAAX;AACAA,eAAS,GAAG,KAAZ;AACH;;AAED,QAAG,6CAAK,CAAC/G,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK2N,sBAAxB,EAAgDpN,OAAhD,EAAyDsN,SAAzD,EAAoEJ,KAApE,EAA2EC,MAA3E,CAAP;AAEJ,QAAG,CAAC,CAAE,IAAF,EAAQ,MAAR,EAAgB,KAAhB,EAAwBI,QAAxB,CAAiCD,SAAjC,CAAJ,EACI,OAAO7L,QAAQ,CAAC,4DAAD,CAAf;;AAEJ,QAAG6L,SAAS,IAAI,KAAhB,EAAuB;AACnB,UAAI;AACA,cAAMrK,IAAI,GAAG,MAAM,KAAKmK,sBAAL,CAA4BpN,OAA5B,EAAqC,MAArC,EAA6CkN,KAA7C,EAAoDC,MAApD,CAAnB;AACA,cAAM7G,EAAE,GAAG,MAAM,KAAK8G,sBAAL,CAA4BpN,OAA5B,EAAqC,IAArC,EAA2CkN,KAA3C,EAAkDC,MAAlD,CAAjB;AAEA1L,gBAAQ,CAAC,IAAD,EAAO,CACX,GAAGwB,IAAI,CAAC+E,GAAL,CAASwF,EAAE,KAAKA,EAAE,CAACF,SAAH,GAAe,MAAf,EAAuBE,EAA5B,CAAX,CADQ,EAEX,GAAGlH,EAAE,CAAC0B,GAAH,CAAOwF,EAAE,KAAKA,EAAE,CAACF,SAAH,GAAe,IAAf,EAAqBE,EAA1B,CAAT,CAFQ,EAGbC,IAHa,CAGR,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,QAAF,CAAWC,SAAX,GAAuBH,CAAC,CAACE,QAAF,CAAWC,SAHpC,CAAP,CAAR;AAIH,OARD,CAQE,OAAM/D,EAAN,EAAU;AACR,eAAOrI,QAAQ,CAACqI,EAAD,CAAf;AACH;AACJ;;AAED,QAAG,CAAC,KAAK1D,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBqN,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,CAA9D,EACI,OAAOzL,QAAQ,CAAC,wBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsN,MAAhB,CAAD,IAA4BA,MAAM,GAAG,CAAxC,EACI,OAAO1L,QAAQ,CAAC,yBAAD,CAAf;AAEJzB,WAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAKoG,OAAL,CAAahI,YAAb,CAA0BwH,OAA1B,CAAmC,kCAAiC0H,SAAU,MAA9E,EAAqF;AACjF3I,aAAO,EAAE;AACL3E;AADK,OADwE;AAIjFmN,YAJiF;AAKjFD;AALiF,KAArF,EAMG,MANH,EAMWrM,IANX,CAMgB,CAAC;AAAE8F;AAAF,KAAD,KAAqB;AACjClF,cAAQ,CAAC,IAAD,EAAOkF,WAAP,CAAR;AACH,KARD,EAQG3F,KARH,CAQS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CARxB;AASH;;AAEDkH,YAAU,CAAC9N,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACpE,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqO,UAAxB,EAAoC9N,OAApC,CAAP;AAEJ,QAAG,CAAC,KAAKoG,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAKoG,OAAL,CAAahI,YAAb,CAA0BwH,OAA1B,CAAkC,2BAAlC,EAA+D;AAC3D5F;AAD2D,KAA/D,EAEG,MAFH,EAEWa,IAFX,CAEgB8D,OAAO,IAAI;AACvBlD,cAAQ,CAAC,IAAD,EAAOkD,OAAP,CAAR;AACH,KAJD,EAIG3D,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAEDmH,YAAU,CAAC/N,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACpE,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKsO,UAAxB,EAAoC/N,OAApC,CAAP;AAEJ,SAAK8N,UAAL,CAAgB9N,OAAhB,EAAyBa,IAAzB,CAA8B,CAAC;AAAEmN,aAAO,GAAG;AAAZ,KAAD,KAAqB;AAC/CvM,cAAQ,CAAC,IAAD,EAAOuM,OAAP,CAAR;AACH,KAFD,EAEGhN,KAFH,CAES4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAFxB;AAGH;;AAEDqH,cAAY,CAACjO,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AACtE,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKwO,YAAxB,EAAsCjO,OAAtC,CAAP;AAEJ,QAAG,CAAC,KAAKoG,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAKoG,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD;AAClD5F;AADkD,KAAtD,EAEG,MAFH,EAEWa,IAFX,CAEgB,CAAC;AAAEqN,iBAAW,GAAG,CAAhB;AAAmBC,kBAAY,GAAG,CAAlC;AAAqCC,aAAO,GAAG,CAA/C;AAAkDC,cAAQ,GAAG;AAA7D,KAAD,KAAsE;AAClF5M,cAAQ,CAAC,IAAD,EAAQ0M,YAAY,GAAGD,WAAhB,IAAgCG,QAAQ,GAAGD,OAA3C,CAAP,CAAR;AACH,KAJD,EAIGpN,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAED0H,0BAAwB,CAACtO,OAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAvC,EAA4CwC,QAAQ,GAAG,KAAvD,EAA8D;AAClF,QAAG,6CAAK,CAAC8E,UAAN,CAAiBvG,OAAjB,CAAH,EAA8B;AAC1ByB,cAAQ,GAAGzB,OAAX;AACAA,aAAO,GAAG,KAAKoG,OAAL,CAAapH,cAAb,CAA4BC,GAAtC;AACH;;AAED,QAAG,CAACwC,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK6O,wBAAxB,EAAkDtO,OAAlD,CAAP;AAEJ,QAAG,CAAC,KAAKoG,OAAL,CAAalG,SAAb,CAAuBF,OAAvB,CAAJ,EACI,OAAOyB,QAAQ,CAAC,0BAAD,CAAf;AAEJzB,WAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BH,OAA3B,CAAV;AAEA,SAAKoG,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,+BAA9B,EAA+D;AAC3D5F;AAD2D,KAA/D,EAEG,MAFH,EAEWa,IAFX,CAEgB,CAAC;AAAE0N,gBAAU,GAAG;AAAf,KAAD,KAA4B;AACxC,UAAG,CAACA,UAAJ,EACI,OAAO9M,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAf;AAEJ,YAAM+M,MAAM,GAAGD,UAAU,CAACvG,GAAX,CAAeuE,KAAK,IAAI;AACnC,eAAO,KAAKD,UAAL,CAAgBC,KAAhB,CAAP;AACH,OAFc,EAEZkC,MAFY,CAEL,CAACD,MAAD,EAASjC,KAAT,KAAmB;AACzB,eAAOiC,MAAM,CAACjC,KAAK,CAACnC,IAAP,CAAN,GAAqBmC,KAArB,EAA4BiC,MAAnC;AACH,OAJc,EAIZ,EAJY,CAAf;AAMA/M,cAAQ,CAAC,IAAD,EAAO+M,MAAP,CAAR;AACH,KAbD,EAaGxN,KAbH,CAaS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAbxB;AAcH;;AAED8H,gBAAc,CAAC5H,OAAO,GAAG,KAAX,EAAkBrF,QAAQ,GAAG,KAA7B,EAAoC;AAC9C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKiP,cAAxB,EAAwC5H,OAAxC,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACvI,QAAN,CAAeuI,OAAf,CAAD,IAA4B,CAACA,OAAO,CAACxC,MAAxC,EACI,OAAO7C,QAAQ,CAAC,2BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,4BAA9B,EAA4D;AACxDpC,WAAK,EAAE,KAAK4C,OAAL,CAAa1D,QAAb,CAAsBoE,OAAtB;AADiD,KAA5D,EAEG,MAFH,EAEWjG,IAFX,CAEgB0L,KAAK,IAAI;AACrB,UAAG,CAACA,KAAK,CAACnC,IAAV,EACI,OAAO3I,QAAQ,CAAC,sBAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAO,KAAK6K,UAAL,CAAgBC,KAAhB,CAAP,CAAR;AACH,KAPD,EAOGvL,KAPH,CAOS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAPxB;AAQH;;AAED+H,WAAS,CAAClN,QAAQ,GAAG,KAAZ,EAAmB;AACxB,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKkP,SAAxB,CAAP;AAEJ,SAAKvI,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,kBAA9B,EAAkD/E,IAAlD,CAAuD,CAAC;AAAE+N,WAAK,GAAG;AAAV,KAAD,KAAoB;AACvEnN,cAAQ,CAAC,IAAD,EAAOmN,KAAK,CAAC5G,GAAN,CAAU,CAAC;AAAEhI,eAAO,EAAE;AAAE+E,cAAF;AAAQ8J;AAAR;AAAX,OAAD,KACpB,GAAE,KAAKzI,OAAL,CAAarD,MAAb,CAAoBgC,IAApB,CAA0B,IAAG8J,IAAK,EAD1B,CAAP,CAAR;AAGH,KAJD,EAIG7N,KAJH,CAIS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAJxB;AAKH;;AAEDkI,eAAa,CAACC,KAAK,GAAG,CAAT,EAAYC,GAAG,GAAG,EAAlB,EAAsBvN,QAAQ,GAAG,KAAjC,EAAwC;AACjD,QAAG,6CAAK,CAAC8E,UAAN,CAAiByI,GAAjB,CAAH,EAA0B;AACtBvN,cAAQ,GAAGuN,GAAX;AACAA,SAAG,GAAG,EAAN;AACH;;AAED,QAAG,6CAAK,CAACzI,UAAN,CAAiBwI,KAAjB,CAAH,EAA4B;AACxBtN,cAAQ,GAAGsN,KAAX;AACAA,WAAK,GAAG,CAAR;AACH;;AAED,QAAG,CAACtN,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqP,aAAxB,EAAuCC,KAAvC,EAA8CC,GAA9C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACnP,SAAN,CAAgBkP,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAtC,EACI,OAAOtN,QAAQ,CAAC,iCAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBmP,GAAhB,CAAD,IAAyBA,GAAG,IAAID,KAAnC,EACI,OAAOtN,QAAQ,CAAC,+BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,4BAA9B,EAA4D;AACxDqJ,cAAQ,EAAEvI,QAAQ,CAACqI,KAAD,CADsC;AAExDG,YAAM,EAAExI,QAAQ,CAACsI,GAAD,CAAR,GAAgB;AAFgC,KAA5D,EAGG,MAHH,EAGWnO,IAHX,CAGgB,CAAC;AAAE4L,WAAK,GAAG;AAAV,KAAD,KAAoB;AAChChL,cAAQ,CAAC,IAAD,EAAOgL,KAAP,CAAR;AACH,KALD,EAKGzL,KALH,CAKS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CALxB;AAMH;;AAEDuI,0BAAwB,CAAC1N,QAAQ,GAAG,KAAZ,EAAmB;AACvC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK0P,wBAAxB,CAAP;AAEJ,SAAK/I,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,sBAA9B,EAAsD/E,IAAtD,CAA2D,CAAC;AAAEuO,eAAS,GAAG;AAAd,KAAD,KAAwB;AAC/E3N,cAAQ,CAAC,IAAD,EAAO2N,SAAP,CAAR;AACH,KAFD,EAEGpO,KAFH,CAES4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAFxB;AAGH;;AAEDyI,YAAU,CAACnC,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,EAAwB1L,QAAQ,GAAG,KAAnC,EAA0C;AAChD,QAAG,6CAAK,CAAC8E,UAAN,CAAiB4G,MAAjB,CAAH,EAA6B;AACzB1L,cAAQ,GAAG0L,MAAX;AACAA,YAAM,GAAG,CAAT;AACH;;AAED,QAAG,6CAAK,CAAC5G,UAAN,CAAiB2G,KAAjB,CAAH,EAA4B;AACxBzL,cAAQ,GAAGyL,KAAX;AACAA,WAAK,GAAG,CAAR;AACH;;AAED,QAAG,CAACzL,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK4P,UAAxB,EAAoCnC,KAApC,EAA2CC,MAA3C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACtN,SAAN,CAAgBqN,KAAhB,CAAD,IAA2BA,KAAK,GAAG,CAAnC,IAAyCC,MAAM,IAAID,KAAK,GAAG,CAA9D,EACI,OAAOzL,QAAQ,CAAC,wBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBsN,MAAhB,CAAD,IAA4BA,MAAM,GAAG,CAAxC,EACI,OAAO1L,QAAQ,CAAC,yBAAD,CAAf;;AAEJ,QAAG,CAACyL,KAAJ,EAAW;AACP,aAAO,KAAK9G,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,0BAA9B,EAA0D/E,IAA1D,CAA+D,CAAC;AAAE0N,kBAAU,GAAG;AAAf,OAAD,KAAyB;AAC3F9M,gBAAQ,CAAC,IAAD,EAAO8M,UAAU,CAACvG,GAAX,CAAeuE,KAAK,IAAI,KAAKD,UAAL,CAAgBC,KAAhB,CAAxB,CAAP,CAAR;AACH,OAFM,EAEJvL,KAFI,CAEE4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAFjB,CAAP;AAGH;;AAED,SAAKR,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,mCAA9B,EAAmE;AAC/DuH,YAAM,EAAEzG,QAAQ,CAACyG,MAAD,CAD+C;AAE/DD,WAAK,EAAExG,QAAQ,CAACwG,KAAD;AAFgD,KAAnE,EAGG,MAHH,EAGWrM,IAHX,CAGgB,CAAC;AAAE0N,gBAAU,GAAG;AAAf,KAAD,KAAyB;AACrC9M,cAAQ,CAAC,IAAD,EAAO8M,UAAU,CAACvG,GAAX,CAAeuE,KAAK,IAAI,KAAKD,UAAL,CAAgBC,KAAhB,CAAxB,CAAP,CAAR;AACH,KALD,EAKGvL,KALH,CAKS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CALxB;AAMH;;AAED0I,wBAAsB,CAAC7N,QAAQ,GAAG,KAAZ,EAAmB;AACrC,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAK6P,sBAAxB,CAAP;AAEJ,SAAKlJ,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,+BAA9B,EAA+D/E,IAA/D,CAAoE,CAAC;AAAEwK,SAAG,GAAG,CAAC;AAAT,KAAD,KAAkB;AAClF,UAAGA,GAAG,IAAI,CAAC,CAAX,EACI,OAAO5J,QAAQ,CAAC,0CAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAO8N,IAAI,CAACC,KAAL,CAAWnE,GAAG,GAAG,IAAjB,CAAP,CAAR;AACH,KALD,EAKGrK,KALH,CAKS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CALxB;AAMH;;AAED6I,aAAW,CAACnO,eAAD,EAAkBG,QAAQ,GAAG,KAA7B,EAAoC;AAC3C,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKgQ,WAAxB,EAAqCnO,eAArC,CAAP;AAEJ,QAAG,CAAC,KAAK8E,OAAL,CAAalG,SAAb,CAAuBoB,eAAvB,CAAJ,EACI,OAAOG,QAAQ,CAAC,mCAAD,CAAf;AAEJH,mBAAe,GAAG,KAAK8E,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CAA2BmB,eAA3B,CAAlB;AAEA,SAAK8E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CAA8B,oBAA9B,EAAoD;AAChDpC,WAAK,EAAElC;AADyC,KAApD,EAEGT,IAFH,CAEQ6O,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAAC5P,KAAZ,EACI,OAAO2B,QAAQ,CAAC,yBAAD,CAAf;AAEJA,cAAQ,CAAC,IAAD,EAAOiO,QAAP,CAAR;AACH,KAPD,EAOG1O,KAPH,CAOS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CAPxB;AAQH;;AAED+I,MAAI,CAAChJ,WAAW,GAAG,KAAf,EAAsBrI,UAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAAhD,EAAmE0C,QAAQ,GAAG,KAA9E,EAAqF;AACrF,QAAG,6CAAK,CAAC8E,UAAN,CAAiBjI,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKkQ,IAAxB,EAA8BhJ,WAA9B,EAA2CrI,UAA3C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACgH,QAAN,CAAeqB,WAAf,CAAJ,EACI,OAAOlF,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAGkF,WAAW,CAACiJ,SAAf,EACI,OAAOnO,QAAQ,CAAC,+BAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBG,KAArB,CACZ,KAAKiG,OAAL,CAAapG,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CADY,EAEd2H,WAFc,EAAhB;AAIA,UAAGjG,OAAO,KAAK2G,WAAW,CAACiH,QAAZ,CAAqB8B,QAArB,CAA8B,CAA9B,EAAiCzF,SAAjC,CAA2CzG,KAA3C,CAAiDiD,aAAjD,CAA+DR,WAA/D,EAAf,EACI,OAAOxE,QAAQ,CAAC,mDAAD,CAAf;AAEJ,aAAOA,QAAQ,CAAC,IAAD,EACX,6CAAK,CAACI,MAAN,CAAagO,eAAb,CAA6BvR,UAA7B,EAAyCqI,WAAzC,CADW,CAAf;AAGH,KAXD,CAWE,OAAMmD,EAAN,EAAU;AACRrI,cAAQ,CAACqI,EAAD,CAAR;AACH;AACJ;;AAEDgG,oBAAkB,CAACC,iBAAiB,GAAG,KAArB,EAA4BtO,QAAQ,GAAG,KAAvC,EAA8C;AAC5D,QAAG,CAACA,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKqQ,kBAAxB,EAA4CC,iBAA5C,CAAP;AAEJ,QAAG,CAAC,6CAAK,CAACzK,QAAN,CAAeyK,iBAAf,CAAJ,EACI,OAAOtO,QAAQ,CAAC,8BAAD,CAAf;AAEJ,QAAG,CAACsO,iBAAiB,CAACH,SAAnB,IAAgC,CAAC,6CAAK,CAAC/G,OAAN,CAAckH,iBAAiB,CAACH,SAAhC,CAApC,EACI,OAAOnO,QAAQ,CAAC,2BAAD,CAAf;AAEJ,SAAK2E,OAAL,CAAajI,QAAb,CAAsByH,OAAtB,CACI,6BADJ,EAEImK,iBAFJ,EAGI,MAHJ,EAIElP,IAJF,CAIO+C,MAAM,IAAI;AACbnC,cAAQ,CAAC,IAAD,EAAOmC,MAAP,CAAR;AACH,KAND,EAMG5C,KANH,CAMS4F,GAAG,IAAInF,QAAQ,CAACmF,GAAD,CANxB;AAOH;;AAED,QAAMoJ,eAAN,CAAsB1J,EAAE,GAAG,KAA3B,EAAkClC,MAAM,GAAG,KAA3C,EAAkD9F,UAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAA5E,EAA+F0C,QAAQ,GAAG,KAA1G,EAAiH;AAC7G,QAAG,6CAAK,CAAC8E,UAAN,CAAiBjI,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKuQ,eAAxB,EAAyC1J,EAAzC,EAA6ClC,MAA7C,EAAqD9F,UAArD,CAAP;AAEJ,QAAG,CAAC,KAAK8H,OAAL,CAAalG,SAAb,CAAuBoG,EAAvB,CAAJ,EACI,OAAO7E,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,YAAMqI,WAAW,GAAG,MAAM,KAAKP,OAAL,CAAa9G,kBAAb,CAAgC+G,OAAhC,CAAwCC,EAAxC,EAA4ClC,MAA5C,EAAoDpE,OAApD,CAA1B;AACA,YAAM+P,iBAAiB,GAAG,MAAM,KAAKF,eAAL,CAAqBlJ,WAArB,EAAkCrI,UAAlC,CAAhC;AACA,YAAMsF,MAAM,GAAG,MAAM,KAAKkM,kBAAL,CAAwBC,iBAAxB,CAArB;AAEA,aAAOtO,QAAQ,CAAC,IAAD,EAAOmC,MAAP,CAAf;AACH,KAPD,CAOE,OAAMkG,EAAN,EAAU;AACR,aAAOrI,QAAQ,CAACqI,EAAD,CAAf;AACH;AACJ;;AAED,QAAMjD,SAAN,CAAgBP,EAAE,GAAG,KAArB,EAA4BlC,MAAM,GAAG,KAArC,EAA4C0C,OAAO,GAAG,KAAtD,EAA6DxI,UAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAAvF,EAA0G0C,QAAQ,GAAG,KAArH,EAA4H;AACxH,QAAG,6CAAK,CAAC8E,UAAN,CAAiBjI,UAAjB,CAAH,EAAiC;AAC7BmD,cAAQ,GAAGnD,UAAX;AACAA,gBAAU,GAAG,KAAK8H,OAAL,CAAarH,iBAA1B;AACH;;AAED,QAAG,CAAC0C,QAAJ,EACI,OAAO,KAAKhC,aAAL,CAAmB,KAAKoH,SAAxB,EAAmCP,EAAnC,EAAuClC,MAAvC,EAA+C0C,OAA/C,EAAwDxI,UAAxD,CAAP;AAEJ,QAAG,CAAC,KAAK8H,OAAL,CAAalG,SAAb,CAAuBoG,EAAvB,CAAJ,EACI,OAAO7E,QAAQ,CAAC,4BAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAC5B,SAAN,CAAgBuE,MAAhB,CAAD,IAA4BA,MAAM,IAAI,CAAzC,EACI,OAAO3C,QAAQ,CAAC,yBAAD,CAAf;AAEJ,QAAG,CAAC,6CAAK,CAAClD,QAAN,CAAeuI,OAAf,CAAJ,EACI,OAAOrF,QAAQ,CAAC,2BAAD,CAAf;;AAEJ,QAAI;AACA,YAAMzB,OAAO,GAAG,KAAKoG,OAAL,CAAapG,OAAb,CAAqBC,cAArB,CAAoC3B,UAApC,CAAhB;AACA,YAAMqI,WAAW,GAAG,MAAM,KAAKP,OAAL,CAAa9G,kBAAb,CAAgCuH,SAAhC,CAA0CP,EAA1C,EAA8ClC,MAA9C,EAAsD0C,OAAtD,EAA+D9G,OAA/D,CAA1B;AACA,YAAM+P,iBAAiB,GAAG,MAAM,KAAKF,eAAL,CAAqBlJ,WAArB,EAAkCrI,UAAlC,CAAhC;AACA,YAAMsF,MAAM,GAAG,MAAM,KAAKkM,kBAAL,CAAwBC,iBAAxB,CAArB;AAEA,aAAOtO,QAAQ,CAAC,IAAD,EAAOmC,MAAP,CAAf;AACH,KAPD,CAOE,OAAMkG,EAAN,EAAU;AACR,aAAOrI,QAAQ,CAACqI,EAAD,CAAf;AACH;AACJ;;AAEDmG,MAAI,CAAC,GAAGhE,IAAJ,EAAU;AACV,WAAO,KAAK+D,eAAL,CAAqB,GAAG/D,IAAxB,CAAP;AACH;;AAED5F,SAAO,CAAC,GAAG4F,IAAJ,EAAU;AACb,WAAO,KAAK+D,eAAL,CAAqB,GAAG/D,IAAxB,CAAP;AACH;;AAEDiE,WAAS,CAAC,GAAGjE,IAAJ,EAAU;AACf,WAAO,KAAK6D,kBAAL,CAAwB,GAAG7D,IAA3B,CAAP;AACH;;AAED4D,iBAAe,CAAC,GAAG5D,IAAJ,EAAU;AACrB,WAAO,KAAK0D,IAAL,CAAU,GAAG1D,IAAb,CAAP;AACH;;AAxhBoB;AAyhBxB,C;;;;;;;;;;;;;;;;;AC5hBc,MAAMkE,OAAN,CAAc,E;;;;;;;;;;;;;;;;;;;ACA7B;AACA;AAOO,SAAStL,eAAT,GAA2B;AAC9B,QAAMuL,WAAW,GAAG,yDAAS,EAA7B;AACA,QAAMC,WAAW,GAAG,mEAAmB,CAACD,WAAD,CAAvC;AACA,QAAME,YAAY,GAAG,oEAAoB,CAACF,WAAD,CAAzC;AAEA,QAAM9R,UAAU,GAAG,+DAAgB,CAAC8R,WAAD,CAAnC;AACA,QAAMG,SAAS,GAAG,+DAAgB,CAACF,WAAD,CAAlC;AAEA,SAAO;AACH/R,cADG;AAEHiS,aAFG;AAGHvQ,WAAO,EAAE;AACLd,YAAM,EAAE,qEAAqB,CAACoR,YAAD,CADxB;AAELrR,SAAG,EAAE,+DAAgB,CAACqR,YAAD;AAFhB;AAHN,GAAP;AAQH,C;;;;;;;;;;;;;;;;;;;ACxBD,MAAME,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,SAAtC;AAEO,MAAMC,YAAY,GAAGJ,SAAS,GAAG,EAAH,GAAQ,EAAtC;AACA,MAAMK,cAAc,GAAGL,SAAS,GAAG,IAAH,GAAU,IAA1C;AACA,MAAMM,mBAAmB,GAAGN,SAAS,GAAG,IAAH,GAAU,IAA/C,C;;;;;;;;;;;;;;;;;;ACJP,MAAMO,QAAQ,GAAG,4DAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,KAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoH,QAAQ,CAACzM,MAA7B,EAAqCqF,CAAC,EAAtC,EACIqH,YAAY,CAACD,QAAQ,CAACxL,MAAT,CAAgBoE,CAAhB,CAAD,CAAZ,GAAmCA,CAAnC;;AAEJ,MAAMsH,IAAI,GAAG,EAAb;AAEO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAAC7M,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIqF,CAAJ;AACA,MAAIyH,CAAJ;AAEA,QAAMC,MAAM,GAAG,CAAC,CAAD,CAAf;;AAEA,OAAK1H,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwH,MAAM,CAAC7M,MAAvB,EAA+BqF,CAAC,EAAhC,EAAoC;AAChC,SAAKyH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC/M,MAAvB,EAA+B8M,CAAC,EAAhC,EACIC,MAAM,CAACD,CAAD,CAAN,KAAc,CAAd;;AAEJC,UAAM,CAAC,CAAD,CAAN,IAAaF,MAAM,CAACxH,CAAD,CAAnB;AACA,QAAI2H,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAAC/M,MAAvB,EAA+B,EAAE8M,CAAjC,EAAoC;AAChCC,YAAM,CAACD,CAAD,CAAN,IAAaE,KAAb;AACAA,WAAK,GAAID,MAAM,CAACD,CAAD,CAAN,GAAYH,IAAb,GAAqB,CAA7B;AACAI,YAAM,CAACD,CAAD,CAAN,IAAaH,IAAb;AACH;;AAED,WAAOK,KAAP,EAAc;AACVD,YAAM,CAACzH,IAAP,CAAY0H,KAAK,GAAGL,IAApB;AACAK,WAAK,GAAIA,KAAK,GAAGL,IAAT,GAAiB,CAAzB;AACH;AACJ;;AAED,OAAKtH,CAAC,GAAG,CAAT,EAAYwH,MAAM,CAACxH,CAAD,CAAN,KAAc,CAAd,IAAmBA,CAAC,GAAGwH,MAAM,CAAC7M,MAAP,GAAgB,CAAnD,EAAsDqF,CAAC,EAAvD,EACI0H,MAAM,CAACzH,IAAP,CAAY,CAAZ;;AAEJ,SAAOyH,MAAM,CAACE,OAAP,GAAiBvJ,GAAjB,CAAqBwJ,KAAK,IAAIT,QAAQ,CAACS,KAAD,CAAtC,EAA+CC,IAA/C,CAAoD,EAApD,CAAP;AACH;AAEM,SAASC,QAAT,CAAkBrP,MAAlB,EAA0B;AAC7B,MAAIA,MAAM,CAACiC,MAAP,KAAkB,CAAtB,EACI,OAAO,EAAP;AAEJ,MAAIqF,CAAJ;AACA,MAAIyH,CAAJ;AAEA,QAAMO,KAAK,GAAG,CAAC,CAAD,CAAd;;AAEA,OAAKhI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGtH,MAAM,CAACiC,MAAvB,EAA+BqF,CAAC,EAAhC,EAAoC;AAChC,UAAMiI,CAAC,GAAGvP,MAAM,CAACsH,CAAD,CAAhB;AAEA,QAAI,EAAEiI,CAAC,IAAIZ,YAAP,CAAJ,EACI,MAAM,IAAIlR,KAAJ,CAAU,sBAAV,CAAN;;AAEJ,SAAKsR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGO,KAAK,CAACrN,MAAtB,EAA8B8M,CAAC,EAA/B,EACIO,KAAK,CAACP,CAAD,CAAL,IAAYH,IAAZ;;AAEJU,SAAK,CAAC,CAAD,CAAL,IAAYX,YAAY,CAACY,CAAD,CAAxB;AACA,QAAIN,KAAK,GAAG,CAAZ;;AAEA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGO,KAAK,CAACrN,MAAtB,EAA8B,EAAE8M,CAAhC,EAAmC;AAC/BO,WAAK,CAACP,CAAD,CAAL,IAAYE,KAAZ;AACAA,WAAK,GAAGK,KAAK,CAACP,CAAD,CAAL,IAAY,CAApB;AACAO,WAAK,CAACP,CAAD,CAAL,IAAY,IAAZ;AACH;;AAED,WAAOE,KAAP,EAAc;AACVK,WAAK,CAAC/H,IAAN,CAAW0H,KAAK,GAAG,IAAnB;AACAA,WAAK,KAAK,CAAV;AACH;AACJ;;AAED,OAAK3H,CAAC,GAAG,CAAT,EAAYtH,MAAM,CAACsH,CAAD,CAAN,KAAc,GAAd,IAAqBA,CAAC,GAAGtH,MAAM,CAACiC,MAAP,GAAgB,CAArD,EAAwDqF,CAAC,EAAzD,EACIgI,KAAK,CAAC/H,IAAN,CAAW,CAAX;;AAEJ,SAAO+H,KAAK,CAACJ,OAAN,EAAP;AACH,C;;;;;;;;;;;;;;;;;AC/EM,SAASM,MAAT,GAAkB;AACrB,OAAKC,OAAL,GAAe,mEAAf;;AAEA,OAAKjI,MAAL,GAAckI,KAAK,IAAI;AACnB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI5I,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGoI,KAAK,CAACzN,MAAjB,EAAyB;AACrB2N,UAAI,GAAGF,KAAK,CAACS,UAAN,CAAiB7I,CAAC,EAAlB,CAAP;AACAuI,UAAI,GAAGH,KAAK,CAACS,UAAN,CAAiB7I,CAAC,EAAlB,CAAP;AACAwI,UAAI,GAAGJ,KAAK,CAACS,UAAN,CAAiB7I,CAAC,EAAlB,CAAP;AAEAyI,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAI9M,KAAK,CAAC6M,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIlN,KAAK,CAAC8M,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJP,YAAM,GAAGA,MAAM,GACX,KAAKF,OAAL,CAAavM,MAAb,CAAoB6M,IAApB,CADK,GACuB,KAAKN,OAAL,CAAavM,MAAb,CAAoB8M,IAApB,CADvB,GAEL,KAAKP,OAAL,CAAavM,MAAb,CAAoB+M,IAApB,CAFK,GAEuB,KAAKR,OAAL,CAAavM,MAAb,CAAoBgN,IAApB,CAFhC;AAGH;;AAED,WAAOP,MAAP;AACH,GAhCD;;AAkCA,OAAKS,gBAAL,GAAwBC,UAAU,IAAI;AAClC,QAAIV,MAAM,GAAG,EAAb;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI5I,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAG+I,UAAU,CAACpO,MAAtB,EAA8B;AAC1B2N,UAAI,GAAGS,UAAU,CAAC/I,CAAC,EAAF,CAAjB;AACAuI,UAAI,GAAGQ,UAAU,CAAC/I,CAAC,EAAF,CAAjB;AACAwI,UAAI,GAAGO,UAAU,CAAC/I,CAAC,EAAF,CAAjB;AAEAyI,UAAI,GAAGH,IAAI,IAAI,CAAf;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,CAAR,KAAc,CAAf,GAAqBC,IAAI,IAAI,CAApC;AACAI,UAAI,GAAI,CAACJ,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAI,UAAI,GAAGJ,IAAI,GAAG,EAAd;AAEA,UAAI9M,KAAK,CAAC6M,IAAD,CAAT,EACII,IAAI,GAAGC,IAAI,GAAG,EAAd,CADJ,KAEK,IAAIlN,KAAK,CAAC8M,IAAD,CAAT,EACDI,IAAI,GAAG,EAAP;AAEJP,YAAM,GAAGA,MAAM,GACX,KAAKF,OAAL,CAAavM,MAAb,CAAoB6M,IAApB,CADK,GACuB,KAAKN,OAAL,CAAavM,MAAb,CAAoB8M,IAApB,CADvB,GAEL,KAAKP,OAAL,CAAavM,MAAb,CAAoB+M,IAApB,CAFK,GAEuB,KAAKR,OAAL,CAAavM,MAAb,CAAoBgN,IAApB,CAFhC;AAGH;;AAED,WAAOP,MAAP;AACH,GAhCD;;AAkCA,OAAKW,MAAL,GAAcZ,KAAK,IAAI;AACnB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI5I,CAAC,GAAG,CAAR;AAEAoI,SAAK,GAAGA,KAAK,CAAC1N,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOsF,CAAC,GAAGoI,KAAK,CAACzN,MAAjB,EAAyB;AACrB8N,UAAI,GAAGN,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA0I,UAAI,GAAGP,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA2I,UAAI,GAAGR,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA4I,UAAI,GAAGT,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AAEAsI,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEAP,YAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBZ,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACIN,MAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBX,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACIP,MAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBV,IAApB,CAAlB;AACP;;AAED,WAAO,KAAKW,YAAL,CAAkBd,MAAlB,CAAP;AACH,GAjCD;;AAmCA,OAAKe,iBAAL,GAAyBhB,KAAK,IAAI;AAC9B,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAJ;AACA,QAAI5I,CAAC,GAAG,CAAR;AAEAoI,SAAK,GAAGA,KAAK,CAAC1N,OAAN,CAAc,qBAAd,EAAqC,EAArC,CAAR;;AAEA,WAAOsF,CAAC,GAAGoI,KAAK,CAACzN,MAAjB,EAAyB;AACrB8N,UAAI,GAAGN,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA0I,UAAI,GAAGP,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA2I,UAAI,GAAGR,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AACA4I,UAAI,GAAGT,OAAO,CAACjP,OAAR,CAAgBkP,KAAK,CAACxM,MAAN,CAAaoE,CAAC,EAAd,CAAhB,CAAP;AAEAsI,UAAI,GAAIG,IAAI,IAAI,CAAT,GAAeC,IAAI,IAAI,CAA9B;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,EAAR,KAAe,CAAhB,GAAsBC,IAAI,IAAI,CAArC;AACAH,UAAI,GAAI,CAACG,IAAI,GAAG,CAAR,KAAc,CAAf,GAAoBC,IAA3B;AAEAP,YAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBZ,IAApB,CAAlB;AAEA,UAAIK,IAAI,IAAI,EAAZ,EACIN,MAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBX,IAApB,CAAlB;AAEJ,UAAIK,IAAI,IAAI,EAAZ,EACIP,MAAM,GAAGA,MAAM,GAAGY,MAAM,CAACC,YAAP,CAAoBV,IAApB,CAAlB;AACP;;AAED,WAAO,KAAKa,cAAL,CAAoBhB,MAApB,CAAP;AACH,GAjCD;;AAmCA,OAAKgB,cAAL,GAAsBC,OAAO,IAAI;AAC7B,UAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUF,OAAO,CAAC3O,MAAlB,CAAlB;AAEA,QAAIqF,CAAC,GAAG,CAAR;AACA,QAAIiI,CAAC,GAAGwB,EAAE,GAAGC,EAAE,GAAG,CAAlB;;AAEA,WAAO1J,CAAC,GAAGsJ,OAAO,CAAC3O,MAAnB,EAA2B;AACvBsN,OAAC,GAAGqB,OAAO,CAACT,UAAR,CAAmB7I,CAAnB,CAAJ;AACAuJ,eAAS,CAACvJ,CAAD,CAAT,GAAeiI,CAAf;AACAjI,OAAC;AACJ;;AAED,WAAOuJ,SAAP;AACH,GAbD;;AAeA,OAAKI,YAAL,GAAoBjR,MAAM,IAAI;AAC1BA,UAAM,GAAGA,MAAM,CAACgC,OAAP,CAAe,OAAf,EAAwB,IAAxB,CAAT;AACA,QAAI4O,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlR,MAAM,CAACiC,MAA3B,EAAmCiP,CAAC,EAApC,EAAwC;AACpC,YAAM3B,CAAC,GAAGvP,MAAM,CAACmQ,UAAP,CAAkBe,CAAlB,CAAV;;AAEA,UAAI3B,CAAC,GAAG,GAAR,EAAa;AACTqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAoBjB,CAApB,CAAX;AACH,OAFD,MAEO,IAAKA,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,IAAtB,EAA6B;AAChCqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBjB,CAAC,IAAI,CAAN,GAAW,GAA/B,CAAX;AACAqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBjB,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH,OAHM,MAGA;AACHqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBjB,CAAC,IAAI,EAAN,GAAY,GAAhC,CAAX;AACAqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAsBjB,CAAC,IAAI,CAAN,GAAW,EAAZ,GAAkB,GAAtC,CAAX;AACAqB,eAAO,IAAIL,MAAM,CAACC,YAAP,CAAqBjB,CAAC,GAAG,EAAL,GAAW,GAA/B,CAAX;AACH;AACJ;;AAED,WAAOqB,OAAP;AACH,GApBD;;AAsBA,OAAKH,YAAL,GAAoBG,OAAO,IAAI;AAC3B,QAAI5Q,MAAM,GAAG,EAAb;AACA,QAAIsH,CAAC,GAAG,CAAR;AACA,QAAIiI,CAAC,GAAGwB,EAAE,GAAGC,EAAE,GAAG,CAAlB;;AAEA,WAAO1J,CAAC,GAAGsJ,OAAO,CAAC3O,MAAnB,EAA2B;AACvBsN,OAAC,GAAGqB,OAAO,CAACT,UAAR,CAAmB7I,CAAnB,CAAJ;;AAEA,UAAIiI,CAAC,GAAG,GAAR,EAAa;AACTvP,cAAM,IAAIuQ,MAAM,CAACC,YAAP,CAAoBjB,CAApB,CAAV;AACAjI,SAAC;AACJ,OAHD,MAGO,IAAKiI,CAAC,GAAG,GAAL,IAAcA,CAAC,GAAG,GAAtB,EAA4B;AAC/ByB,UAAE,GAAGJ,OAAO,CAACT,UAAR,CAAmB7I,CAAC,GAAG,CAAvB,CAAL;AACAtH,cAAM,IAAIuQ,MAAM,CAACC,YAAP,CAAqB,CAACjB,CAAC,GAAG,EAAL,KAAY,CAAb,GAAmByB,EAAE,GAAG,EAA5C,CAAV;AACA1J,SAAC,IAAI,CAAL;AACH,OAJM,MAIA;AACH0J,UAAE,GAAGJ,OAAO,CAACT,UAAR,CAAmB7I,CAAC,GAAG,CAAvB,CAAL;AACA6J,UAAE,GAAGP,OAAO,CAACT,UAAR,CAAmB7I,CAAC,GAAG,CAAvB,CAAL;AAEAtH,cAAM,IAAIuQ,MAAM,CAACC,YAAP,CAAqB,CAACjB,CAAC,GAAG,EAAL,KAAY,EAAb,GAAoB,CAACyB,EAAE,GAAG,EAAN,KAAa,CAAjC,GAAuCG,EAAE,GAAG,EAAhE,CAAV;AAEA7J,SAAC,IAAI,CAAL;AACH;AACJ;;AAED,WAAOtH,MAAP;AACH,GA1BD;AA2BH,C;;;;;;;;;;;;;;;;;;;;;;AC7MD;AAEO,SAASoR,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,QAAMC,UAAU,GAAG,kBAAnB;AAEA,MAAIC,GAAG,GAAG,EAAV;AACAA,KAAG,IAAID,UAAU,CAACpO,MAAX,CAAkBmO,IAAI,IAAI,CAA1B,CAAP;AACAE,KAAG,IAAID,UAAU,CAACpO,MAAX,CAAkBmO,IAAI,GAAG,IAAzB,CAAP;AAEA,SAAOE,GAAP;AACH;AAEM,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAOA,GAAP;AAEJ,MAAIF,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIjK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAAG,CAACxP,MAAxB,EAAgCqF,CAAC,EAAjC,EAAqC;AACjC,UAAMoK,GAAG,GAAGD,GAAG,CAACnK,CAAD,CAAH,CAAOzG,QAAP,CAAgB,CAAhB,CAAZ;AACA,UAAM8Q,CAAC,GAAGD,GAAG,CAACE,KAAJ,CAAU,WAAV,CAAV;;AAEA,QAAID,CAAC,IAAID,GAAG,CAACzP,MAAJ,KAAe,CAAxB,EAA2B;AACvB,YAAM4P,WAAW,GAAGF,CAAC,CAAC,CAAD,CAAD,CAAK1P,MAAzB;AACA,UAAI6P,KAAK,GAAGL,GAAG,CAACnK,CAAD,CAAH,CAAOzG,QAAP,CAAgB,CAAhB,EAAmBkR,KAAnB,CAAyB,IAAIF,WAA7B,CAAZ;;AAEA,WAAK,IAAIG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,WAAtB,EAAmCG,EAAE,EAArC,EACIF,KAAK,IAAIL,GAAG,CAACO,EAAE,GAAG1K,CAAN,CAAH,CAAYzG,QAAZ,CAAqB,CAArB,EAAwBkR,KAAxB,CAA8B,CAA9B,CAAT;;AAEJR,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBnM,QAAQ,CAACyN,KAAD,EAAQ,CAAR,CAA5B,CAAP;AACAxK,OAAC,IAAIuK,WAAW,GAAG,CAAnB;AACH,KATD,MASO;AACHN,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBiB,GAAG,CAACnK,CAAD,CAAvB,CAAP;AACH;AACJ;;AAED,SAAOiK,GAAP;AACH;AAEM,SAASU,WAAT,CAAqBrV,GAArB,EAA0B;AAC7B,QAAM6U,GAAG,GAAG7U,GAAG,CAACsV,KAAJ,CAAU,EAAV,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI7K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAAG,CAACxP,MAAJ,GAAa,CAAjC,EAAoCqF,CAAC,EAArC,EAAyC;AACrC,QAAI8K,GAAG,GAAI,KAAKX,GAAG,CAACnK,CAAC,GAAG,CAAL,CAAS,GAAGmK,GAAG,CAACnK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAa,EAA/C;AACA6K,OAAG,IAAI5B,MAAM,CAACC,YAAP,CAAoB4B,GAApB,CAAP;AACH;;AAED,SAAOD,GAAP;AACH;AAEM,SAASE,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,SAAO,IAAI,8CAAJ,GAAa5B,iBAAb,CAA+B4B,QAA/B,CAAP;AACH;AAEM,SAAS1S,gBAAT,CAA0BiR,SAA1B,EAAqC;AACxC,MAAIU,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIjK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIuJ,SAAS,CAAC5O,MAA/B,EAAwCqF,CAAC,EAAzC,EACIiK,GAAG,IAAIH,WAAW,CAACP,SAAS,CAACvJ,CAAD,CAAV,CAAlB;;AAEJ,SAAOiK,GAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DD;AAEO,SAASgB,UAAT,CAAoBC,KAApB,EAA2B;AAC9B,SAAOjC,MAAM,CAACC,YAAP,CAAoB,GAAGgC,KAAvB,CAAP;AACH;AAEM,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACxC,MAAID,MAAM,CAACzQ,MAAP,IAAiB0Q,MAAM,CAAC1Q,MAA5B,EACI,OAAO,KAAP;AAEJ,MAAIqF,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoL,MAAM,CAACzQ,MAAvB,EAA+BqF,CAAC,EAAhC,EAAoC;AAChC,QAAIoL,MAAM,CAACpL,CAAD,CAAN,IAAaqL,MAAM,CAACrL,CAAD,CAAvB,EACI,OAAO,KAAP;AACP;;AAED,SAAO,IAAP;AACH;AAEM,SAASsL,aAAT,CAAuBrB,GAAvB,EAA4B;AAC/B,QAAMjC,KAAK,GAAG,IAAIwB,KAAJ,EAAd;AACA,MAAI+B,GAAJ;AACA,MAAItD,CAAJ;AAEAsD,KAAG,GAAGtB,GAAG,CAACtP,MAAV;;AAEA,OAAK,IAAIqF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuL,GAApB,EAAyBvL,CAAC,EAA1B,EAA8B;AAC1BiI,KAAC,GAAGgC,GAAG,CAACpB,UAAJ,CAAe7I,CAAf,CAAJ;;AAEA,QAAIiI,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AAChCD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAC/H,IAAN,CAAYgI,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KALD,MAKO,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,EAAN,GAAY,IAAb,GAAqB,IAAhC;AACAD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAC/H,IAAN,CAAYgI,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAJM,MAIA,IAAIA,CAAC,IAAI,QAAL,IAAiBA,CAAC,IAAI,QAA1B,EAAoC;AACvCD,WAAK,CAAC/H,IAAN,CAAagI,CAAC,IAAI,CAAN,GAAW,IAAZ,GAAoB,IAA/B;AACAD,WAAK,CAAC/H,IAAN,CAAYgI,CAAC,GAAG,IAAL,GAAa,IAAxB;AACH,KAHM,MAGAD,KAAK,CAAC/H,IAAN,CAAWgI,CAAC,GAAG,IAAf;AACV;;AAED,SAAOD,KAAP;AACH;AAEM,SAASkC,aAAT,CAAuBC,GAAvB,EAA4B;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EACI,OAAOA,GAAP;AAEJ,MAAIF,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIjK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAAG,CAACxP,MAAxB,EAAgCqF,CAAC,EAAjC,EAAqC;AACjC,UAAMoK,GAAG,GAAGD,GAAG,CAACnK,CAAD,CAAH,CAAOzG,QAAP,CAAgB,CAAhB,CAAZ;AACA,UAAM8Q,CAAC,GAAGD,GAAG,CAACE,KAAJ,CAAU,WAAV,CAAV;;AAEA,QAAID,CAAC,IAAID,GAAG,CAACzP,MAAJ,IAAc,CAAvB,EAA0B;AACtB,YAAM4P,WAAW,GAAGF,CAAC,CAAC,CAAD,CAAD,CAAK1P,MAAzB;AACA,UAAI6P,KAAK,GAAGL,GAAG,CAACnK,CAAD,CAAH,CAAOzG,QAAP,CAAgB,CAAhB,EAAmBkR,KAAnB,CAAyB,IAAIF,WAA7B,CAAZ;;AAEA,WAAK,IAAIG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,WAAtB,EAAmCG,EAAE,EAArC,EACIF,KAAK,IAAIL,GAAG,CAACO,EAAE,GAAG1K,CAAN,CAAH,CAAYzG,QAAZ,CAAqB,CAArB,EAAwBkR,KAAxB,CAA8B,CAA9B,CAAT;;AAEJR,SAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBnM,QAAQ,CAACyN,KAAD,EAAQ,CAAR,CAA5B,CAAP;AACAxK,OAAC,IAAIuK,WAAW,GAAG,CAAnB;AACH,KATD,MASON,GAAG,IAAIhB,MAAM,CAACC,YAAP,CAAoBiB,GAAG,CAACnK,CAAD,CAAvB,CAAP;AACV;;AAED,SAAOiK,GAAP;AACH;AAEM,SAASU,WAAT,CAAqBrV,GAArB,EAA0B;AAC7B,QAAM6U,GAAG,GAAG7U,GAAG,CAACsV,KAAJ,CAAU,EAAV,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAI7K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmK,GAAG,CAACxP,MAAJ,GAAa,CAAjC,EAAoCqF,CAAC,EAArC,EAAyC;AACrC,UAAM8K,GAAG,GAAI,KAAIX,GAAG,CAACnK,CAAC,GAAG,CAAL,CAAQ,GAAEmK,GAAG,CAACnK,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAY,EAA7C;AACA,UAAMwL,SAAS,GAAGvC,MAAM,CAACC,YAAP,CAAoB4B,GAApB,CAAlB;AAEAD,OAAG,IAAIW,SAAP;AACH;;AAED,SAAOX,GAAP;AACH;AAEM,SAASY,YAAT,CAAsBxD,CAAtB,EAAyB;AAC5B,MAAIyD,CAAC,GAAG,CAAR;AAEA,MAAIzD,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACIyD,CAAC,GAAGzD,CAAC,CAACY,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADJ,KAEK,IAAIZ,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDyD,CAAC,GAAGzD,CAAC,CAACY,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAlB,GAAsC,EAA1C,CADC,KAEA,IAAIZ,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACDyD,CAAC,GAAGzD,CAAC,CAACY,UAAF,CAAa,CAAb,IAAkB,IAAIA,UAAJ,CAAe,CAAf,CAAtB;AAEJ,SAAO6C,CAAP;AACH;AAEM,SAASC,SAAT,CAAmB1D,CAAnB,EAAsB;AACzB,MAAKA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAlB,IACCA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GADlB,IAECA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAFtB,EAE4B;AACxB,WAAO,CAAP;AACH;;AAED,SAAO,CAAP;AACH;AAEM,SAAS5P,gBAAT,CAA0B4R,GAA1B,EAA+B;AAClC,QAAMV,SAAS,GAAGC,KAAK,EAAvB;AACA,MAAIkC,CAAC,GAAG,CAAR;AACA,MAAIjE,CAAC,GAAG,CAAR;AACA,MAAImE,CAAC,GAAG,CAAR;;AAEA,OAAK,IAAI5L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiK,GAAG,CAACtP,MAAxB,EAAgCqF,CAAC,EAAjC,EAAqC;AACjC,UAAMiI,CAAC,GAAGgC,GAAG,CAACrO,MAAJ,CAAWoE,CAAX,CAAV;;AAEA,QAAI2L,SAAS,CAAC1D,CAAD,CAAb,EAAkB;AACdyD,OAAC,KAAK,CAAN;AACAA,OAAC,IAAID,YAAY,CAACxD,CAAD,CAAjB;AACAR,OAAC;;AAED,UAAI,MAAOA,CAAC,GAAG,CAAf,EAAmB;AACf8B,iBAAS,CAACqC,CAAC,EAAF,CAAT,GAAiBF,CAAjB;AACAA,SAAC,GAAG,CAAJ;AACH;AACJ;AACJ;;AAED,SAAOnC,SAAP;AACH;AAEM,SAASO,WAAT,CAAqBC,IAArB,EAA2B;AAC9B,QAAMC,UAAU,GAAG,kBAAnB;AACA,MAAIC,GAAG,GAAG,EAAV;AAEAA,KAAG,IAAID,UAAU,CAACpO,MAAX,CAAkBmO,IAAI,IAAI,CAA1B,CAAP;AACAE,KAAG,IAAID,UAAU,CAACpO,MAAX,CAAkBmO,IAAI,GAAG,IAAzB,CAAP;AAEA,SAAOE,GAAP;AACH;AAEM,SAAS3R,gBAAT,CAA0BiR,SAA1B,EAAqC;AACxC,SAAOA,SAAS,CAACzE,MAAV,CAAiB,CAACpM,MAAD,EAASqR,IAAT,KAAkB;AACtC,WAAOrR,MAAM,GAAGoR,WAAW,CAACC,IAAD,CAA3B;AACH,GAFM,EAEJ,EAFI,CAAP;AAGH;AAEM,SAASgB,sBAAT,CAAgCC,QAAhC,EAA0C;AAC7C,QAAMhH,CAAC,GAAG,IAAI,8CAAJ,EAAV;AACA,QAAM6H,WAAW,GAAG7H,CAAC,CAACoF,iBAAF,CAAoB4B,QAApB,CAApB;AAEA,SAAOa,WAAP;AACH;AAEM,SAASC,oBAAT,CAA8B9D,KAA9B,EAAqC;AACxC,QAAMhE,CAAC,GAAG,IAAI,8CAAJ,EAAV;AACA,QAAMgH,QAAQ,GAAGhH,CAAC,CAAC8E,gBAAF,CAAmBd,KAAnB,CAAjB;AAEA,SAAOgD,QAAP;AACH,C,CAED;;AACO,SAASe,SAAT,CAAmB9B,GAAnB,EAAwB;AAC3B,QAAM+B,QAAQ,GAAG/B,GAAG,CAACW,KAAJ,CAAU,GAAV,CAAjB;AACA,QAAMqB,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYpB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,QAAMsB,IAAI,GAAGnP,QAAQ,CAACkP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAArB;AACA,QAAME,KAAK,GAAGpP,QAAQ,CAACkP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,GAA4B,CAA1C;AACA,QAAMG,GAAG,GAAGrP,QAAQ,CAACkP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAApB;;AAEA,MAAID,QAAQ,CAACrR,MAAT,GAAkB,CAAtB,EAAyB;AACrB,UAAM0R,QAAQ,GAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYpB,KAAZ,CAAkB,GAAlB,CAAjB;AACA,UAAM0B,IAAI,GAAGvP,QAAQ,CAACsP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAArB;AACA,UAAME,MAAM,GAAGxP,QAAQ,CAACsP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,GAA4B,CAA3C;AACA,UAAMG,MAAM,GAAGzP,QAAQ,CAACsP,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAvB;AAEA,WAAO,IAAIrL,IAAJ,CAASkL,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BE,IAA3B,EAAiCC,MAAjC,EAAyCC,MAAzC,CAAP;AACH;;AAED,SAAO,IAAIxL,IAAJ,CAASkL,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,CAAP;AACH;AAEM,SAASK,QAAT,CAAkBxE,CAAlB,EAAqB;AACxB,MAAIA,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EACI,OAAO,CAAP;AAEJ,SAAO,CAAP;AACH,C,CAED;AACA;AACA;AACA;;AACO,SAASyE,aAAT,CAAuBzC,GAAvB,EAA4B;AAC/B,MAAI,QAAQA,GAAZ,EACI,OAAO,CAAC,CAAR;AAEJ,MAAI,OAAQA,GAAR,IAAgB,QAApB,EACI,OAAO,CAAC,CAAR;AAEJ,MAAIA,GAAG,CAACtP,MAAJ,IAAc,CAAd,IAAmBsP,GAAG,IAAI,EAA9B,EACI,OAAO,CAAC,CAAR;AAEJ,MAAIjK,CAAC,GAAG,CAAR;;AAEA,MAAIiK,GAAG,CAACtP,MAAJ,IAAc,EAAlB,EAAsB;AAClB,WAAOqF,CAAC,GAAG,EAAX,EAAeA,CAAC,EAAhB,EAAoB;AAChB,UAAIiI,CAAC,GAAGgC,GAAG,CAACrO,MAAJ,CAAWoE,CAAX,CAAR;AAEA,UAAI,CAAC2L,SAAS,CAAC1D,CAAD,CAAd,EACI;AACP;AACJ;;AAED,MAAIjI,CAAC,IAAI,EAAT,EACI,OAAO,CAAP,CAtB2B,CAsBjB;;AAEd,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiK,GAAG,CAACtP,MAApB,EAA4BqF,CAAC,EAA7B,EAAiC;AAC7B,QAAIiI,CAAC,GAAGgC,GAAG,CAACrO,MAAJ,CAAWoE,CAAX,CAAR;AAEA,QAAI,CAACyM,QAAQ,CAACxE,CAAD,CAAb,EACI;AACP;;AAED,MAAIjI,CAAC,IAAIiK,GAAG,CAACtP,MAAb,EACI,OAAO,CAAP,CAhC2B,CAgCjB;;AAEd,OAAKqF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiK,GAAG,CAACtP,MAApB,EAA4BqF,CAAC,EAA7B,EAAiC;AAC7B,QAAIiI,CAAC,GAAGgC,GAAG,CAACrO,MAAJ,CAAWoE,CAAX,CAAR;AAEA,QAAIiI,CAAC,GAAG,GAAR,EACI,OAAO,CAAP,CAJyB,CAIf;AACjB;;AAED,SAAO,CAAC,CAAR;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7OD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAAS9P,qBAAT,CAA+BwO,YAA/B,EAA6C;AAChD,QAAMgG,KAAK,GAAGC,MAAM,CAACjG,YAAD,CAApB;AACA,QAAMkG,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AAEA,MAAIG,QAAQ,GAAGD,KAAK,CAACpC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAf;AACAqC,UAAQ,GAAGnG,YAAY,CAACoG,MAAb,CAAoBD,QAApB,CAAX;AAEA,SAAO,wDAAQ,CAACA,QAAD,CAAf;AACH;AAEM,SAASvU,mBAAT,CAA6ByU,WAA7B,EAA0C;AAC7C,MAAI,OAAQA,WAAR,IAAwB,QAA5B,EACI,OAAO,KAAP;AAEJ,MAAIA,WAAW,CAACrS,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,MAAItE,OAAO,GAAG,wDAAQ,CAAC2W,WAAD,CAAtB;AAEA,MAAIA,WAAW,CAACrS,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,QAAM4Q,GAAG,GAAGlV,OAAO,CAACsE,MAApB;AACA,QAAM6I,MAAM,GAAG+H,GAAG,GAAG,CAArB;AACA,QAAMuB,QAAQ,GAAGzW,OAAO,CAACoU,KAAR,CAAcjH,MAAd,CAAjB;AAEAnN,SAAO,GAAGA,OAAO,CAACoU,KAAR,CAAc,CAAd,EAAiBjH,MAAjB,CAAV;AAEA,QAAMmJ,KAAK,GAAGC,MAAM,CAACvW,OAAD,CAApB;AACA,QAAMwW,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,QAAMM,SAAS,GAAGJ,KAAK,CAACpC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAIqC,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAO5W,OAAP;AACH;;AAED,SAAO,8DAAgB,CAAC,4CAAD,CAAvB;AACH;AAEM,SAAS6P,eAAT,CAAyBO,WAAzB,EAAsCzJ,WAAtC,EAAmD;AACtD,MAAI,OAAOyJ,WAAP,KAAuB,QAA3B,EACIA,WAAW,GAAG,8DAAgB,CAACA,WAAD,CAA9B;AAEJ,QAAMyG,IAAI,GAAGlQ,WAAW,CAACkQ,IAAzB;AACA,QAAMjH,SAAS,GAAGkH,SAAS,CAAC,8DAAgB,CAACD,IAAD,CAAjB,EAAyBzG,WAAzB,CAA3B;AAEAzJ,aAAW,CAACiJ,SAAZ,GAAwB,CAAEA,SAAF,CAAxB;AACA,SAAOjJ,WAAP;AACH;AAEM,SAASoQ,mBAAT,CAA6BrJ,CAA7B,EAAgC;AACnC,SAAOsJ,IAAI,CAACpE,MAAM,CAACC,YAAP,CAAoB,GAAGnF,CAAvB,CAAD,CAAX;AACH;AAEM,SAASuJ,SAAT,CAAmB3Y,UAAnB,EAA+B4Y,QAA/B,EAAyC;AAC5C,MAAI,OAAO5Y,UAAP,KAAsB,QAA1B,EACIA,UAAU,GAAG,8DAAgB,CAACA,UAAD,CAA7B;AAEJ,QAAM6Y,SAAS,GAAGZ,MAAM,CAACW,QAAD,CAAxB;AACA,QAAMD,SAAS,GAAGH,SAAS,CAACK,SAAD,EAAY7Y,UAAZ,CAA3B;AAEA,SAAO2Y,SAAP;AACH;AAEM,SAASG,gCAAT,CAA0CC,UAA1C,EAAsD;AACzD,QAAMC,WAAW,GAAG,oEAAsB,CAACD,UAAD,CAA1C;AACA,QAAM1Q,WAAW,GAAG4Q,KAAK,CAACC,QAAN,CAAeC,WAAf,CAA2BC,iBAA3B,CAA6CJ,WAA7C,CAApB;AACA,QAAMK,GAAG,GAAGhR,WAAW,CAACiR,UAAZ,EAAZ;AAEA,SAAOD,GAAG,CAACE,eAAJ,EAAP;AACH;AAEM,SAASC,SAAT,GAAqB;AACxB,QAAMC,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAM3Y,GAAG,GAAG2Y,EAAE,CAACC,UAAH,EAAZ;AACA,QAAMC,MAAM,GAAG7Y,GAAG,CAAC8Y,UAAJ,EAAf;AAEA,MAAIC,SAAS,GAAGF,MAAM,CAAC/U,QAAP,CAAgB,KAAhB,CAAhB;;AAEA,SAAOiV,SAAS,CAAC7T,MAAV,GAAmB,EAA1B,EAA8B;AAC1B6T,aAAS,GAAI,IAAGA,SAAU,EAA1B;AACH;;AAED,SAAO,8DAAgB,CAACA,SAAD,CAAvB;AACH;AAEM,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,MAAIA,QAAQ,CAAC/T,MAAT,KAAoB,EAAxB,EACI+T,QAAQ,GAAGA,QAAQ,CAACjE,KAAT,CAAe,CAAf,CAAX;AAEJ,QAAMkE,IAAI,GAAG,yDAAS,CAACD,QAAD,CAAT,CAAoBnV,QAApB,EAAb;AACA,QAAMqV,UAAU,GAAG,uDAAc,GAAGD,IAAI,CAACE,SAAL,CAAe,EAAf,CAApC;AAEA,SAAO,8DAAgB,CAACD,UAAD,CAAvB;AACH;AAEM,SAASE,oBAAT,CAA8BrI,WAA9B,EAA2C;AAC9C,MAAIiI,QAAQ,GAAGK,mBAAmB,CAACtI,WAAD,CAAlC;AACA,SAAOgI,cAAc,CAACC,QAAD,CAArB;AACH;AAEM,SAASM,aAAT,CAAuBC,UAAvB,EAAmC;AACtC,QAAMC,WAAW,GAAG,wDAAQ,CAACD,UAAD,CAA5B;AAEA,MAAIC,WAAW,CAACvU,MAAZ,IAAsB,CAA1B,EACI,OAAO,KAAP;AAEJ,QAAMwU,UAAU,GAAGD,WAAW,CAACzE,KAAZ,CAAkB,CAAlB,EAAqByE,WAAW,CAACvU,MAAZ,GAAqB,CAA1C,CAAnB;AACA,QAAMgS,KAAK,GAAGC,MAAM,CAACuC,UAAD,CAApB;AACA,QAAMtC,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;;AAEA,MAAIE,KAAK,CAAC,CAAD,CAAL,KAAaqC,WAAW,CAACC,UAAU,CAACxU,MAAZ,CAAxB,IACAkS,KAAK,CAAC,CAAD,CAAL,KAAaqC,WAAW,CAACC,UAAU,CAACxU,MAAX,GAAoB,CAArB,CADxB,IAEAkS,KAAK,CAAC,CAAD,CAAL,KAAaqC,WAAW,CAACC,UAAU,CAACxU,MAAX,GAAoB,CAArB,CAFxB,IAGAkS,KAAK,CAAC,CAAD,CAAL,KAAaqC,WAAW,CAACC,UAAU,CAACxU,MAAX,GAAoB,CAArB,CAH5B,EAGqD;AACjD,WAAOwU,UAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASvU,cAAT,CAAwBwU,SAAxB,EAAmC;AACtC,MAAI,OAAQA,SAAR,KAAuB,QAA3B,EACI,OAAO,KAAP;AAEJ,MAAIA,SAAS,CAACzU,MAAV,KAAqB,qDAAzB,EACI,OAAO,KAAP;AAEJ,MAAItE,OAAO,GAAG,wDAAQ,CAAC+Y,SAAD,CAAtB;AAEA,MAAI/Y,OAAO,CAACsE,MAAR,KAAmB,EAAvB,EACI,OAAO,KAAP;AAEJ,MAAItE,OAAO,CAAC,CAAD,CAAP,KAAe,4DAAnB,EACI,OAAO,KAAP;AAEJ,QAAMyW,QAAQ,GAAGzW,OAAO,CAACoU,KAAR,CAAc,EAAd,CAAjB;AACApU,SAAO,GAAGA,OAAO,CAACoU,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAV;AAEA,QAAMkC,KAAK,GAAGC,MAAM,CAACvW,OAAD,CAApB;AACA,QAAMwW,KAAK,GAAGD,MAAM,CAACD,KAAD,CAApB;AACA,QAAMM,SAAS,GAAGJ,KAAK,CAACpC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlB;;AAEA,MAAIqC,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAxB,IAA+BH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAAvD,IAA8DH,QAAQ,CAAC,CAAD,CAAR,IAC9DG,SAAS,CAAC,CAAD,CADT,IACgBH,QAAQ,CAAC,CAAD,CAAR,IAAeG,SAAS,CAAC,CAAD,CAD5C,EAEE;AACE,WAAO,IAAP;AACH;;AAED,SAAO,KAAP;AACH;AAEM,SAASoC,2CAAT,CAAqDC,kBAArD,EAAyE;AAC5E,QAAM7I,WAAW,GAAG,oEAAsB,CAAC6I,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACtI,WAAD,CAApC;AACA,QAAME,YAAY,GAAG8H,cAAc,CAACC,QAAD,CAAnC;AAEA,SAAOvW,qBAAqB,CAACwO,YAAD,CAA5B;AACH;AAEM,SAAS4I,sCAAT,CAAgDD,kBAAhD,EAAoE;AACvE,QAAM7I,WAAW,GAAG,oEAAsB,CAAC6I,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACtI,WAAD,CAApC;AACA,QAAME,YAAY,GAAG8H,cAAc,CAACC,QAAD,CAAnC;AACA,QAAME,UAAU,GAAG,+DAAgB,CAACjI,YAAD,CAAnC;AAEA,SAAOiI,UAAP;AACH;AAEM,SAASY,gCAAT,CAA0CF,kBAA1C,EAA8D;AACjE,QAAM7I,WAAW,GAAG,oEAAsB,CAAC6I,kBAAD,CAA1C;AACA,QAAMZ,QAAQ,GAAGK,mBAAmB,CAACtI,WAAD,CAApC;AACA,QAAME,YAAY,GAAG8H,cAAc,CAACC,QAAD,CAAnC;AACA,QAAMe,aAAa,GAAG,kEAAoB,CAAC9I,YAAD,CAA1C;AAEA,SAAO8I,aAAP;AACH;AAEM,SAASV,mBAAT,CAA6BtI,WAA7B,EAA0C;AAC7C,QAAM2H,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAM3Y,GAAG,GAAG2Y,EAAE,CAACsB,cAAH,CAAkBjJ,WAAlB,EAA+B,OAA/B,CAAZ;AACA,QAAMkJ,MAAM,GAAGla,GAAG,CAACma,SAAJ,EAAf;AACA,QAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AACA,QAAMC,CAAC,GAAGH,MAAM,CAACG,CAAjB;AAEA,MAAIC,IAAI,GAAGF,CAAC,CAACtW,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOwW,IAAI,CAACpV,MAAL,GAAc,EAArB,EAAyB;AACrBoV,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,MAAIC,IAAI,GAAGF,CAAC,CAACvW,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOyW,IAAI,CAACrV,MAAL,GAAc,EAArB,EAAyB;AACrBqV,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,QAAMC,SAAS,GAAI,KAAIF,IAAK,GAAEC,IAAK,EAAnC;AACA,QAAME,WAAW,GAAG,8DAAgB,CAACD,SAAD,CAApC;AAEA,SAAOC,WAAP;AACH;AAEM,SAAS/C,SAAT,CAAmBK,SAAnB,EAA8B/G,WAA9B,EAA2C;AAC9C,QAAM2H,EAAE,GAAG,IAAI,2CAAJ,CAAO,WAAP,CAAX;AACA,QAAM3Y,GAAG,GAAG2Y,EAAE,CAACsB,cAAH,CAAkBjJ,WAAlB,EAA+B,OAA/B,CAAZ;AACA,QAAMR,SAAS,GAAGxQ,GAAG,CAACuQ,IAAJ,CAASwH,SAAT,CAAlB;AACA,QAAM2C,CAAC,GAAGlK,SAAS,CAACkK,CAApB;AACA,QAAMC,CAAC,GAAGnK,SAAS,CAACmK,CAApB;AACA,QAAMC,EAAE,GAAGpK,SAAS,CAACqK,aAArB;AAEA,MAAIC,IAAI,GAAGJ,CAAC,CAAC5W,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOgX,IAAI,CAAC5V,MAAL,GAAc,EAArB,EAAyB;AACrB4V,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,MAAIC,IAAI,GAAGJ,CAAC,CAAC7W,QAAF,CAAW,KAAX,CAAX;;AAEA,SAAOiX,IAAI,CAAC7V,MAAL,GAAc,EAArB,EAAyB;AACrB6V,QAAI,GAAI,IAAGA,IAAK,EAAhB;AACH;;AAED,QAAMC,KAAK,GAAG,0DAAW,CAACJ,EAAD,CAAzB;AACA,QAAMK,OAAO,GAAGH,IAAI,GAAGC,IAAP,GAAcC,KAA9B;AAEA,SAAOC,OAAP;AACH;AAEM,SAAS9D,MAAT,CAAgB+D,QAAhB,EAA0B;AAC7B,QAAMC,MAAM,GAAG,IAAI,4CAAJ,CAAU,SAAV,EAAqB,KAArB,CAAf;AACA,QAAMC,MAAM,GAAG,+DAAgB,CAACF,QAAD,CAA/B;AAEAC,QAAM,CAACE,MAAP,CAAcD,MAAd;AACA,QAAME,OAAO,GAAGH,MAAM,CAACI,OAAP,CAAe,KAAf,CAAhB;AAEA,SAAO,8DAAgB,CAACD,OAAD,CAAvB;AACH;AAEM,SAASE,iBAAT,CAA2B1V,QAA3B,EAAqC;AACxC,QAAM2V,eAAe,GAAG,oEAAsB,CAAC3V,QAAD,CAA9C;AACA,QAAM4V,gBAAgB,GAAGrC,oBAAoB,CAACoC,eAAD,CAA7C;AAEA,SAAO/Y,qBAAqB,CAACgZ,gBAAD,CAA5B;AACH;AAEM,SAAS3Y,WAAT,CAAqB7D,UAArB,EAAiC;AACpC,QAAMuc,eAAe,GAAG,8DAAgB,CAACvc,UAAD,CAAxC;AACA,QAAMwc,gBAAgB,GAAGrC,oBAAoB,CAACoC,eAAD,CAA7C;AAEA,SAAO/Y,qBAAqB,CAACgZ,gBAAD,CAA5B;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;ACxQD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAMtR,KAAK,GAAG;AACVtI,YAAU,CAAC4E,GAAD,EAAM;AACZ,WAAO,gDAAS,CAACiV,KAAV,CAAgBjV,GAAhB,EAAqB;AACxBkV,eAAS,EAAE,CAAE,MAAF,EAAU,OAAV;AADa,KAArB,CAAP;AAGH,GALS;;AAOV1V,UAAQ,CAAC2V,GAAD,EAAM;AACV,WAAOA,GAAG,KAAK1a,MAAM,CAAC0a,GAAD,CAAd,IAAuB1a,MAAM,CAAC2a,SAAP,CAAiBhY,QAAjB,CAA0BiY,IAA1B,CAA+BF,GAA/B,MAAwC,gBAAtE;AACH,GATS;;AAWVpS,SAAO,CAACgM,KAAD,EAAQ;AACX,WAAO1B,KAAK,CAACtK,OAAN,CAAcgM,KAAd,CAAP;AACH,GAbS;;AAeVuG,QAAM,CAAC/Y,MAAD,EAAS;AACX,QAAI;AACA,aAAO,CAAC,CAACM,IAAI,CAACiG,KAAL,CAAWvG,MAAX,CAAT;AACH,KAFD,CAEE,OAAOyH,EAAP,EAAW;AACT,aAAO,KAAP;AACH;AACJ,GArBS;;AAuBVvH,WAAS,CAAC8Y,IAAD,EAAO;AACZ,WAAO,OAAOA,IAAP,KAAgB,SAAvB;AACH,GAzBS;;AA2BV5Y,aAAW,CAACkB,MAAD,EAAS;AAChB,WAAOA,MAAM,KAAKA,MAAM,YAAY,mDAAlB,IAAgCA,MAAM,CAACzF,WAAP,IAAsByF,MAAM,CAACzF,WAAP,CAAmBkM,IAAnB,KAA4B,WAAvF,CAAb;AACH,GA7BS;;AA+BV7L,UAAQ,CAAC8D,MAAD,EAAS;AACb,WAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA+BA,MAAM,IAAIA,MAAM,CAACnE,WAAjB,IAAgCmE,MAAM,CAACnE,WAAP,CAAmBkM,IAAnB,KAA4B,QAAlG;AACH,GAjCS;;AAmCV7D,YAAU,CAAC0U,GAAD,EAAM;AACZ,WAAO,OAAOA,GAAP,KAAe,UAAtB;AACH,GArCS;;AAuCVrZ,OAAK,CAACS,MAAD,EAAS;AACV,WAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACgD,KAAK,CAACqB,QAAQ,CAACrE,MAAD,EAAS,EAAT,CAAT,CAA3C;AACH,GAzCS;;AA2CVxC,WAAS,CAAC8D,MAAD,EAAS;AACd,WAAO2X,MAAM,CAACzb,SAAP,CACHyb,MAAM,CAAC3X,MAAD,CADH,CAAP;AAGH,GA/CS;;AAiDV5C,aAAW,CAACka,GAAD,EAAMM,QAAN,EAAgB;AACvB,WAAOhb,MAAM,CAAC2a,SAAP,CAAiBM,cAAjB,CAAgCL,IAAhC,CAAqCF,GAArC,EAA0CM,QAA1C,CAAP;AACH,GAnDS;;AAqDV1V,eAAa,CAACoV,GAAD,EAAM,GAAGQ,UAAT,EAAqB;AAC9B,WAAOA,UAAU,CAACnX,MAAX,IAAqB,CAACmX,UAAU,CAACzT,GAAX,CAAeuT,QAAQ,IAAI;AACpD,aAAO,KAAKxa,WAAL,CAAiBka,GAAjB,EAAsBM,QAAtB,CAAP;AACH,KAF4B,EAE1BhO,QAF0B,CAEjB,KAFiB,CAA7B;AAGH,GAzDS;;AA2DV9N,eAAa,CAACsJ,IAAD,EAAO,GAAGkD,IAAV,EAAgB;AACzB,WAAO,IAAIyP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC7S,UAAI,CAAC,GAAGkD,IAAJ,EAAU,CAACrF,GAAD,EAAMiV,GAAN,KAAc;AACxB,YAAGjV,GAAH,EACIgV,MAAM,CAAChV,GAAD,CAAN,CADJ,KAEK+U,OAAO,CAACE,GAAD,CAAP;AACR,OAJG,CAAJ;AAKH,KANM,CAAP;AAOH,GAnES;;AAqEVnc,iBAAe,CAACoc,KAAD,EAAQ;AACnB,WAAO,CAAC/S,IAAD,EAAO,GAAGkD,IAAV,KAAmB;AACtB,aAAO,KAAKxM,aAAL,CAAmBsJ,IAAI,CAACgT,IAAL,CAAUD,KAAV,CAAnB,EAAqC,GAAG7P,IAAxC,CAAP;AACH,KAFD;AAGH;;AAzES,CAAd;AA4EA,+DAAe,EACX,GAAGzC,KADQ;AAEXzH,EAAA,wCAFW;AAGX6C,EAAA,gDAHW;AAIX1F,EAAA,4CAJW;AAKXyS,EAAA,0CALW;AAMX9P,EAAA,4CAAMA;AANK,CAAf,E;;;;;;;;;;;ACrFA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,sC","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest')\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = +blockID;\n    }\n\n    setPrivateKey(privateKey) {\n        // Set address first as it clears the private key\n        this.setAddress(\n            this.address.fromPrivateKey(privateKey)\n        );\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: this.address.toHex(address),\n            base58: this.address.fromHex(address)\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    // TODO\n    getEventResult(contractAddress, eventName, blockNumber, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n    }\n\n    // TODO\n    getEventByTransacionID(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address;\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                );\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(address = this.tronWeb.defaultAddress.hex, amount = 0, duration = 3, callback = false) {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.freezeBalance, address, amount, duration);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 0,\n            callValue = 0,\n            bandwidthLimit = 0\n        } = options;\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(bandwidthLimit) || bandwidthLimit < 0 || bandwidthLimit > 100)\n            return callback('Invalid options.bandwidthLimit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: bandwidthLimit,\n            abi: JSON.stringify(abi),\n            bytecode\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n            parameters = [];\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(!value)\n                    return callback('Invalid parameter value provided: ' + value);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n}","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey);\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction', \n            signedTransaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.signTransaction(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.signTransaction(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url, {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}